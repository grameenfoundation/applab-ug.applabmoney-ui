From 2ee2e1178589e8e5418bb4f9b3ef04a5c6b1efae Mon, 16 Jul 2012 16:43:53 +0300
From: Sara <snantagya@applab.org>
Date: Wed, 11 Jul 2012 15:15:25 +0300
Subject: [PATCH] Admin UI patch to include UssdMenu Setup Files

diff --git a/WebContent/WEB-INF/classes/hibernate.cfg.xml b/WebContent/WEB-INF/classes/hibernate.cfg.xml
new file mode 100644
index 0000000..f80120e
--- /dev/null
+++ b/WebContent/WEB-INF/classes/hibernate.cfg.xml
@@ -0,0 +1,48 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE hibernate-configuration PUBLIC
+    "-//Hibernate/Hibernate Configuration DTD//EN"
+    "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">
+
+<hibernate-configuration>
+	<session-factory>
+	
+	<!-- SQL dialect -->
+        <property name="dialect">org.hibernate.dialect.MySQL5Dialect</property>
+
+        <!-- Echo all executed SQL to stdout -->
+        <property name="show_sql">true</property>
+
+        <!-- Enable Hibernate's automatic session context management -->
+         <!--<property name="current_session_context_class">thread</property>-->
+       <!-- <property name="hibernate.jdbc.batch_size">20</property> -->
+
+        <!-- MySQL connection -->
+        <property name="connection.url">jdbc:mysql://localhost:3306/applabmoney</property>
+        <property name="connection.username">root</property>
+        <property name="connection.driver_class">com.mysql.jdbc.Driver</property>
+        <property name="connection.password">root123</property>
+
+        <!-- JDBC connection pool (use the built-in) 
+        <property name="connection.pool_size">1</property>-->
+
+        <!-- Disable the second-level cache 
+        <property name="cache.provider_class">org.hibernate.cache.NoCacheProvider</property>-->
+        
+        
+		<mapping class="metomeui.model.AccountType"/>
+		<mapping class="metomeui.model.Contact"/>
+		<mapping class="metomeui.model.ContactForm"/>
+		<mapping class="metomeui.model.Message"/>
+		<mapping class="metomeui.model.Language"/>
+		<mapping class="metomeui.model.User"/>
+		<mapping class="metomeui.model.Login"/>
+		<mapping class="metomeui.model.MemoGroup"/>
+		<mapping class="metomeui.model.UssdPredefInputItem"/>
+		<mapping class="metomeui.model.UssdPredefInput"/>
+		<mapping class="metomeui.model.UssdKeywordStep"/>
+		<mapping class="metomeui.model.UssdMenuItem"/>
+		<mapping class="metomeui.model.UssdTransactionKeyword"/>
+		<mapping class="metomeui.model.UssdRequest"/>
+	</session-factory>
+
+</hibernate-configuration>
\ No newline at end of file
diff --git a/WebContent/WEB-INF/classes/messages.properties b/WebContent/WEB-INF/classes/messages.properties
index 15d0c29..fbaf39e 100644
--- a/WebContent/WEB-INF/classes/messages.properties
+++ b/WebContent/WEB-INF/classes/messages.properties
@@ -1,4 +1,5 @@
-typeMismatch = Expected a Number 
+test.typeMismatch = Expected a Number
+predefInputItemOrder.typeMismatch = Expected a Number for Order
 name.required = Setting Name is required
 precedence.required = Precedence is required
 maxPasswordLength.required = Maximum Password Length is required
@@ -25,19 +26,29 @@
 menuItemOrder.wrongformat = Wrong format for Menu Item Order! It should be whole Numbers!!
 menuItemParentId.required = Please select a parent Id to link to
 menuItemKeywordId.required = Keyword ID is required. Please select one.
+menuItemName.duplicate = Menu Item Name is already in use, please specify another one
+menuItemCode.duplicate = Menu Item Code is already in use, please specify another one
 keywordId.required = Please specify the Keyword Name
 keywordName.required = Please specify the Keyword Name
 keywordCode.required = Please specify the Keyword Code
+keywordCode.lengthLimit = The Keyword Code length limit of 10 characters has been exceeded
 keywordStepsCount.required = Please specify the Keyword Steps Count
+keywordName.duplicate = Keyword Name is already in use, please specify another one
+keywordCode.duplicate = Keyword Code is already in use, please specify another one
 predefInputName.required = Please specify the Predefined Input Name
+predefInputNameduplicate = PredefInput Name is already in use, please specify another one
 predefInputId.required =  You specified that this Keyword Step has a predefined input, Please select one predefined
 stepMenuName.required = Please specify the Step Menu Name
+stepMenuName.duplicate = Step Menu Name specified is already in use, please specify another one
 stepMenuNumber.required = Please specify the Step Menu Number
 stepMenuNumber.wrongformat = Wrong format for Menu Step Number! It should be whole Numbers!!
+stepMenuNumber.duplicate = Step Menu Number is already in use, please specify another one
 fixedValue.required = Please specify the Fixed Value
 stepPosition.required = You can not specify this step as both first and Last, Please select only one of the two options
 predefInputItemName.required = Please specify the Predefined Input Item Name
+predefInputItemName.duplicate = predefInput Item Name is already in use, please specify another one
+predefInputItemCode.lengthLimit = The PredefInput Item Code length limit of 10 characters has been exceeded
 predefInputItemCode.required = Please specify the Predefined Input Item Code
 predefInputItemOrder.required = Please specify the Predefined Input Item Order
 predefInputId.required = You are required to select atleast one predefined input for which you are defining this item
-predefInputItemOrder.typeMismatch = Expected a number for the predefined input order
\ No newline at end of file
+predefInputItemOrder.wrongformat = Expected a number for the predefined input order
\ No newline at end of file
diff --git a/WebContent/WEB-INF/jdbc.properties b/WebContent/WEB-INF/jdbc.properties
index 7d61c0b..74d12d7 100644
--- a/WebContent/WEB-INF/jdbc.properties
+++ b/WebContent/WEB-INF/jdbc.properties
@@ -2,5 +2,7 @@
 database.url=jdbc:mysql://localhost/applabmoney
 database.user=root
 database.password=root123
+database.max_connections=339
 hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
-hibernate.show_sql=true
\ No newline at end of file
+hibernate.show_sql=true
+hibernate.current_session_context_class=thread
\ No newline at end of file
diff --git a/WebContent/WEB-INF/metomeui-servlet.xml b/WebContent/WEB-INF/metomeui-servlet.xml
index 9438e70..2ce7d86 100644
--- a/WebContent/WEB-INF/metomeui-servlet.xml
+++ b/WebContent/WEB-INF/metomeui-servlet.xml
@@ -1,94 +1,91 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<beans xmlns="http://www.springframework.org/schema/beans"
-	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
-	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
-	xmlns:context="http://www.springframework.org/schema/context"
-
-	xsi:schemaLocation=" http://www.springframework.org/schema/beans
-	    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
-	    http://www.springframework.org/schema/context
-	    http://www.springframework.org/schema/context/spring-context-3.0.xsd
-	    http://www.springframework.org/schema/mvc
-	    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
-	    http://www.springframework.org/schema/tx
-	    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
-
-
-	<!-- the application context definition for the anathatest DispatcherServlet -->
-
-	<context:property-placeholder location="/WEB-INF/jdbc.properties" />
-
-	<tx:annotation-driven transaction-manager="hibernateTransactionManager" />
-
-	<!-- Enables the Spring MVC @Controller programming model -->
-	<mvc:annotation-driven />
-
-	<!-- Handles HTTP GET requests for /resources/** by efficiently serving -->
-	<!-- up static resources in the ${webappRoot}/resources directory -->
-	<!-- <mvc:resources mapping="/resources/**" location="/resources/" /> -->
-
-	<context:component-scan base-package="metomeui" />
-
-	<bean id="viewResolver"
-		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
-		<property name="viewClass"
-			value="org.springframework.web.servlet.view.JstlView"></property>
-		<property name="prefix" value="/jsp/"></property>
-		<property name="suffix" value=".jsp"></property>
-	</bean>
-
-	<bean id="messageSource"
-		class="org.springframework.context.support.ResourceBundleMessageSource"
-		p:basename="messages">
-	</bean>
-
-	<bean id="dataSource"
-		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
-		<property name="driverClassName" value="${database.driver}" />
-		<property name="url" value="${database.url}" />
-		<property name="username" value="${database.user}" />
-		<property name="password" value="${database.password}" />
-	</bean>
-
-	<bean id="passwordSettingsValidator" class="metomeui.validator.PasswordSettingsValidator" />
-	<bean id="msisdnSettingsValidator" class="metomeui.validator.MsisdnSettingsValidator" />
-	<bean id="transactionSettingsValidator" class="metomeui.validator.TransactionSettingsValidator" />
-
-	<bean id="sessionFactory"
-		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
-		<property name="dataSource" ref="dataSource" />
-		<property name="annotatedClasses">
-			<list>
-				<value>metomeui.model.User</value>
-				<value>metomeui.model.UssdPredefInputItem</value>
-				<value>metomeui.model.UssdPredefInput</value>
-				<value>metomeui.model.UssdKeywordStep</value>
-				<value>metomeui.model.UssdMenuItem</value>
-				<value>metomeui.model.UssdTransactionKeyword</value>
-				<value>metomeui.model.UssdRequest</value>
-			</list>
-		</property>
-		<property name="hibernateProperties">
-			<props>
-				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
-				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
-			</props>
-		</property>
-	</bean>
-
-	<bean id="hibernateTransactionManager"
-		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
-		<property name="sessionFactory" ref="sessionFactory" />
-	</bean>
-
-	<!-- <property name="sessionFactory"> <ref bean="sessionFactory"/> </property> 
-		</bean> <bean id="educationDAO" class="com.rhi.domain.common.data.hibernate.EducationDAO"> 
-		<property name="sessionFactory"> <ref bean="sessionFactory"/> </property> 
-		</bean> <bean id="logonInfoDAO" class="com.rhi.domain.common.data.hibernate.LogonInfoDAO"> 
-		<property name="sessionFactory"> <ref bean="sessionFactory"/> </property> 
-		</bean> <bean id="registrationAO" class="com.rhi.domain.registration.app.RegistrationAO"> 
-		<property name="educationDAO"><ref bean="educationDAO"/></property> <property 
-		name="logonInfoDAO"><ref bean="logonInfoDAO"/></property> </bean> </beans> -->
-
+<?xml version="1.0" encoding="UTF-8"?>
+
+<beans xmlns="http://www.springframework.org/schema/beans"
+	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
+	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
+	xmlns:context="http://www.springframework.org/schema/context"
+
+	xsi:schemaLocation=" http://www.springframework.org/schema/beans
+	    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
+	    http://www.springframework.org/schema/context
+	    http://www.springframework.org/schema/context/spring-context-3.0.xsd
+	    http://www.springframework.org/schema/mvc
+	    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
+	    http://www.springframework.org/schema/tx
+	    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
+
+
+	<!-- the application context definition for the anathatest DispatcherServlet -->
+
+	<context:property-placeholder location="/WEB-INF/jdbc.properties" />
+
+	<tx:annotation-driven transaction-manager="hibernateTransactionManager" />
+
+	<!-- Enables the Spring MVC @Controller programming model -->
+	<mvc:annotation-driven />
+
+	<!-- Handles HTTP GET requests for /resources/** by efficiently serving -->
+	<!-- up static resources in the ${webappRoot}/resources directory -->
+	<!-- <mvc:resources mapping="/resources/**" location="/resources/" /> -->
+
+	<context:component-scan base-package="metomeui" />
+
+	<bean id="viewResolver"
+		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
+		<property name="viewClass"
+			value="org.springframework.web.servlet.view.JstlView"></property>
+		<property name="prefix" value="/jsp/"></property>
+		<property name="suffix" value=".jsp"></property>
+	</bean>
+
+	<bean id="messageSource"
+		class="org.springframework.context.support.ResourceBundleMessageSource"
+		p:basename="messages">
+	</bean>
+
+	<bean id="dataSource"
+		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
+		<property name="driverClassName" value="${database.driver}" />
+		<property name="url" value="${database.url}" />
+		<property name="username" value="${database.user}" />
+		<property name="password" value="${database.password}" />
+	</bean>
+
+	<bean id="passwordSettingsValidator" class="metomeui.validator.PasswordSettingsValidator" />
+	<bean id="msisdnSettingsValidator" class="metomeui.validator.MsisdnSettingsValidator" />
+	<bean id="transactionSettingsValidator" class="metomeui.validator.TransactionSettingsValidator" />
+	<bean id="ussdMenuValidator" class="metomeui.validator.UssdMenuValidator" />
+
+	<bean id="sessionFactory"
+		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
+		<property name="dataSource" ref="dataSource"/>
+		<!--  <property name="configurationClass">
+            <value>org.hibernate.cfg.AnnotationConfiguration</value>
+        </property>
+		<property name="configLocation">
+            <value>classpath:hibernate.cfg.xml</value></property> -->
+		<property name="hibernateProperties">
+			<props>
+
+				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
+				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
+			</props>
+		</property>
+		<property name="packagesToScan" value="metomeui.model" />
+		<!-- <property name="annotatedClasses"> <list> <value>metomeui.model.AccountType</value> 
+			<value>metomeui.model.Language</value> <value>metomeui.model.Login</value> 
+			<value>metomeui.model.MemoGroup</value> <value>metomeui.model.Message</value> 
+			<value>metomeui.model.SystemConfiguration</value> <value>metomeui.model.User</value> 
+			<value>metomeui.model.UssdPredefInputItem</value> <value>metomeui.model.UssdPredefInputAndItem</value> 
+			<value>metomeui.model.UssdPredefInput</value> <value>metomeui.model.UssdKeywordStep</value> 
+			<value>metomeui.model.UssdMenuItem</value> <value>metomeui.model.UssdTransactionKeyword</value> 
+			<value>metomeui.model.UssdRequest</value> </list> </property> -->
+
+	</bean>
+
+	<bean id="hibernateTransactionManager"
+		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
+		<property name="sessionFactory" ref="sessionFactory" />
+	</bean>
+
 </beans>
\ No newline at end of file
diff --git a/WebContent/WEB-INF/web.xml b/WebContent/WEB-INF/web.xml
index 5fcb03e..d1aa58b 100644
--- a/WebContent/WEB-INF/web.xml
+++ b/WebContent/WEB-INF/web.xml
@@ -10,7 +10,7 @@
 	</context-param>
 	<listener>
 		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
-	</listener>
+	</listener> 
 	<context-param>
 		<param-name>contextConfigLocation</param-name>
 		<param-value>/WEB-INF/metomeui-servlet.xml</param-value>
diff --git a/WebContent/jsp/addaccounttype.jsp b/WebContent/jsp/addaccounttype.jsp
new file mode 100644
index 0000000..a8d7ebb
--- /dev/null
+++ b/WebContent/jsp/addaccounttype.jsp
@@ -0,0 +1,386 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Account Type Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+</script>
+<style>
+
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+
+/*BUTTONS*/
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 40%;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	width: 10%;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	padding: 1px;
+	background-color: #F3F3EC;
+	text-align: left;
+	word-wrap: break-word;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 250px;
+}
+
+.alterformfields {
+	width: 15px;
+	height: 15px;
+	text-align: left;
+}
+
+.alterlabel {
+	vertical-align: top;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div></td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Manage Account Types</h2>
+						<hr>
+					</td>
+				</tr>
+			</table>
+		</div>
+
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+					<div id="accordion">
+						<h3>
+							<a href="ussdmenuitems.html">Ussd Menu Setup</a>
+						</h3>
+						<ul>
+							<li><a href="/metomeui/listussdmenuitems.html">Ussd Menu
+									Items Setup</a></li>
+							<li><a href="/metomeui/listussdtransactionkeywords.html">Transaction
+									Keywords Setup</a>
+							</li>
+							<li><a href="/metomeui/listussdkeywordsteps.html">Keyword
+									Steps</a></li>
+							<li><a href="/metomeui/listussdpredefinputs.html">Predefined
+									Inputs Setup</a>
+							</li>
+						</ul>
+						<h3>
+							<a href="/metomeui/charge.html">Charge Setup</a>
+						</h3>
+						<ul>
+							<li><a href="/metomeui/charge.html">Configure Charges</a>
+							</li>
+							<li><a href="/metomeui/accounttypes.html">Manage Account
+									Types</a>
+							</li>
+						</ul>
+					</div></td>
+				<td class="content">
+					<div>
+						<fieldset>
+							<legend>
+								<h2>Create New Account Type</h2>
+							</legend>
+
+							<form:form method="post" action="addaccounttypes.html"
+								commandName="accountType">
+								<form:errors path="*" cssClass="errorblock" element="div" />
+
+								<table>
+									<tr>
+										<td class="formlabels"><form:label path="accountTypeCode">Account Code: </form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="accountTypeCode" /></td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label path="accountTypeName">Account Name: </form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="accountTypeName" /></td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label
+												path="accountTypeBitMap">Account Bitmap:</form:label>
+										</td>
+										<td class="form"><form:checkbox
+												cssClass="alterformfields" path="accountTypeBitMap"
+												value="0" /><label class="alterlabel">Undefined</label><br>
+										<form:checkbox cssClass="alterformfields"
+												path="accountTypeBitMap" value="1" /><label
+											class="alterlabel">Dealer</label><br> <form:checkbox
+												cssClass="alterformfields" path="accountTypeBitMap"
+												value="2" /><label class="alterlabel">Agent</label>
+										</td>
+									</tr>
+
+									<tr>
+										<td class="formlabels"><form:label
+												path="accountMaximumBookBalance">Maximum Book Balance:</form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="accountMaximumBookBalance" /></td>
+									</tr>
+									<tr>
+										<%-- <td class="formlabels"><form:checkbox cssClass="otherformfields"
+													path="sysAccountTypeFlag" /></td>
+											<td class="form"><form:label path="sysAccountTypeFlag">Set System Account Type</form:label>
+											</td>
+											
+										</tr> --%>
+									<tr>
+										<td class="formlabels"><form:checkbox
+												cssClass="otherformfields" path="enabledFlag" value="1" />
+										</td>
+										<td class="form"><form:label path="enabledFlag">Enable Account Type</form:label>
+										</td>
+									</tr>
+									<tr>
+										<td colspan="2" class="savebutton"><input class="btn"
+											type="submit" value="addaccounttypes" />
+										</td>
+									</tr>
+								</table>
+							</form:form>
+						</fieldset>
+						<table>
+							<tr>
+								<td><br></td>
+							</tr>
+						</table>
+
+					</div>
+				</td>
+			</tr>
+		</table>
+		<!--    <table border=1px; width=100%;> -->
+		<!--        <tr> -->
+		<!--            <td>Footer</td> -->
+		<!--        </tr> -->
+		<!--    </table> -->
+	</div>
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/addcharge.jsp b/WebContent/jsp/addcharge.jsp
new file mode 100644
index 0000000..629c616
--- /dev/null
+++ b/WebContent/jsp/addcharge.jsp
@@ -0,0 +1,389 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Transaction Keywords Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+</script>
+<style>
+
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+
+/*BUTTONS*/
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 40%;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	width: 10%;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	padding: 1px;
+	background-color: #F3F3EC;
+	text-align: left;
+	word-wrap: break-word;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 250px;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div>
+			</td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Manage Account Types</h2>
+						<hr></td>
+				</tr>
+			</table>
+		</div>
+
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+					<div id="accordion">
+						<h3>
+							<a href="ussdmenuitems.html">Ussd Menu Setup</a>
+						</h3>
+						<ul>
+							<li><a href="ussdmenuitems.html">Ussd Menu Items Setup</a>
+							</li>
+							<li><a href="ussdtransactionkeywords.html">Transaction
+									Keywords Setup</a></li>
+							<li><a href="ussdpredefinputs.html">Predefined Inputs
+									Setup</a></li>
+						</ul>
+						<h3>
+							<a href="charge.html">Charge Setup</a>
+						</h3>
+						<ul>
+							<li><a href="charge.html">Configure Charge</a></li>
+							<li><a href="customer.html">Manage Customer Accounts </a></li>
+							<li><a href="account.html">Manage Account Types</a></li>
+						</ul>
+					</div>
+				</td>
+				<td class="content">
+					<div>
+						<fieldset>
+							<legend>
+								<h2>Create New Account Type</h2>
+							</legend>
+
+							<form:form method="post" action="addcharge.html"
+								commandName="charge">
+								<form:errors path="*" cssClass="errorblock" element="div" />
+
+								<table>
+									<tr>
+										<td class="formlabels"><form:label path="accountCode">Charge Name: </form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="accountCode" " />
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label path="country">Charge Type:</form:label>
+										</td>
+										<td class="form"><form:select cssClass="dropdown"
+												path="country">
+												<form:option value="0" label="Global" />
+												<form:option value="1" label="Customer Type" />
+												<form:option value="2" label="Account Type" />
+											</form:select>
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label path="chargeKeyword">Linked Keyword: </form:label>
+										</td>
+										<td class="form"><form:select cssClass="dropdown"
+													path="chargeKeyword">
+													<form:option value="0" label="--None--" />
+													<c:forEach items="${keywordList}" var="keyword">
+														<form:option value="${keyword.keywordId}"
+															label="${account.keywordName}" />
+													</c:forEach>
+													<form:options items="${keywordList}" />
+												</form:select></td>
+									</tr>
+									<tr>
+										<td class="formlabels"><label name="chargeRange">Charge Range: </label>
+										</td>  From  
+										<td class="form"><form:select cssClass="dropdown"
+												path="lowRange">
+												<form:option value="0" label="0" />
+												<form:option value="1" label="500" />
+												<form:option value="2" label="2000" />
+											</form:select>
+										</td>  To  
+										<td class="form"><form:select cssClass="dropdown"
+												path="highRange">
+												<form:option value="0" label="0" />
+												<form:option value="1" label="500" />
+												<form:option value="2" label="2000" />
+											</form:select>
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label
+												path="chargeCalculation">Charge Calculation:</form:label>
+										</td>
+										<td class="form"><form:select cssClass="dropdown"
+												path="chargeCalculation">
+												<form:option value="0" label="fixed" />
+												<form:option value="1" label="percentage" />
+											</form:select>
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label path="chargeEndDate">Duration for Charge: </form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="chargeEndDate"/>
+										</td>
+									</tr>
+									<tr>
+										<td colspan="2" class="savebutton"><input class="btn"
+											type="submit" value="addcharge" /></td>
+									</tr>
+								</table>
+							</form:form>
+						</fieldset>
+						<table>
+							<tr>
+								<td><br>
+								</td>
+							</tr>
+						</table>
+
+					</div></td>
+			</tr>
+		</table>
+		<!--    <table border=1px; width=100%;> -->
+		<!--        <tr> -->
+		<!--            <td>Footer</td> -->
+		<!--        </tr> -->
+		<!--    </table> -->
+	</div>
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/addcustomer.jsp b/WebContent/jsp/addcustomer.jsp
new file mode 100644
index 0000000..77c35b6
--- /dev/null
+++ b/WebContent/jsp/addcustomer.jsp
@@ -0,0 +1,469 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Transaction Keywords Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script language="javascript" type="text/javascript"
+	src="datetimepicker.js">
+	<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+</script>
+<style>
+
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+
+/*BUTTONS*/
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 40%;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	width: 10%;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	padding: 1px;
+	background-color: #F3F3EC;
+	text-align: left;
+	word-wrap: break-word;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 250px;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div>
+			</td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Transaction Keyword Steps</h2>
+						<hr></td>
+				</tr>
+			</table>
+		</div>
+
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+					<div id="accordion">
+						<h3>
+							<a href="ussdmenuitems.html">Ussd Menu Setup</a>
+						</h3>
+						<ul>
+							<li><a href="ussdmenuitems.html">Ussd Menu Items Setup</a>
+							</li>
+							<li><a href="ussdtransactionkeywords.html">Transaction
+									Keywords Setup</a></li>
+							<li><a href="ussdpredefinputs.html">Predefined Inputs
+									Setup</a></li>
+						</ul>
+						<h3>
+							<a href="charge.html">Charge Setup</a>
+						</h3>
+						<ul>
+							<li><a href="charges.html">Configure Charge</a></li>
+							<li><a href="customers.html">Manage Customer Accounts </a></li>
+							<li><a href="accounts.html">Manage Account Types</a></li>
+						</ul>
+					</div>
+				</td>
+				<td class="content">
+					<div>
+						<fieldset>
+							<legend>
+								<h2>Create Customer</h2>
+							</legend>
+
+							<form:form method="post" action="addcustomer.html"
+								commandName="customer">
+								<form:errors path="*" cssClass="errorblock" element="div" />
+<fieldset>
+<legend>Customer Bio Data</legend>
+								<table>
+									
+										
+										<tr>
+											<td class="formlabels"><form:label path="lastName">Customer Last Name: </form:label>
+											</td>
+											<td class="form"><form:input cssClass="formfields"
+													path="lastName" />
+											</td>
+										</tr>
+										<tr>
+											<td class="formlabels"><form:label path="otherNames">Customer First Name: </form:label>
+											</td>
+											<td class="form"><form:input cssClass="formfields"
+													path="otherNames" />
+											</td>
+										</tr>
+									<tr>
+										<td class="formlabels"><form:label path="alias">Customer Alias: </form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="alias" />
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label path="dateOfBirth">Date of Birth </form:label>
+										</td>
+										<td><form:input path="dateOfBirth" id="txtdateOfBirth"
+												cssClass="formfields" /> <a
+											href="javascript:NewCal('txtdateOfBirth','ddmmyyyy')"><img
+												src="images/cal.gif" width="16" height="16" border="0"
+												alt="Pick a date"> </a>
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label path="placeOfBirth">place Of Birth:</form:label>
+										</td>
+										<td class="form"><form:select cssClass="dropdown"
+												path="placeOfBirth">
+												<form:option value="0" label="--Other--" />
+												<form:option value="1" label="My Country" />
+												<form:option value="2" label="Your Country" />
+												<form:option value="2" label="His Country" />
+											</form:select></td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label path="nationality">Nationality:</form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="nationality" /></td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label path="msisdn">Phone Contact:</form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="msisdn" />
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label path="physicalAddress">Physical Address:</form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="physicalAddress" /></td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label path="postalAddress">Postal Address:</form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="postalAddress" /></td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label path="town">Town:</form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="town" /></td>
+									</tr>
+
+									<tr>
+										<td class="formlabels"><form:label
+												path="customerCompanyName">Registered Company Name:</form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="customerCompanyName" /></td>
+									</tr>
+									</table>
+									</fieldset>
+									<fieldset>
+										<legend> Customer Account Details</legend>
+										<table>
+										<%-- <tr>
+											<td class="formlabels"><form:label
+													path="customerTypeCode">Customer Type:</form:label>
+											</td>
+											<td class="form"><form:select cssClass="dropdown"
+													path="customerTypeCode">
+													<form:option value="0" label="--None--" />
+													<form:option value="1" label="Agent" />
+													<form:option value="2" label="Broker" />
+												</form:select></td>
+										</tr> --%>
+
+										<tr>
+											<td class="formlabels"><form:label
+													path="accountTypeBitMap">Account Type:</form:label>
+											</td>
+											<td class="form"><form:checkbox id="lockedcheckbox"
+													cssClass="formfields" value="1" path="accountTypeBitMap"/> 2o
+				
+											</td>
+											
+											<%-- <td class="form"><form:select cssClass="dropdown"
+													path="accountTypeCode">
+													<form:option value="0" label="--None--" />
+													<c:forEach items="${accountList}" var="account">
+														<form:option value="${account.accountTypeCode}"
+															label="${account.accountTypeName}" />
+													</c:forEach>
+													<form:options items="${accountList}" />
+												</form:select></td> --%>
+										</tr>
+										<tr>
+
+											<td class="formlabels"><form:label path="accountPIN">Account PIN:</form:label>
+											</td>
+											<td class="form"><form:password cssClass="formfields"
+													path="accountPIN" /></td>
+										</tr>
+										<tr>
+											<td class="formlabels"><form:label path="lockedFlag">Locked:</form:label>
+											</td>
+											<td class="form"><form:checkbox id="lockedcheckbox"
+													cssClass="formfields" value="1" path="lockedFlag"
+													onChange="this.form.partnerid.disabled=!this.checked" />
+											</td>
+										</tr>
+										<tr>
+											<td class="formlabels"><form:label path="lockedReason">Reason for Locking:</form:label>
+											</td>
+											<td class="form"><form:input cssClass="formfields"
+													path="lockedReason" /></td>
+										</tr>
+										</table>
+									</fieldset>
+									<table>
+									<tr>
+										<td colspan="2" class="savebutton"><input class="btn"
+											type="submit" value="addcustomer" /></td>
+									</tr>
+									
+								</table>
+							</form:form>
+						</fieldset>
+						<table>
+							<tr>
+								<td><br>
+								</td>
+							</tr>
+						</table>
+
+					</div></td>
+			</tr>
+		</table>
+		<!--    <table border=1px; width=100%;> -->
+		<!--        <tr> -->
+		<!--            <td>Footer</td> -->
+		<!--        </tr> -->
+		<!--    </table> -->
+	</div>
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/addlanguage.jsp b/WebContent/jsp/addlanguage.jsp
new file mode 100644
index 0000000..583dfe2
--- /dev/null
+++ b/WebContent/jsp/addlanguage.jsp
@@ -0,0 +1,337 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Language Configuration</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+</script>
+<style>
+
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+
+/*BUTTONS*/
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 2px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 40%;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	width: 10%;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	padding: 1px;
+	background-color: #F3F3EC;
+	text-align: left;
+	word-wrap: break-word;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 250px;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div>
+			</td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Manage Memo Groups</h2>
+						<hr></td>
+				</tr>
+			</table>
+		</div>
+
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+					<div id="accordion">
+						<h3>
+							<a href="ussdmenuitems.html">Ussd Menu Setup</a>
+						</h3>
+						<ul>
+							<li><a href="ussdmenuitems.html">Ussd Menu Items Setup</a>
+							</li>
+							<li><a href="ussdtransactionkeywords.html">Transaction
+									Keywords Setup</a></li>
+							<li><a href="ussdpredefinputs.html">Predefined Inputs
+									Setup</a></li>
+						</ul>
+						<h3>
+							<a href="charge.html">Charge Setup</a>
+						</h3>
+						<ul>
+							<li><a href="charge.html">Configure Charge</a></li>
+							<li><a href="accounttypes.html">Manage Account Types</a></li>
+						</ul>
+					</div>
+				</td>
+				<td class="content">
+					<div>
+						<fieldset>
+							<legend>
+								<h2>Create New Language</h2>
+							</legend>
+
+							<form:form method="post" action="addlanguages.html"
+								commandName="language">
+								<form:errors path="*" cssClass="errorblock" element="div" />
+
+								<table>
+									<tr>
+										<td class="formlabels"><form:label path="languageName">Language Name: </form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="languageName" />
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:checkbox id="isDefault"
+												cssClass="otherformfields" path="isDefault" value="1" />
+										</td>
+
+										<td class="form"><form:label path="isDefault">Is Default Language</form:label>
+										</td>
+									</tr>
+									<tr>
+										<td colspan="2" class="savebutton"><input class="btn"
+											type="submit" value="Add Language" />
+										</td>
+									</tr>
+								</table>
+							</form:form>
+						</fieldset>
+						<table>
+							<tr>
+								<td><br></td>
+							</tr>
+						</table>
+
+					</div>
+				</td>
+			</tr>
+		</table>
+		<!--    <table border=1px; width=100%;> -->
+		<!--        <tr> -->
+		<!--            <td>Footer</td> -->
+		<!--        </tr> -->
+		<!--    </table> -->
+	</div>
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/addmemogroup.jsp b/WebContent/jsp/addmemogroup.jsp
new file mode 100644
index 0000000..81255b1
--- /dev/null
+++ b/WebContent/jsp/addmemogroup.jsp
@@ -0,0 +1,359 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Memo Groups Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+</script>
+<style>
+
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+
+/*BUTTONS*/
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 40%;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	width: 10%;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	padding: 1px;
+	background-color: #F3F3EC;
+	text-align: left;
+	word-wrap: break-word;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 250px;
+}
+
+.alterformfields {
+	width: 15px;
+	height: 15px;
+	text-align: left;
+}
+
+.alterlabel {
+	vertical-align: top;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div>
+			</td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Manage Memo Group</h2>
+						<hr></td>
+				</tr>
+			</table>
+		</div>
+
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+					<div id="accordion">
+						<h3>
+							<a href="ussdmenuitems.html">Ussd Menu Setup</a>
+						</h3>
+						<ul>
+							<li><a href="ussdmenuitems.html">Ussd Menu Items Setup</a>
+							</li>
+							<li><a href="ussdtransactionkeywords.html">Transaction
+									Keywords Setup</a></li>
+							<li><a href="ussdpredefinputs.html">Predefined Inputs
+									Setup</a></li>
+						</ul>
+						<h3>
+							<a href="charge.html">Charge Setup</a>
+						</h3>
+						<ul>
+							<li><a href="charge.html">Configure Charge</a></li>
+							<li><a href="accounttypes.html">Manage Account Types</a></li>
+						</ul>
+					</div>
+				</td>
+				<td class="content">
+					<div>
+						<fieldset>
+							<legend>
+								<h2>Create New Memo Group</h2>
+							</legend>
+
+							<form:form method="post" action="addmemogroups.html"
+								commandName="memoGroup">
+								<form:errors path="*" cssClass="errorblock" element="div" />
+
+								<table>
+									<tr>
+										<td class="formlabels"><form:label path="memoGroupCode">Memo Group Code: </form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="memoGroupCode" />
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label path="memoGroupName">Memo Group Name: </form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="memoGroupName" />
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label path="memoGroupDescription">Memo Group Description: </form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="memoGroupDescription" />
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:checkbox
+												cssClass="otherformfields" path="enabledFlag" value="1" />
+										</td>
+										<td class="form"><form:label path="enabledFlag">Enable Memo Group</form:label>
+										</td>
+									</tr>
+									<tr>
+										<td colspan="2" class="savebutton"><input class="btn"
+											type="submit" value="addmemogroups" /></td>
+									</tr>
+								</table>
+							</form:form>
+						</fieldset>
+						<table>
+							<tr>
+								<td><br>
+								</td>
+							</tr>
+						</table>
+
+					</div></td>
+			</tr>
+		</table>
+		<!--    <table border=1px; width=100%;> -->
+		<!--        <tr> -->
+		<!--            <td>Footer</td> -->
+		<!--        </tr> -->
+		<!--    </table> -->
+	</div>
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/addmessage.jsp b/WebContent/jsp/addmessage.jsp
new file mode 100644
index 0000000..d67acc7
--- /dev/null
+++ b/WebContent/jsp/addmessage.jsp
@@ -0,0 +1,356 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Messages Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+</script>
+<style>
+
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+
+/*BUTTONS*/
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 40%;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	width: 10%;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	padding: 1px;
+	background-color: #F3F3EC;
+	text-align: left;
+	word-wrap: break-word;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 250px;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div></td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Manage Messages</h2>
+						<hr>
+					</td>
+				</tr>
+			</table>
+		</div>
+
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+					<div id="accordion">
+						<h3>
+							<a href="ussdmenuitems.html">Ussd Menu Setup</a>
+						</h3>
+						<ul>
+							<li><a href="ussdmenuitems.html">Ussd Menu Items Setup</a></li>
+							<li><a href="ussdtransactionkeywords.html">Transaction
+									Keywords Setup</a>
+							</li>
+							<li><a href="ussdpredefinputs.html">Predefined Inputs
+									Setup</a>
+							</li>
+						</ul>
+						<h3>
+							<a href="charge.html">Charge Setup</a>
+						</h3>
+						<ul>
+							<li><a href="charge.html">Configure Charge</a>
+							</li>
+							<li><a href="accounttypes.html">Manage Account Types</a>
+							</li>
+						</ul>
+					</div></td>
+				<td class="content">
+					<div>
+						<fieldset>
+							<legend>
+								<h2>Create Message</h2>
+							</legend>
+
+							<form:form method="post" action="addmessages.html"
+								commandName="message">
+								<form:errors path="*" cssClass="errorblock" element="div" />
+
+								<table>
+									<tr>
+										<td class="formlabels"><form:label path="messageCode">Message Code: </form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="messageCode" /></td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label path="languageId">Message Language:</form:label>
+										</td>
+										<td class="form"><form:select cssClass="dropdown"
+												path="languageId">
+												<form:option value="0" label="--None--" />
+												<c:forEach items="${languagesList}" var="language">
+													<form:option value="${language.languageId}"
+														label="${language.languageName}" />
+												</c:forEach>
+												<form:options items="${languagesList}" />
+											</form:select>
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label path="messageText">Message Text: </form:label>
+										</td>
+										<td class="form"><form:textarea cssClass="formfields"
+												path="messageText" /></td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label path="messageDesc">Message Description: </form:label>
+										</td>
+										<td class="form"><form:textarea cssClass="formfields"
+												path="messageDesc" /></td>
+									</tr>
+									<tr>
+										<td colspan="2" class="savebutton"><input class="btn"
+											type="submit" value="addmessages" />
+										</td>
+									</tr>
+								</table>
+							</form:form>
+						</fieldset>
+						<table>
+							<tr>
+								<td><br></td>
+							</tr>
+						</table>
+
+					</div>
+				</td>
+			</tr>
+		</table>
+		<!--    <table border=1px; width=100%;> -->
+		<!--        <tr> -->
+		<!--            <td>Footer</td> -->
+		<!--        </tr> -->
+		<!--    </table> -->
+	</div>
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/addnewussdkeywordstep.jsp b/WebContent/jsp/addnewussdkeywordstep.jsp
new file mode 100644
index 0000000..9962d01
--- /dev/null
+++ b/WebContent/jsp/addnewussdkeywordstep.jsp
@@ -0,0 +1,405 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Transaction Keywords Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+</script>
+<style>
+
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+
+/*BUTTONS*/
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 40%;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	width: 10%;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	padding: 1px;
+	background-color: #F3F3EC;
+	text-align: left;
+	word-wrap: break-word;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 250px;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div>
+			</td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Transaction Keyword Steps</h2>
+						<hr></td>
+				</tr>
+			</table>
+		</div>
+
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+					<div id="accordion">
+						<h3>
+							<a href="/metomeui/listussdmenuitems.html">Ussd Menu Items
+								Setup</a>
+						</h3>
+						<ul>
+							<li><a href="/metomeui/listussdmenuitems.html">Ussd Menu
+									Items Listing</a></li>
+							<li><a href="/metomeui/addussdmenuitems.html">Create
+									Ussd Menu Items</a>
+							</li>
+						</ul>
+						<h3>
+							<a href="/metomeui/listussdtransactionkeywords.html">Transaction
+								Keywords Setup</a>
+						</h3>
+						<ul>
+							<li><a href="/metomeui/listussdtransactionkeywords.html">Transaction
+									Keywords</a>
+							</li>
+							<li><a href="/metomeui/listussdkeywordsteps.html">Keyword
+									Steps</a>
+							</li>
+						</ul>
+						<h3>
+							<a href="/metomeui/listussdpredefinputs.html">Predefined
+								Inputs Setup</a>
+						</h3>
+						<ul>
+							<li><a href="/metomeui/listussdpredefinputs.html">Predefined
+									Inputs</a>
+							</li>
+							<li><a href="/metomeui/listussdpredefinputitems.html">Predefined
+									Input Items</a>
+							</li>
+						</ul>
+						<h3>
+							<a href="/metomeui/ussdrequests.html">USSD Requests</a>
+						</h3>
+						<ul>
+							<li><a href="/metomeui/ussdrequests.html">USSD Requests</a>
+							</li>
+						</ul>
+					</div></td>
+				<td class="content">
+					<div>
+						<fieldset>
+							<legend>
+								<h2>Create Keyword Steps</h2>
+							</legend>
+
+							<form:form method="post"
+								action="/metomeui/addussdkeywordstep.html"
+								commandName="ussdKeywordStep">
+								<form:errors path="*" cssClass="errorblock" element="div" />
+								<table>
+									<tr>
+										<td class="formlabels"><form:label path="stepMenuName"> Step Menu Name:</form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="stepMenuName" />
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label path="stepMenuNumber">Step Menu Number</form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="stepMenuNumber" /></td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:checkbox
+												cssClass="otherformfields" path="isFirstStepFlag" value="1" />
+										</td>
+										<td class="form"><form:label path="isFirstStepFlag">Is First Step</form:label>
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:checkbox
+												cssClass="otherformfields" path="isLastStepFlag" value="1" />
+										</td>
+										<td class="form"><form:label path="isLastStepFlag">Is Last Step</form:label>
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:checkbox
+												cssClass="otherformfields" path="hasPredefInputFlag"
+												value="1" /></td>
+										<td class="form"><form:label path="hasPredefInputFlag">Keyword Step has Predefined Input: </form:label>
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label
+												path="predefInput.predefInputId">Predefined Input Name</form:label>
+										</td>
+										<td class="form"><form:select cssClass="dropdown"
+												path="predefInput.predefInputId">
+												<form:option value="0" label="--None--" />
+												<c:forEach items="${predefInputList}" var="predefinput">
+													<form:option value="${predefinput.predefInputId}"
+														label="${predefinput.predefInputName}" />
+												</c:forEach>
+											</form:select>
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:checkbox
+												cssClass="otherformfields" path="useFixedValueFlag"
+												value="1" /></td>
+										<td class="form"><form:label path="useFixedValueFlag">Use Fixed Value </form:label>
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label path="fixedValue"> Fixed Value:</form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="fixedValue" />
+										</td>
+									</tr>
+									<tr>
+										<td></td>
+										<td><input class="btn" type="submit" name="Add" id="Add"
+											value="Add" /><input class="btn" type="button"
+											value="Cancel"
+											onClick="location.href='addussdtransactionkeyword.html'" />
+										</td>
+									</tr>
+								</table>
+							</form:form>
+						</fieldset>
+						<table>
+							<tr>
+								<td><br>
+								</td>
+							</tr>
+						</table>
+
+					</div></td>
+			</tr>
+		</table>
+	</div>
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/addnewussdpredefinputitem.jsp b/WebContent/jsp/addnewussdpredefinputitem.jsp
new file mode 100644
index 0000000..390764e
--- /dev/null
+++ b/WebContent/jsp/addnewussdpredefinputitem.jsp
@@ -0,0 +1,327 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Predefined Inputs Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+		$('#enable').is(':checked');
+
+	});
+
+	/* function testButton (form)
+	    if (form.enable.checked){
+	    	return 1;
+	    }
+	    if (!(form.enable.checked)){
+	    	return 0;
+	    }
+	} */
+</script>
+<style>
+
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+
+/*BUTTONS*/
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 40%;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	width: 10%;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	padding: 1px;
+	background-color: #F3F3EC;
+	text-align: left;
+	word-wrap: break-word;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 250px;
+}
+
+.alterformfields {
+	width: 15px;
+	height: 15px;
+	text-align: left;
+}
+
+.alterlabel {
+	vertical-align: top;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div>
+			</td>
+		</tr>
+	</table>
+	<table>
+		<tr>
+			<td class="content">
+				<div>
+					<fieldset>
+						<legend>
+							<h2>Create New Predefined Input Item</h2>
+						</legend>
+
+						<form:form method="post" action="addussdpredefinputitem.html"
+							modelAttribute="ussdPredefInputItem">
+							<form:errors path="*" cssClass="errorblock" element="div" />
+							<table>
+								<tr>
+									<td class="formlabels"><form:label
+											path="predefInputItemName">Predefined Input Item Name</form:label>
+									</td>
+									<td class="form"><form:input cssClass="formfields"
+											path="predefInputItemName" /></td>
+								</tr>
+								<tr>
+									<td class="formlabels"><form:label
+											path="predefInputItemCode">Predefined Input Item Code</form:label>
+									</td>
+									<td class="form"><form:input cssClass="formfields"
+											path="predefInputItemCode" /></td>
+								</tr>
+								<tr>
+									<td class="formlabels"><form:label
+											path="predefInputItemOrder">Predefined Input Item Order</form:label>
+									</td>
+									<td class="form"><form:input cssClass="formfields"
+											path="predefInputItemOrder" /></td>
+								</tr>
+								<tr>
+									<td class="formlabels"><form:checkbox id="enable"
+											cssClass="otherformfields" path="predefInputItemEnabledFlag"
+											value="1" /></td>
+									<td class="form"><form:label
+											path="predefInputItemEnabledFlag">Enable Predefined Input Item</form:label>
+									</td>
+								</tr>
+
+								<tr>
+									<td></td>
+									<td><input class="btn" type="submit" name="Add" id="Add"
+										value="Add" /><input class="btn" type="button" value="Cancel"
+										onClick="location.href='addussdpredefinput.html'" /></td>
+								</tr>
+							</table>
+						</form:form>
+					</fieldset>
+				</div></td>
+		</tr>
+	</table>
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/adduser.jsp b/WebContent/jsp/adduser.jsp
new file mode 100644
index 0000000..d1a0a6c
--- /dev/null
+++ b/WebContent/jsp/adduser.jsp
@@ -0,0 +1,356 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>User Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+</script>
+<style>
+
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+
+/*BUTTONS*/
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 40%;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	width: 10%;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	padding: 1px;
+	background-color: #F3F3EC;
+	text-align: left;
+	word-wrap: break-word;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 250px;
+}
+
+.alterformfields {
+	width: 15px;
+	height: 15px;
+	text-align: left;
+}
+
+.alterlabel {
+	vertical-align: top;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div>
+			</td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Manage Users</h2>
+						<hr></td>
+				</tr>
+			</table>
+		</div>
+
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+					<div id="accordion">
+						<h3>
+							<a href="ussdmenuitems.html">Ussd Menu Setup</a>
+						</h3>
+						<ul>
+							<li><a href="ussdmenuitems.html">Ussd Menu Items Setup</a>
+							</li>
+							<li><a href="ussdtransactionkeywords.html">Transaction
+									Keywords Setup</a></li>
+							<li><a href="ussdpredefinputs.html">Predefined Inputs
+									Setup</a></li>
+						</ul>
+						<h3>
+							<a href="charge.html">Charge Setup</a>
+						</h3>
+						<ul>
+							<li><a href="charge.html">Configure Charge</a></li>
+							<li><a href="accounttypes.html">Manage Account Types</a></li>
+						</ul>
+					</div>
+				</td>
+				<td class="content">
+					<div>
+						<fieldset>
+							<legend>
+								<h2>Create New User</h2>
+							</legend>
+
+
+	<form:form method="post" action="adduser.html" commandName="user">
+
+		<table>
+			<tr>
+				<td><form:label path="userName">UserName</form:label></td>
+				<td><form:input path="userName" /></td>
+			</tr>
+			<tr>
+				<td><form:label path="password">Password</form:label></td>
+				<td><form:password path="password" /></td>
+			</tr>
+			<!-- 			<tr> -->
+			<%-- 				<td><form:label path="confirmPassword">Confirm Password</form:label> --%>
+			<!-- 				</td> -->
+			<%-- 				<td><form:input path="confirmPassword" /> --%>
+			<!-- 				</td> -->
+			<!-- 			</tr> -->
+			<tr>
+				<td><form:label path="firstName">FirstName</form:label></td>
+				<td><form:input path="firstName" /></td>
+			</tr>
+			<tr>
+				<td><form:label path="lastName">LastName</form:label></td>
+				<td><form:input path="lastName" /></td>
+			</tr>
+			<tr>
+				<td><form:label path="middleName">MiddleName</form:label></td>
+				<td><form:input path="middleName" /></td>
+			</tr>
+			<tr>
+				<td><form:label path="email">Email Address</form:label></td>
+				<td><form:input path="email" /></td>
+			</tr>
+			<tr>
+				<td><form:label path="telephone">Phone Contact</form:label></td>
+				<td><form:input path="telephone" /></td>
+			</tr>
+
+			<tr>
+				<td><form:label path="role">Role</form:label></td>
+				<td><form:select path="role">
+						<form:option value="Guest" label="Guest" />
+						<form:option value="Admin" label="Admin" />
+					</form:select></td>
+			</tr>
+			<tr>
+				<td colspan="2"><input type="submit" value="adduser" />
+				</td>
+			</tr>
+		</table>
+	</form:form>
+
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/addussdkeywordsteps.jsp b/WebContent/jsp/addussdkeywordsteps.jsp
deleted file mode 100644
index 1feed06..0000000
--- a/WebContent/jsp/addussdkeywordsteps.jsp
+++ /dev/null
@@ -1,417 +0,0 @@
-<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
-	pageEncoding="ISO-8859-1"%>
-<%@ include file="include.jsp"%>
-<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-
-<html>
-<head>
-<title>Transaction Keywords Manager</title>
-<link type="text/css"
-	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
-	rel="stylesheet" />
-<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
-<script type="text/javascript"
-	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
-<script type="text/javascript">
-	$(function() {
-		// Accordion
-		$('#accordion').accordion({
-			header : "h3"
-		});
-		// Tabs
-		$('#tabs').tabs();
-		$('#button').button();
-	});
-</script>
-<style>
-
-/*GENERAL*/
-body {
-	font-family: 'Arial', 'Helvetica', sans-serif;
-	font-size: 75%;
-	line-height: 1.6em;
-	background: #F3F3EC;
-	padding: 0;
-}
-
-h1,h2 {
-	font-size: 14px;
-	font-weight: bold;
-}
-
-h3 {
-	font-size: 100%;
-	background: #DDB929;
-	display: block;
-	padding: 1px;
-	color: #fff;
-}
-
-h4 {
-	font-size: 80%;
-	background: #DDB929;
-	display: block;
-	padding: 1px;
-	color: #fff;
-}
-
-label {
-	font-weight: bold;
-	text-align: right;
-}
-
-/*END GENERAL*/
-
-/* ERROR BLOCK */
-.errorblock {
-	color: #000;
-	background-color: #ffEEEE;
-	border: 3px solid #ff0000;
-	padding: 8px;
-	margin: 16px;
-}
-
-/*BUTTONS*/
-button,.btn {
-	background-image:
-		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
-	background-position: left top;
-	background-repeat: repeat-x;
-	background-color: transparent;
-	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
-		-moz-use-text-color;
-	border-style: none none none none;
-	border-width: medium 2px 2px medium;
-	cursor: pointer;
-	display: inline;
-	colour: #008000;
-	font-family: 'Arial', 'Helvetica', sans-serif;
-	font-size: 100%;
-	font-weight: bold;
-	padding: 1px 3px;
-	height: 33px;
-	width: 100px;
-}
-
-hover.btn {
-	color: #0066CC;
-}
-
-/*END BUTTONS*/
-
-/*SIDE BAR*/
-.navbar {
-	vertical-align: top;
-	top: 1px;
-	width: 20%;
-}
-
-/*END SIDE BAR*/
-
-/*CONTENT SECTION*/
-.content {
-	vertical-align: top;
-	top: 1px;
-	width: 80%;
-}
-
-div.header {
-	background: #008000;
-	border: 2px Solid #008000;
-}
-
-div {
-	background: #F3F3EC;
-	margin: 2px;
-	padding: 1px;
-	border: 2px;
-}
-
-fieldset {
-	border-color: #9AC482;
-}
-
-hr {
-	border-color: #9AC482;
-}
-
-li {
-	display: block;
-	margin: 2px 2px 2px -20px;
-}
-
-tr.header {
-	background: #ffffff;
-}
-
-td {
-    height: 19px;
-    width: 30%;
-    margin: 0px 2px 0px 2px;
-    padding: 0px 5px 0px 5px;
-    test-align: center;
-    width: 40%;
-}
-
-
-th {
-	background: #7CB15C;
-	height: 19px;
-	width: 10%;
-	border-color: #ffffff;
-	text-align: left;
-	padding: 4px;
-	word-wrap: break-word;
-}
-
-td.data {
-	border-color: #9AC482;
-	border-width: 1px 1px 0 0;
-	border-style: solid;
-	margin: 1;
-	padding: 1px;
-	background-color: #F3F3EC;
-	text-align: left;
-	word-wrap: break-word;
-}
-
-tr.data {
-	border: 1px Solid #9AC482;
-}
-
-table.form {
-	padding: 8px;
-	width: 100px;
-}
-
-td.form {
-	padding: 5px;
-	width: 400px;
-}
-
-table.data {
-	width: 100%;
-	font-size: 13px;
-	border: 1px Solid;
-	margin: 0px 0px 1px 1px;
-	padding: 0px;
-	border-color: #9AC482;
-	background-color: #F3F3EC;
-	border-collapse: collapse;
-	text-align: -webkit-auto;
-}
-
-td.savebutton {
-	padding-right: 300px;
-	text-align: right;
-	height: 30px
-}
-
-td.formlabels{
-text-align:right;
-}
-
-.dropdown{
-width: 157px;
-height: 29px;
-}
-
-.formfields{
-width: 150px;
-height: 25px;
-}
-
-.labels{
-text-align:right;
-}
-
-.otherformfields {
-	padding-left:250px;
-}
-
-/*END CONTENT SECTION*/
-</style>
-</head>
-<body>
-
-	<table style="width: 100%;">
-		<tr style="background-color: #008000;">
-			<td
-				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
-					Money</h1>
-				<div class="header"
-					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
-					Administrator Console</div> <br>
-				<div class="header" style="color: #000000;">
-					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
-						> Administration</a>
-				</div></td>
-		</tr>
-	</table>
-	<div>
-		<div>
-			<table style="width: 100%;">
-				<tr>
-					<td><h2>Transaction Keyword Steps</h2>
-						<hr>
-					</td>
-				</tr>
-			</table>
-		</div>
-
-		<table style="width: 100%;">
-			<tr>
-				<td class="navbar">
-					<div id="accordion">
-						<h3>
-							<a href="ussdmenuitems.html">Ussd Menu Items Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdmenuitems.html">Ussd Menu Items Listing</a>
-							</li>
-							<li><a href="addussdmenuitems.html">Create Ussd Menu
-									Items</a></li>
-						</ul>
-						<h3>
-							<a href="ussdtransactionkeywords.html">Transaction Keywords
-								Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdtransactionkeywords.html">Transaction
-									Keywords</a></li>
-							<li><a href="ussdkeywordsteps.html">Keyword Steps</a></li>
-						</ul>
-						<h3>
-							<a href="ussdpredefinputs.html">Predefined Inputs Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdpredefinputs.html">Predefined Inputs</a></li>
-							<li><a href="ussdpredefinputitems.html">Predefined Input
-									Items</a></li>
-						</ul>
-						<h3>
-                            <a href="ussdrequests.html">USSD Requests</a>
-                        </h3>
-                        <ul>
-                            <li><a href="ussdrequests.html">USSD Requests</a>
-                            </li>
-                        </ul>
-					</div>
-				</td>
-				<td class="content">
-					<div>
-						<fieldset>
-							<legend>
-								<h2>Create Keyword Steps</h2>
-							</legend>
-
-							<form:form method="post" action="addkeywordsteps.html"
-								commandName="ussdKeywordStep">
-								<form:errors path="*" cssClass="errorblock" element="div" />
-
-								<table>
-									<tr>
-										<td class="formlabels"><form:label path="keywordId">Keyword Associated with this Step:</form:label>
-										</td>
-										<td class="form"><form:select cssClass="dropdown"
-												path="keywordId">
-												<form:option value="0" label="--None--" />
-												<c:forEach items="${transactionKeywordList}"
-													var="transactionkeyword">
-													<form:option value="${transactionkeyword.keywordId}"
-														label="${transactionkeyword.keywordName}" />
-												</c:forEach>
-												<form:options items="${transactionKeywordsList}" />
-											</form:select></td>
-									</tr>
-
-									<tr>
-										<td class="formlabels"><form:label path="stepMenuName"> Step Menu Name:</form:label>
-										</td>
-										<td class="form"><form:input cssClass="formfields"
-												path="stepMenuName" /></td>
-									</tr>
-
-									<tr>
-										<td class="formlabels"><form:label path="stepMenuNumber">Step Menu Number</form:label>
-										</td>
-										<td class="form"><form:input cssClass="formfields"
-												path="stepMenuNumber" />
-										</td>
-									</tr>
-									<tr>
-										<td class="formlabels"><form:checkbox cssClass="otherformfields"
-												path="isFirstStepFlag" value="1" />
-										</td>
-										<td class="form"><form:label path="isFirstStepFlag">Is First Step</form:label>
-										</td>
-									</tr>
-									<tr>
-										<td class="formlabels"><form:checkbox cssClass="otherformfields"
-												path="isLastStepFlag" value="1" />
-										</td>
-										<td class="form"><form:label path="isLastStepFlag">Is Last Step</form:label>
-										</td>
-									</tr>
-
-									<tr>
-										<td class="formlabels"><form:checkbox cssClass="otherformfields"
-												path="hasPredefInputFlag" value="1" />
-										</td>
-										<td class="form"><form:label path="hasPredefInputFlag">Keyword Step has Predefined Input: </form:label>
-										</td>
-									</tr>
-
-									<tr>
-										<td class="formlabels"><form:label path="predefInputId">Predefined Input Name</form:label>
-										</td>
-										<td class="form"><form:select cssClass="dropdown"
-												path="predefInputId">
-												<form:option value="0" label="--None--" />
-												<c:forEach items="${predefInputList}" var="predefinput">
-													<form:option value="${predefinput.predefInputId}"
-														label="${predefinput.predefInputName}" />
-												</c:forEach>
-											</form:select></td>
-									</tr>
-									<tr>
-										<td class="formlabels"><form:checkbox cssClass="otherformfields"
-												path="useFixedValueFlag" value="1"/>
-										</td>
-										<td class="form"><form:label path="useFixedValueFlag">Use Fixed Value </form:label>
-										</td>
-									</tr>
-
-									<tr>
-										<td class="formlabels"><form:label path="fixedValue"> Fixed Value:</form:label>
-										</td>
-										<td class="form"><form:input cssClass="formfields"
-												path="fixedValue" /></td>
-									</tr>
-
-									<tr>
-										<td colspan="2" class="savebutton"><input class="btn"
-											type="submit" value="Save" />
-										</td>
-									</tr>
-								</table>
-							</form:form>
-						</fieldset>
-						<table>
-							<tr>
-								<td><br></td>
-							</tr>
-						</table>
-
-					</div>
-				</td>
-			</tr>
-		</table>
-		<!--    <table border=1px; width=100%;> -->
-		<!--        <tr> -->
-		<!--            <td>Footer</td> -->
-		<!--        </tr> -->
-		<!--    </table> -->
-	</div>
-</body>
-</html>
\ No newline at end of file
diff --git a/WebContent/jsp/addussdmenuitem.jsp b/WebContent/jsp/addussdmenuitem.jsp
new file mode 100644
index 0000000..a6bfc80
--- /dev/null
+++ b/WebContent/jsp/addussdmenuitem.jsp
@@ -0,0 +1,354 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Menu Items Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+	});
+</script>
+<style>
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+/*BUTTONS*/
+input.createbtn {
+	
+}
+
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	/* 	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97) */
+	/* 		-moz-use-text-color; */
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	width: 20%;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 40%;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	padding: 4px;
+	background-color: #F3F3EC;
+	text-align: left;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 200px;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div>
+			</td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Menu Items Manager</h2>
+						<hr></td>
+				</tr>
+			</table>
+		</div>
+
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+                    <div id="accordion">
+                        <h3>
+                            <a href="/metomeui/listussdmenuitems.html">Ussd Menu Items
+                                Setup</a>
+                        </h3>
+                        <ul>
+                            <li><a href="/metomeui/listussdmenuitems.html">Ussd Menu
+                                    Items</a>
+                            </li>
+                        </ul>
+                        <h3>
+                            <a href="/metomeui/listussdtransactionkeywords.html">Transaction
+                                Keywords Setup</a>
+                        </h3>
+                        <ul>
+                            <li><a href="/metomeui/listussdtransactionkeywords.html">Transaction
+                                    Keywords</a></li>
+                        </ul>
+                        <h3>
+                            <a href="/metomeui/listussdpredefinputs.html">Predefined
+                                Inputs Setup</a>
+                        </h3>
+                        <ul>
+                            <li><a href="/metomeui/listussdpredefinputs.html">Predefined
+                                    Inputs</a></li>
+                        </ul>
+                    </div>
+                </td>
+				<td class="content">
+					<div>
+						<fieldset>
+							<legend>
+								<h2>Create Menu Items</h2>
+							</legend>
+							<form:form method="post" action="addussdmenuitem.html"
+								commandName="ussdMenuItem">
+								<form:errors path="*" cssClass="errorblock" element="div" />
+								<table>
+									<tr>
+										<td class="formlabels"><form:label
+												path="rootMenuItem.menuItemId">Menu Item Parent ID:</form:label>
+										</td>
+										<td class="form"><form:select cssClass="dropdown"
+												path="rootMenuItem.menuItemId">
+												<form:option value="0" label="--None--" />
+												<c:forEach items="${menuItemList}" var="menuitem">
+													<form:option value="${menuitem.menuItemId}"
+														label="${menuitem.menuItemName}" />
+												</c:forEach>
+											</form:select>
+										</td>
+									</tr>
+
+									<tr>
+										<td class="formlabels"><form:label
+												path="menuItemKeyword.keywordId">Associated Keyword Name:</form:label>
+										</td>
+										<td class="form"><form:select cssClass="dropdown"
+												path="menuItemKeyword.keywordId">
+												<form:option value="0" label="--None--" />
+												<c:forEach items="${transactionKeywordList}"
+													var="transactionkeyword">
+													<form:option value="${transactionkeyword.keywordId}"
+														label="${transactionkeyword.keywordName}" />
+												</c:forEach>
+											</form:select></td>
+									</tr>
+
+									<tr>
+										<td class="formlabels"><form:label path="menuItemName">Menu Item Name</form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="menuItemName" />
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label path="menuItemOrder">Menu Item Order</form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="menuItemOrder" />
+										</td>
+									</tr>
+
+									<tr>
+										<td colspan="2" class="savebutton"><br> <input
+											class="btn" type="submit" value="Save" />
+										</td>
+									</tr>
+								</table>
+							</form:form>
+						</fieldset>
+					</div></td>
+			</tr>
+		</table>
+	</div>
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/addussdmenuitems.jsp b/WebContent/jsp/addussdmenuitems.jsp
deleted file mode 100644
index d5d0fdb..0000000
--- a/WebContent/jsp/addussdmenuitems.jsp
+++ /dev/null
@@ -1,373 +0,0 @@
-<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
-	pageEncoding="ISO-8859-1"%>
-<%@ include file="include.jsp"%>
-<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-
-<html>
-<head>
-<title>Menu Items Manager</title>
-<link type="text/css"
-	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
-	rel="stylesheet" />
-<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
-<script type="text/javascript"
-	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
-<script type="text/javascript">
-	$(function() {
-		// Accordion
-		$('#accordion').accordion({
-			header : "h3"
-		});
-		// Tabs
-		$('#tabs').tabs();
-	});
-</script>
-<style>
-/*GENERAL*/
-body {
-	font-family: 'Arial', 'Helvetica', sans-serif;
-	font-size: 75%;
-	line-height: 1.6em;
-	background: #F3F3EC;
-	padding: 0;
-}
-
-h1,h2 {
-	font-size: 14px;
-	font-weight: bold;
-}
-
-h3 {
-	font-size: 100%;
-	background: #DDB929;
-	display: block;
-	padding: 1px;
-	color: #fff;
-}
-
-h4 {
-	font-size: 80%;
-	background: #DDB929;
-	display: block;
-	padding: 1px;
-	color: #fff;
-}
-
-label {
-	font-weight: bold;
-	text-align: right;
-}
-
-/*END GENERAL*/
-/* ERROR BLOCK */
-.errorblock {
-	color: #000;
-	background-color: #ffEEEE;
-	border: 3px solid #ff0000;
-	padding: 8px;
-	margin: 16px;
-}
-/*BUTTONS*/
-input.createbtn {
-	
-}
-
-button,.btn {
-	background-image:
-		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
-	background-position: left top;
-	background-repeat: repeat-x;
-	background-color: transparent;
-/* 	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97) */
-/* 		-moz-use-text-color; */
-	border-style: none none none none;
-	border-width: medium 2px 2px medium;
-	cursor: pointer;
-	display: inline;
-	colour: #008000;
-	font-family: 'Arial', 'Helvetica', sans-serif;
-	font-size: 100%;
-	font-weight: bold;
-	padding: 1px 3px;
-	height:33px;
-	width: 100px;
-	
-}
-
-/*END BUTTONS*/
-
-/*SIDE BAR*/
-.navbar {
-	vertical-align: top;
-	top: 1px;
-	width: 20%;
-}
-
-/*END SIDE BAR*/
-
-/*CONTENT SECTION*/
-.content {
-	vertical-align: top;
-	top: 1px;
-	width: 80%;
-}
-
-div.header {
-	background: #008000;
-	border: 2px Solid #008000;
-}
-
-div {
-	background: #F3F3EC;
-	margin: 2px;
-	padding: 1px;
-	border: 2px;
-}
-
-fieldset {
-	border-color: #9AC482;
-}
-
-hr {
-	border-color: #9AC482;
-}
-
-li {
-	display: block;
-	margin: 2px 2px 2px -20px;
-}
-
-tr.header {
-    background: #ffffff;
-}
-
-th {
-    background: #7CB15C;
-    height: 19px;
-    width: 20%;
-    border-color: #ffffff;
-    text-align:left;
-    padding: 4px;
-}
-
-td {
-	height: 19px;
-	width: 30%;
-	margin: 0px 2px 0px 2px;
-	padding: 0px 5px 0px 5px;
-	test-align: center;
-	width: 40%;
-}
-
-td.data {
-	border-color: #9AC482;
-	border-width: 1px 1px 0 0;
-	border-style: solid;
-	margin: 1;
-	padding: 4px;
-	background-color: #F3F3EC;
-	text-align:left;
-}
-
-tr.data {
-	border: 1px Solid #9AC482;
-}
-
-table.form {
-	padding: 8px;
-	width: 100px;
-}
-
-td.form {
-	padding: 5px;
-	width: 400px;
-}
-
-table.data {
-	width: 100%;
-	font-size: 13px;
-	border: 1px Solid;
-	margin: 0px 0px 1px 1px;
-	padding: 0px;
-	border-color: #9AC482;
-	background-color: #F3F3EC;
-	border-collapse: collapse;
-	text-align: -webkit-auto;
-}
-
-td.savebutton {
-	padding-right: 300px;
-	text-align: right;
-	height:30px
-}
-
-td.formlabels{
-text-align:right;
-}
-
-.dropdown{
-width: 157px;
-height: 29px;
-}
-
-.formfields{
-width: 150px;
-height: 25px;
-}
-
-.labels{
-text-align:right;
-}
-
-.otherformfields {
-    padding-left:200px;
-}
-
-/*END CONTENT SECTION*/
-</style>
-</head>
-<body>
-
-	<table style="width: 100%;">
-		<tr style="background-color: #008000;">
-			<td
-				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
-					Money</h1>
-				<div class="header"
-					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
-					Administrator Console</div> <br>
-				<div class="header" style="color: #000000;">
-					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
-						> Administration</a>
-				</div>
-			</td>
-		</tr>
-	</table>
-	<div>
-		<div>
-			<table style="width: 100%;">
-				<tr>
-					<td><h2>Menu Items Manager</h2>
-						<hr></td>
-				</tr>
-			</table>
-		</div>
-
-		<table style="width: 100%;">
-			<tr>
-				<td class="navbar">
-					<div id="accordion">
-						<h3>
-							<a href="ussdmenuitems.html">Ussd Menu Items Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdmenuitems.html">Ussd Menu Items Listing</a>
-							</li>
-							<li><a href="addussdmenuitems.html">Create Ussd Menu
-									Items</a>
-							</li>
-						</ul>
-						<h3>
-							<a href="ussdtransactionkeywords.html">Transaction Keywords
-								Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdtransactionkeywords.html">Transaction
-									Keywords</a>
-							</li>
-							<li><a href="ussdkeywordsteps.html">Keyword Steps</a>
-							</li>
-						</ul>
-						<h3>
-							<a href="ussdpredefinputs.html">Predefined Inputs Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdpredefinputs.html">Predefined Inputs</a>
-							</li>
-							<li><a href="ussdpredefinputitems.html">Predefined Input
-									Items</a>
-							</li>
-						</ul>
-						<h3>
-                            <a href="ussdrequests.html">USSD Requests</a>
-                        </h3>
-                        <ul>
-                            <li><a href="ussdrequests.html">USSD Requests</a>
-                            </li>
-                        </ul>
-					</div></td>
-				<td class="content">
-					<div>
-						<fieldset>
-							<legend>
-								<h2>Create Menu Items</h2>
-							</legend>
-							<form:form method="post" action="addmenuitems.html"
-								commandName="ussdMenuItem">
-								<form:errors path="*" cssClass="errorblock" element="div" />
-								<table>
-									<tr>
-										<td class="formlabels"><form:label path="menuItemParentId">Menu Item Parent ID:</form:label>
-										</td>
-										<td class="form"><form:select cssClass="dropdown"
-												path="menuItemParentId">
-												<form:option value="0" label="--None--" />
-												<c:forEach items="${menuItemList}" var="menuitem">
-													<form:option value="${menuitem.menuItemId}"
-														label="${menuitem.menuItemName}" />
-												</c:forEach>
-											</form:select>
-										</td>
-									</tr>
-
-									<tr>
-										<td class="formlabels"><form:label path="menuItemKeywordId">Associated Keyword Name:</form:label>
-										</td>
-										<td class="form"><form:select cssClass="dropdown" path="menuItemKeywordId">
-												<form:option value="0" label="--None--" />
-												<c:forEach items="${transactionKeywordList}"
-													var="transactionkeyword">
-													<form:option value="${transactionkeyword.keywordId}"
-														label="${transactionkeyword.keywordName}" />
-												</c:forEach>
-											</form:select></td>
-									</tr>
-
-									<tr>
-										<td class="formlabels"><form:label path="menuItemName">Menu Item Name</form:label>
-										</td>
-										<td class="form"><form:input cssClass="formfields" path="menuItemName" />
-										</td>
-									</tr>
-									<tr>
-										<td class="formlabels"><form:label path="menuItemOrder">Menu Item Order</form:label>
-										</td>
-										<td class="form"><form:input cssClass="formfields" path="menuItemOrder" />
-										</td>
-									</tr>
-
-									<tr>
-										<td colspan="2" class="savebutton"><br>
-										<input class="btn" type="submit" value="Save" /> 
-										</td>
-									</tr>
-								</table>
-							</form:form>
-						</fieldset>
-						<table>
-							<tr>
-								<td><br></td>
-							</tr>
-						</table>
-
-					</div></td>
-			</tr>
-		</table>
-		<!-- 	<table border=1px; width=100%;> -->
-		<!-- 		<tr> -->
-		<!-- 			<td>Footer</td> -->
-		<!-- 		</tr> -->
-		<!-- 	</table> -->
-	</div>
-</body>
-</html>
\ No newline at end of file
diff --git a/WebContent/jsp/addussdpredefinput.jsp b/WebContent/jsp/addussdpredefinput.jsp
new file mode 100644
index 0000000..420f97b
--- /dev/null
+++ b/WebContent/jsp/addussdpredefinput.jsp
@@ -0,0 +1,446 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Predefined Inputs Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+
+	function set(box) {
+		if (box == null) {
+			//return null;
+			$('(#enable)').attr('checked', false);
+		} else {
+			$('(#enable)').attr('checked', true);
+
+			//return "checked";
+		}
+
+	}
+</script>
+<style>
+
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+
+/*BUTTONS*/
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 40%;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	width: 2px;
+	padding: 1px;
+	background-color: #F3F3EC;
+	text-align: left;
+	word-wrap: break-word;
+}
+
+td.otherdata {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	width: 1px;
+	padding: 1px;
+	background-color: #F3F3EC;
+	text-align: center;
+	word-wrap: break-word;
+	padding: 1px;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 250px;
+}
+
+.alterformfields {
+	width: 15px;
+	height: 15px;
+	text-align: left;
+}
+
+.alterlabel {
+	vertical-align: top;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div></td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Manage Predefined Inputs</h2>
+						<hr>
+					</td>
+				</tr>
+			</table>
+		</div>
+
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+                    <div id="accordion">
+                        <h3>
+                            <a href="/metomeui/listussdmenuitems.html">Ussd Menu Items
+                                Setup</a>
+                        </h3>
+                        <ul>
+                            <li><a href="/metomeui/listussdmenuitems.html">Ussd Menu
+                                    Items</a>
+                            </li>
+                        </ul>
+                        <h3>
+                            <a href="/metomeui/listussdtransactionkeywords.html">Transaction
+                                Keywords Setup</a>
+                        </h3>
+                        <ul>
+                            <li><a href="/metomeui/listussdtransactionkeywords.html">Transaction
+                                    Keywords</a></li>
+                        </ul>
+                        <h3>
+                            <a href="/metomeui/listussdpredefinputs.html">Predefined
+                                Inputs Setup</a>
+                        </h3>
+                        <ul>
+                            <li><a href="/metomeui/listussdpredefinputs.html">Predefined
+                                    Inputs</a></li>
+                        </ul>
+                    </div>
+                </td>
+				<td class="content">
+					<div>
+						<fieldset>
+							<legend>
+								<h2>Create New Predefined Input</h2>
+							</legend>
+							<form:form method="post" action="addussdpredefinput.html"
+								commandName="ussdPredefInput">
+								<form:errors path="*" cssClass="errorblock" element="div" />
+								<fieldset>
+									<table>
+										<tr>
+											<td class="formlabels"><form:label
+													path="predefInputName">Predefined Input Name</form:label></td>
+											<td class="form"><form:input cssClass="formfields"
+													path="predefInputName" /></td>
+										<tr>
+											<td class="formlabels"><form:label
+													path="predefInputDescription">Predefined Input Description</form:label>
+											</td>
+											<td class="form"><form:input cssClass="formfields"
+													path="predefInputDescription" /></td>
+										</tr>
+									</table>
+								</fieldset>
+								<table>
+									<tr>
+										<td></td>
+										<td><div>
+												<br> <input type="button" name="submit"
+													value="Create New Predefined Input Item"
+													onClick="location.href='addnewussdpredefinputitem.html'">
+											</div>
+										</td>
+										<td></td>
+										<td></td>
+									</tr>
+								</table>
+								<c:if test="${!empty ussdPredefInput.predefInputItems}">
+									<h2>Predefined Items Added</h2>
+									<table class="data">
+										<tr>
+											<th>No.</th>
+											<th>Predefined Input Item Name</th>
+											<th>Predefined Input Item Code</th>
+											<th>Predefined Input Item Order</th>
+											<th>Action</th>
+										</tr>
+										<c:forEach items="${ussdPredefInput.predefInputItems}"
+											var="predefInputItem" varStatus="status">
+											<%-- <c:forEach items="${predefInputItemsList}" var="predefInputItem" varStatus="status"> --%>
+											<%-- <c:forEach items="${predefInputItemsList}" var="predefInputItem" varStatus="status"> --%>
+											<tr class=data>
+												<td class=otherdata>${status.count}</td>
+												<%-- <td class=otherdata><input id="enable" type="checkbox"
+													name="predefInputItems[${status.index}].predefInputItemEnabledFlag"
+													<c:if
+														test="${predefInputItem.predefInputItemEnabledFlag == null}"> $('(#enable)').attr('checked', false) </c:if>
+													<c:if test="${predefInputItem.predefInputItemEnabledFlag != null}"> $('(#enable)').attr('checked', true)</c:if> />
+													<c:if
+														test="${predefInputItem.predefInputItemEnabledFlag == null}"> $('(#enable)').attr('checked', false); </c:if>
+													<c:if test="${predefInputItem.predefInputItemEnabledFlag != null}"> $('(#enable)').attr('checked', true);</c:if>
+												</td> --%>
+												<td class=data><input
+													name="predefInputItems[${status.index}].predefInputItemName"
+													value="${predefInputItem.predefInputItemName}" /></td>
+												<td class=data><input
+													name="predefInputItems[${status.index}].predefInputItemCode"
+													value="${predefInputItem.predefInputItemCode}" /></td>
+												<td class=data><input
+													name="predefInputItems[${status.index}].predefInputItemOrder"
+													value="${predefInputItem.predefInputItemOrder}" /></td>
+
+												<%-- <td class=data><c:if
+														test="${predefinputitem.inputItemId != null}">
+														<c:if
+															test="${predefInputItem.predefInputItemEnabledFlag != 1}">
+															<input type="hidden"
+																name="predefInputItems[${status.index}].predefInputItemEnabledFlag"
+																value="0" />
+															<a
+																href="/metomeui/activatepredefinputitem/${predefInputItem.inputItemId}.html">Activate</a>
+														</c:if>
+														<c:if
+															test="${predefInputItem.predefInputItemEnabledFlag == 1}">
+															<input type="hidden"
+																name="predefInputItems[${status.index}].predefInputItemEnabledFlag"
+																value="1" />
+															<a
+																href="/metomeui/deactivatepredefinputitem/${predefInputItem.inputItemId}.html">Deactivate</a>
+														</c:if>
+														<a
+															href="/metomeui/removepredefinputitem/${predefInputItem.inputItemId}.html">Delete</a>
+														<td class=data><c:if
+														test="${predefInputItem.predefInputItemEnabledFlag == 0}">
+														<a href="#activate/${predefInputItem.inputItemId}">Enable/</a>
+													</c:if> <c:if
+														test="${predefInputItem.predefInputItemEnabledFlag == 1}">
+														<a href="#deactivate/${predefInputItem.inputItemId}">Disable/</a>
+													</c:if> <a
+													href="removemenuitem/${predefInputItem.inputItemId}.html">Delete</a><a>
+														| </a><a href="#edit/${predefInputItem.inputItemId}">Edit</a>
+												</td>
+													</c:if></td> --%>
+											</tr>
+										</c:forEach>
+									</table>
+								</c:if>
+								<br />
+								<input type="submit" value="Save" />
+
+							</form:form>
+						</fieldset>
+					</div></td>
+			</tr>
+		</table>
+	</div>
+
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/addussdpredefinputitems.jsp b/WebContent/jsp/addussdpredefinputitems.jsp
deleted file mode 100644
index 10846e9..0000000
--- a/WebContent/jsp/addussdpredefinputitems.jsp
+++ /dev/null
@@ -1,371 +0,0 @@
-<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
-	pageEncoding="ISO-8859-1"%>
-<%@ include file="include.jsp"%>
-<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-
-<html>
-<head>
-<title>Predefined Input Items Manager</title>
-<link type="text/css"
-	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
-	rel="stylesheet" />
-<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
-<script type="text/javascript"
-	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
-<script type="text/javascript">
-	$(function() {
-		// Accordion
-		$('#accordion').accordion({
-			header : "h3"
-		});
-		// Tabs
-		$('#tabs').tabs();
-		$('#button').button();
-	});
-</script>
-<style>
-
-/*GENERAL*/
-body {
-	font-family: 'Arial', 'Helvetica', sans-serif;
-	font-size: 75%;
-	line-height: 1.6em;
-	background: #F3F3EC;
-	padding: 0;
-}
-
-h1,h2 {
-	font-size: 14px;
-	font-weight: bold;
-}
-
-h3 {
-	font-size: 100%;
-	background: #DDB929;
-	display: block;
-	padding: 1px;
-	color: #fff;
-}
-
-h4 {
-	font-size: 80%;
-	background: #DDB929;
-	display: block;
-	padding: 1px;
-	color: #fff;
-}
-
-label {
-	font-weight: bold;
-	text-align: right;
-}
-
-/*END GENERAL*/
-
-/* ERROR BLOCK */
-.errorblock {
-	color: #000;
-	background-color: #ffEEEE;
-	border: 3px solid #ff0000;
-	padding: 8px;
-	margin: 16px;
-}
-
-/*BUTTONS*/
-button,.btn {
-	background-image:
-		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
-	background-position: left top;
-	background-repeat: repeat-x;
-	background-color: transparent;
-	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
-		-moz-use-text-color;
-	border-style: none none none none;
-	border-width: medium 2px 2px medium;
-	cursor: pointer;
-	display: inline;
-	colour: #008000;
-	font-family: 'Arial', 'Helvetica', sans-serif;
-	font-size: 100%;
-	font-weight: bold;
-	padding: 1px 3px;
-	height: 33px;
-	width: 100px;
-}
-
-hover.btn {
-	color: #0066CC;
-}
-
-/*END BUTTONS*/
-
-/*SIDE BAR*/
-.navbar {
-	vertical-align: top;
-	top: 1px;
-	width: 20%;
-}
-
-/*END SIDE BAR*/
-
-/*CONTENT SECTION*/
-.content {
-	vertical-align: top;
-	top: 1px;
-	width: 80%;
-}
-
-div.header {
-	background: #008000;
-	border: 2px Solid #008000;
-}
-
-div {
-	background: #F3F3EC;
-	margin: 2px;
-	padding: 1px;
-	border: 2px;
-}
-
-fieldset {
-	border-color: #9AC482;
-}
-
-hr {
-	border-color: #9AC482;
-}
-
-li {
-	display: block;
-	margin: 2px 2px 2px -20px;
-}
-
-tr.header {
-	background: #ffffff;
-}
-
-td {
-	height: 19px;
-	width: 30%;
-	margin: 0px 2px 0px 2px;
-	padding: 0px 5px 0px 5px;
-	test-align: center;
-	width: 40%;
-}
-
-th {
-	background: #7CB15C;
-	height: 19px;
-	width: 10%;
-	border-color: #ffffff;
-	text-align: left;
-	padding: 4px;
-	word-wrap: break-word;
-}
-
-td.data {
-	border-color: #9AC482;
-	border-width: 1px 1px 0 0;
-	border-style: solid;
-	margin: 1;
-	padding: 1px;
-	background-color: #F3F3EC;
-	text-align: left;
-	word-wrap: break-word;
-}
-
-tr.data {
-	border: 1px Solid #9AC482;
-}
-
-table.form {
-	padding: 8px;
-	width: 100px;
-}
-
-td.form {
-	padding: 5px;
-	width: 400px;
-}
-
-table.data {
-	width: 100%;
-	font-size: 13px;
-	border: 1px Solid;
-	margin: 0px 0px 1px 1px;
-	padding: 0px;
-	border-color: #9AC482;
-	background-color: #F3F3EC;
-	border-collapse: collapse;
-	text-align: -webkit-auto;
-}
-
-td.savebutton {
-	padding-right: 300px;
-	text-align: right;
-	height: 30px
-}
-
-td.formlabels {
-	text-align: right;
-}
-
-.dropdown {
-	width: 157px;
-	height: 29px;
-}
-
-.formfields {
-	width: 150px;
-	height: 25px;
-}
-
-.labels {
-	text-align: right;
-}
-
-.otherformfields {
-	padding-left: 250px;
-}
-
-/*END CONTENT SECTION*/
-</style>
-</head>
-<body>
-
-	<table style="width: 100%;">
-		<tr style="background-color: #008000;">
-			<td
-				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
-					Money</h1>
-				<div class="header"
-					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
-					Administrator Console</div> <br>
-				<div class="header" style="color: #000000;">
-					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
-						> Administration</a>
-				</div>
-			</td>
-		</tr>
-	</table>
-	<div>
-		<div>
-			<table style="width: 100%;">
-				<tr>
-					<td><h2>Predefined Input Items Manager</h2>
-						<hr></td>
-				</tr>
-			</table>
-		</div>
-
-		<table style="width: 100%;">
-			<tr>
-				<td class="navbar">
-					<div id="accordion">
-						<h3>
-							<a href="ussdmenuitems.html">Ussd Menu Items Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdmenuitems.html">Ussd Menu Items Listing</a>
-							</li>
-							<li><a href="addussdmenuitems.html">Create Ussd Menu
-									Items</a>
-							</li>
-						</ul>
-						<h3>
-							<a href="ussdtransactionkeywords.html">Transaction Keywords
-								Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdtransactionkeywords.html">Transaction
-									Keywords</a>
-							</li>
-							<li><a href="ussdkeywordsteps.html">Keyword Steps</a>
-							</li>
-						</ul>
-						<h3>
-							<a href="ussdpredefinputs.html">Predefined Inputs Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdpredefinputs.html">Predefined Inputs</a>
-							</li>
-							<li><a href="ussdpredefinputitems.html">Predefined Input
-									Items</a>
-							</li>
-						</ul>
-						<h3>
-							<a href="ussdrequests.html">USSD Requests</a>
-						</h3>
-						<ul>
-							<li><a href="ussdrequests.html">USSD Requests</a></li>
-						</ul>
-					</div></td>
-				<td class="content">
-					<div>
-						<fieldset>
-							<legend>
-								<h2>Create Predefined Input Items</h2>
-							</legend>
-							<form:form method="post" action="addpredefinputitems.html"
-								commandName="ussdPredefInputItem">
-								<form:errors path="*" cssClass="errorblock" element="div" />
-
-								<table>
-									<tr>
-										<td class="formlabels"><form:label path="predefInputId">Predefined Input Name</form:label>
-										</td>
-										<td class="form"><form:select cssClass="dropdown"
-												path="predefInputId">
-												<form:option value="0" label="--None--" />
-												<c:forEach items="${predefInputList}" var="predefinput">
-													<form:option value="${predefinput.predefInputId}"
-														label="${predefinput.predefInputName}" />
-												</c:forEach>
-											</form:select>
-										</td>
-									</tr>
-									<tr>
-										<td class="formlabels"><form:label
-												path="predefInputItemName">Predefined Input Item Name</form:label>
-										</td>
-										<td class="form"><form:input cssClass="formfields"
-												path="predefInputItemName" /></td>
-									</tr>
-									<tr>
-										<td class="formlabels"><form:label
-												path="predefInputItemCode">Predefined Input Item Code</form:label>
-										</td>
-										<td class="form"><form:input cssClass="formfields"
-												path="predefInputItemCode" /></td>
-									</tr>
-
-									<tr>
-										<td class="formlabels"><form:label
-												path="predefInputItemOrder">Predefined Input Item Order</form:label>
-										</td>
-										<td class="form"><form:input cssClass="formfields"
-												path="predefInputItemOrder" /></td>
-									</tr>
-
-									<tr>
-										<td class="formlabels"><form:checkbox
-												cssClass="otherformfields" path="predefInputItemEnabledFlag"
-												value="1" /></td>
-										<td class="form"><form:label
-												path="predefInputItemEnabledFlag">Enable Predefined Input Item</form:label>
-										</td>
-									</tr>
-									<tr>
-										<td colspan="2" class="savebutton"><br> <input
-											class="btn" type="submit" value="Save" />
-										</td>
-									</tr>
-								</table>
-							</form:form>
-						</fieldset>
-					</div></td>
-			</tr>
-		</table>
-	</div>
-</body>
-</html>
\ No newline at end of file
diff --git a/WebContent/jsp/addussdpredefinputs.jsp b/WebContent/jsp/addussdpredefinputs.jsp
deleted file mode 100644
index e2553e6..0000000
--- a/WebContent/jsp/addussdpredefinputs.jsp
+++ /dev/null
@@ -1,341 +0,0 @@
-<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
-	pageEncoding="ISO-8859-1"%>
-<%@ include file="include.jsp"%>
-<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-
-<html>
-<head>
-<title>Predefined Inputs Manager</title>
-<link type="text/css"
-	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
-	rel="stylesheet" />
-<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
-<script type="text/javascript"
-	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
-<script type="text/javascript">
-	$(function() {
-		// Accordion
-		$('#accordion').accordion({
-			header : "h3"
-		});
-		// Tabs
-		$('#tabs').tabs();
-		$('#button').button();
-	});
-</script>
-<style>
-
-/*GENERAL*/
-body {
-    font-family: 'Arial', 'Helvetica', sans-serif;
-    font-size: 75%;
-    line-height: 1.6em;
-    background: #F3F3EC;
-    padding: 0;
-}
-
-h1,h2 {
-    font-size: 14px;
-    font-weight: bold;
-}
-
-h3 {
-    font-size: 100%;
-    background: #DDB929;
-    display: block;
-    padding: 1px;
-    color: #fff;
-}
-
-h4 {
-    font-size: 80%;
-    background: #DDB929;
-    display: block;
-    padding: 1px;
-    color: #fff;
-}
-
-label {
-    font-weight: bold;
-    text-align: right;
-}
-
-/*END GENERAL*/
-
-/* ERROR BLOCK */
-.errorblock {
-    color: #000;
-    background-color: #ffEEEE;
-    border: 3px solid #ff0000;
-    padding: 8px;
-    margin: 16px;
-}
-
-/*BUTTONS*/
-button,.btn {
-    background-image:
-        url('resources/css/ui-lightness/images/CuteCapLa7.gif');
-    background-position: left top;
-    background-repeat: repeat-x;
-    background-color: transparent;
-    border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
-        -moz-use-text-color;
-    border-style: none none none none;
-    border-width: medium 2px 2px medium;
-    cursor: pointer;
-    display: inline;
-    colour: #008000;
-    font-family: 'Arial', 'Helvetica', sans-serif;
-    font-size: 100%;
-    font-weight: bold;
-    padding: 1px 3px;
-    height: 33px;
-    width: 100px;
-}
-
-hover.btn {
-    color: #0066CC;
-}
-
-/*END BUTTONS*/
-
-/*SIDE BAR*/
-.navbar {
-    vertical-align: top;
-    top: 1px;
-    width: 20%;
-}
-
-/*END SIDE BAR*/
-
-/*CONTENT SECTION*/
-.content {
-    vertical-align: top;
-    top: 1px;
-    width: 80%;
-}
-
-div.header {
-    background: #008000;
-    border: 2px Solid #008000;
-}
-
-div {
-    background: #F3F3EC;
-    margin: 2px;
-    padding: 1px;
-    border: 2px;
-}
-
-fieldset {
-    border-color: #9AC482;
-}
-
-hr {
-    border-color: #9AC482;
-}
-
-li {
-    display: block;
-    margin: 2px 2px 2px -20px;
-}
-
-tr.header {
-    background: #ffffff;
-}
-
-td {
-    height: 19px;
-    width: 30%;
-    margin: 0px 2px 0px 2px;
-    padding: 0px 5px 0px 5px;
-    test-align: center;
-    width: 40%;
-}
-
-
-th {
-    background: #7CB15C;
-    height: 19px;
-    width: 10%;
-    border-color: #ffffff;
-    text-align: left;
-    padding: 4px;
-    word-wrap: break-word;
-}
-
-td.data {
-    border-color: #9AC482;
-    border-width: 1px 1px 0 0;
-    border-style: solid;
-    margin: 1;
-    padding: 1px;
-    background-color: #F3F3EC;
-    text-align: left;
-    word-wrap: break-word;
-}
-
-tr.data {
-    border: 1px Solid #9AC482;
-}
-
-table.form {
-    padding: 8px;
-    width: 100px;
-}
-
-td.form {
-    padding: 5px;
-    width: 400px;
-}
-
-table.data {
-    width: 100%;
-    font-size: 13px;
-    border: 1px Solid;
-    margin: 0px 0px 1px 1px;
-    padding: 0px;
-    border-color: #9AC482;
-    background-color: #F3F3EC;
-    border-collapse: collapse;
-    text-align: -webkit-auto;
-}
-
-td.savebutton {
-    padding-right: 300px;
-    text-align: right;
-    height: 30px
-}
-
-td.formlabels{
-text-align:right;
-}
-
-.dropdown{
-width: 157px;
-height: 29px;
-}
-
-.formfields{
-width: 150px;
-height: 25px;
-}
-
-.labels{
-text-align:right;
-}
-
-.otherformfields {
-    padding-left:250px;
-}
-
-/*END CONTENT SECTION*/
-</style>
-</head>
-<body>
-
-	<table style="width: 100%;">
-		<tr style="background-color: #008000;">
-			<td
-				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
-					Money</h1>
-				<div class="header"
-					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
-					Administrator Console</div> <br>
-				<div class="header" style="color: #000000;">
-					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
-						> Administration</a>
-				</div>
-			</td>
-		</tr>
-	</table>
-	<div>
-		<div>
-			<table style="width: 100%;">
-				<tr>
-					<td><h2>Predefined Inputs Manager</h2>
-						<hr></td>
-				</tr>
-			</table>
-		</div>
-
-		<table style="width: 100%;">
-			<tr>
-				<td class="navbar">
-					<div id="accordion">
-						<h3>
-							<a href="ussdmenuitems.html">Ussd Menu Items Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdmenuitems.html">Ussd Menu Items Listing</a>
-							</li>
-							<li><a href="addussdmenuitems.html">Create Ussd Menu
-									Items</a>
-							</li>
-						</ul>
-						<h3>
-							<a href="ussdtransactionkeywords.html">Transaction Keywords
-								Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdtransactionkeywords.html">Transaction
-									Keywords</a>
-							</li>
-							<li><a href="ussdkeywordsteps.html">Keyword Steps</a>
-							</li>
-						</ul>
-						<h3>
-							<a href="ussdpredefinputs.html">Predefined Inputs Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdpredefinputs.html">Predefined Inputs</a>
-							</li>
-							<li><a href="ussdpredefinputitems.html">Predefined Input
-									Items</a>
-							</li>
-						</ul>
-						<h3>
-                            <a href="ussdrequests.html">USSD Requests</a>
-                        </h3>
-                        <ul>
-                            <li><a href="ussdrequests.html">USSD Requests</a>
-                            </li>
-                        </ul>
-					</div></td>
-				<td class="content">
-					<div>
-                        <fieldset>
-                            <legend>
-                                <h2>Create Predefined Inputs</h2>
-                            </legend>
-						
-					 <form:form method="post" action="addpredefinputs.html"
-						commandName="ussdPredefInput">
-						<form:errors path="*" cssClass="errorblock" element="div" />
-							<table>
-								<tr>
-									<td class="formlabels"><form:label path="predefInputName">Predefined Input Name</form:label>
-									</td>
-									<td class="form"><form:input cssClass= "formfields" path="predefInputName" /></td>
-								</tr>
-								<tr>
-									<td class="formlabels"><form:label path="predefInputDescription">Predefined Input Description</form:label>
-									</td>
-									<td class="form"><form:input cssClass= "formfields" path="predefInputDescription" /></td>
-								</tr>
-								<tr>
-                                        <td colspan="2" class="savebutton"><br>
-                                        <input class="btn" type="submit" value="Save" /> 
-                                        </td>
-                                    </tr>
-							</table>
-					</form:form>
-					</fieldset>
-					</div>
-					</td>
-					</tr>		
-		</table>
-	</div>
-
-</body>
-</html>
\ No newline at end of file
diff --git a/WebContent/jsp/addussdtransactionkeyword.jsp b/WebContent/jsp/addussdtransactionkeyword.jsp
new file mode 100644
index 0000000..fc3072b
--- /dev/null
+++ b/WebContent/jsp/addussdtransactionkeyword.jsp
@@ -0,0 +1,450 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Transaction Keywords Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+</script>
+<style>
+
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+
+/*BUTTONS*/
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 40%;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	width: 10%;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	padding: 1px;
+	background-color: #F3F3EC;
+	text-align: left;
+	word-wrap: break-word;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 250px;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div></td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Transaction Keywords Manager</h2>
+						<hr>
+					</td>
+				</tr>
+			</table>
+		</div>
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+                    <div id="accordion">
+                        <h3>
+                            <a href="/metomeui/listussdmenuitems.html">Ussd Menu Items
+                                Setup</a>
+                        </h3>
+                        <ul>
+                            <li><a href="/metomeui/listussdmenuitems.html">Ussd Menu
+                                    Items</a>
+                            </li>
+                        </ul>
+                        <h3>
+                            <a href="/metomeui/listussdtransactionkeywords.html">Transaction
+                                Keywords Setup</a>
+                        </h3>
+                        <ul>
+                            <li><a href="/metomeui/listussdtransactionkeywords.html">Transaction
+                                    Keywords</a></li>
+                        </ul>
+                        <h3>
+                            <a href="/metomeui/listussdpredefinputs.html">Predefined
+                                Inputs Setup</a>
+                        </h3>
+                        <ul>
+                            <li><a href="/metomeui/listussdpredefinputs.html">Predefined
+                                    Inputs</a></li>
+                        </ul>
+                    </div>
+                </td>
+				<td class="content">
+					<div>
+						<fieldset>
+							<legend>
+								<h2>Create Transaction Keyword</h2>
+							</legend>
+							<form:form method="post" action="addussdtransactionkeyword.html"
+								commandName="ussdTransactionKeyword">
+								<form:errors path="*" cssClass="errorblock" element="div" />
+								<fieldset>
+									<table>
+										<tr>
+											<td class="formlabels"><form:label path="keywordCode">Transaction Keyword Code:</form:label>
+											</td>
+											<td class="form"><form:input cssClass="formfields"
+													path="keywordCode" /></td>
+										</tr>
+										<tr>
+											<td class="formlabels"><form:label path="keywordName">Transaction Keyword Name</form:label>
+											</td>
+											<td class="form"><form:input cssClass="formfields"
+													path="keywordName" /></td>
+										</tr>
+										<tr>
+											<td class="formlabels"><form:label
+													path="keywordDescription">Transaction Keyword Description</form:label>
+											</td>
+											<td class="form"><form:input cssClass="formfields"
+													path="keywordDescription" /></td>
+										</tr>
+										<tr>
+											<td class="formlabels"><form:label
+													path="keywordStepsCount">Transaction Keyword Step Count</form:label>
+											</td>
+											<td class="form"><form:input cssClass="formfields"
+													path="keywordStepsCount" /></td>
+										</tr>
+										<tr>
+											<td class="formlabels"><form:checkbox
+													cssClass="otherformfields" path="keywordEnabledFlag"
+													value="1" /></td>
+											<td><form:label path="keywordEnabledFlag">Enable Transaction Keyword</form:label>
+											</td>
+										</tr>
+									</table>
+								</fieldset>
+								<table>
+									<tr>
+										<td></td>
+										<td><div>
+												<br> <input type="button" name="submit"
+													value="Add Keyword Step"
+													onClick="location.href='addnewussdkeywordstep.html'">
+											</div></td>
+										<td></td>
+										<td></td>
+									</tr>
+								</table>
+								<c:if test="${!empty ussdTransactionKeyword.keywordSteps}">
+									<table class="data">
+										<tr>
+											<th>No.</th>
+											<th>Step Menu Name</th>
+											<th>Step Menu Number</th>
+											<th>Is First Step Flag</th>
+											<th>Is Last Step Flag</th>
+											<th>Has Predefined Input</th>
+											<th>Predefined Input</th>
+											<th>Use Fixed Value</th>
+											<th>Fixed Value</th>
+											<!--                                <th>Action</th> -->
+										</tr>
+										<c:forEach items="${ussdTransactionKeyword.keywordSteps}"
+											var="keywordSteps" varStatus="status">
+											<tr class="data">
+												<td>${status.count}</td>
+												<%-- <td><input
+													name="keywordSteps[${status.index}].keywordStepId"
+													value="${keywordSteps.keywordStepId}" />
+												</td> --%>
+												<td class="data"><input
+													name="keywordSteps[${status.index}].stepMenuName"
+													value="${keywordSteps.stepMenuName}" /></td>
+												<td class="data"><input size="2"
+													name="keywordSteps[${status.index}].stepMenuNumber"
+													value="${keywordSteps.stepMenuNumber}" />
+												</td>
+												<td class="data"><c:if
+														test="${keywordSteps.isFirstStepFlag == 0}">No <input
+															type="hidden"
+															name="keywordSteps[${status.index}].isFirstStepFlag"
+															value="${keywordSteps.isFirstStepFlag}" />
+													</c:if> <c:if test="${keywordSteps.isFirstStepFlag == 1}">Yes<input
+															type="hidden"
+															name="keywordSteps[${status.index}].isFirstStepFlag"
+															value="${keywordSteps.isFirstStepFlag}" />
+													</c:if></td>
+												<td class="data"><c:if
+														test="${keywordSteps.isLastStepFlag == 0}">No <input
+															type="hidden"
+															name="keywordSteps[${status.index}].isLastStepFlag"
+															value="${keywordSteps.isLastStepFlag}" />
+													</c:if> <c:if test="${keywordSteps.isLastStepFlag == 1}">Yes<input
+															type="hidden"
+															name="keywordSteps[${status.index}].isLastStepFlag"
+															value="${keywordSteps.isFirstStepFlag}" />
+													</c:if></td>
+												<td class="data"><c:if
+														test="${keywordSteps.hasPredefInputFlag == 0}">No <input
+															type="hidden"
+															name="keywordSteps[${status.index}].hasPredefInputFlag"
+															value="${keywordSteps.hasPredefInputFlag}" />
+													</c:if> <c:if test="${keywordSteps.hasPredefInputFlag == 1}">Yes <input
+															type="hidden"
+															name="keywordSteps[${status.index}].hasPredefInputFlag"
+															value="${keywordSteps.hasPredefInputFlag}" />
+													</c:if></td>
+												<td class="data"><c:forEach items="${predefInputList}"
+														var="predefinput">
+														<c:if
+															test="${predefinput.predefInputId == keywordSteps.predefInput.predefInputId}">
+															<c:out value= "${predefinput.predefInputName}" />
+														</c:if>
+													</c:forEach><input type="hidden" name="keywordSteps[${status.index}].predefInput.predefInputId"
+													value="${keywordSteps.predefInput.predefInputId}" />
+												</td>
+												<td class="data"><c:if
+														test="${keywordSteps.useFixedValueFlag == 0}">No <input
+															type="hidden"
+															name="keywordSteps[${status.index}].useFixedValueFlag"
+															value="${keywordSteps.useFixedValueFlag}" />
+													</c:if> <c:if test="${keywordSteps.useFixedValueFlag == 1}">Yes <input
+															type="hidden"
+															name="keywordSteps[${status.index}].useFixedValueFlag"
+															value="${keywordSteps.useFixedValueFlag}" />
+													</c:if>
+												</td>
+												<td class="data"><input
+													name="keywordSteps[${status.index}].fixedValue"
+													value="${keywordSteps.fixedValue}"/></td>
+												<!--                                    <td align="center"><a -->
+												<%--                                        href="removekeywordstep/${keywordstep.keywordStepId}.html">Delete</a><a> --%>
+												<%--                                            | </a><a href="#edit/${keywordstep.keywordStepId}">Edit</a></td> --%>
+											</tr>
+										</c:forEach>
+									</table>
+								</c:if>
+								<br />
+								<input type="submit" value="Save" class="btn" />
+
+							</form:form>
+						</fieldset>
+					</div>
+				</td>
+			</tr>
+		</table>
+	</div>
+
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/addussdtransactionkeywords.jsp b/WebContent/jsp/addussdtransactionkeywords.jsp
deleted file mode 100644
index 6c464a6..0000000
--- a/WebContent/jsp/addussdtransactionkeywords.jsp
+++ /dev/null
@@ -1,364 +0,0 @@
-<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
-	pageEncoding="ISO-8859-1"%>
-<%@ include file="include.jsp"%>
-<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-
-<html>
-<head>
-<title>Transaction Keywords Manager</title>
-<link type="text/css"
-	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
-	rel="stylesheet" />
-<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
-<script type="text/javascript"
-	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
-<script type="text/javascript">
-	$(function() {
-		// Accordion
-		$('#accordion').accordion({
-			header : "h3"
-		});
-		// Tabs
-		$('#tabs').tabs();
-		$('#button').button();
-	});
-</script>
-<style>
-
-/*GENERAL*/
-body {
-	font-family: 'Arial', 'Helvetica', sans-serif;
-	font-size: 75%;
-	line-height: 1.6em;
-	background: #F3F3EC;
-	padding: 0;
-}
-
-h1,h2 {
-	font-size: 14px;
-	font-weight: bold;
-}
-
-h3 {
-	font-size: 100%;
-	background: #DDB929;
-	display: block;
-	padding: 1px;
-	color: #fff;
-}
-
-h4 {
-	font-size: 80%;
-	background: #DDB929;
-	display: block;
-	padding: 1px;
-	color: #fff;
-}
-
-label {
-	font-weight: bold;
-	text-align: right;
-}
-
-/*END GENERAL*/
-
-/* ERROR BLOCK */
-.errorblock {
-	color: #000;
-	background-color: #ffEEEE;
-	border: 3px solid #ff0000;
-	padding: 8px;
-	margin: 16px;
-}
-
-/*BUTTONS*/
-button,.btn {
-	background-image:
-		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
-	background-position: left top;
-	background-repeat: repeat-x;
-	background-color: transparent;
-	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
-		-moz-use-text-color;
-	border-style: none none none none;
-	border-width: medium 2px 2px medium;
-	cursor: pointer;
-	display: inline;
-	colour: #008000;
-	font-family: 'Arial', 'Helvetica', sans-serif;
-	font-size: 100%;
-	font-weight: bold;
-	padding: 1px 3px;
-	height: 33px;
-	width: 100px;
-}
-
-hover.btn {
-	color: #0066CC;
-}
-
-/*END BUTTONS*/
-
-/*SIDE BAR*/
-.navbar {
-	vertical-align: top;
-	top: 1px;
-	width: 20%;
-}
-
-/*END SIDE BAR*/
-
-/*CONTENT SECTION*/
-.content {
-	vertical-align: top;
-	top: 1px;
-	width: 80%;
-}
-
-div.header {
-	background: #008000;
-	border: 2px Solid #008000;
-}
-
-div {
-	background: #F3F3EC;
-	margin: 2px;
-	padding: 1px;
-	border: 2px;
-}
-
-fieldset {
-	border-color: #9AC482;
-}
-
-hr {
-	border-color: #9AC482;
-}
-
-li {
-	display: block;
-	margin: 2px 2px 2px -20px;
-}
-
-tr.header {
-	background: #ffffff;
-}
-
-td {
-	height: 19px;
-	width: 30%;
-	margin: 0px 2px 0px 2px;
-	padding: 0px 5px 0px 5px;
-	test-align: center;
-	width: 40%;
-}
-
-th {
-	background: #7CB15C;
-	height: 19px;
-	width: 10%;
-	border-color: #ffffff;
-	text-align: left;
-	padding: 4px;
-	word-wrap: break-word;
-}
-
-td.data {
-	border-color: #9AC482;
-	border-width: 1px 1px 0 0;
-	border-style: solid;
-	margin: 1;
-	padding: 1px;
-	background-color: #F3F3EC;
-	text-align: left;
-	word-wrap: break-word;
-}
-
-tr.data {
-	border: 1px Solid #9AC482;
-}
-
-table.form {
-	padding: 8px;
-	width: 100px;
-}
-
-td.form {
-	padding: 5px;
-	width: 400px;
-}
-
-table.data {
-	width: 100%;
-	font-size: 13px;
-	border: 1px Solid;
-	margin: 0px 0px 1px 1px;
-	padding: 0px;
-	border-color: #9AC482;
-	background-color: #F3F3EC;
-	border-collapse: collapse;
-	text-align: -webkit-auto;
-}
-
-td.savebutton {
-	padding-right: 300px;
-	text-align: right;
-	height: 30px
-}
-
-td.formlabels {
-	text-align: right;
-}
-
-.dropdown {
-	width: 157px;
-	height: 29px;
-}
-
-.formfields {
-	width: 150px;
-	height: 25px;
-}
-
-.labels {
-	text-align: right;
-}
-
-.otherformfields {
-	padding-left: 250px;
-}
-
-/*END CONTENT SECTION*/
-</style>
-</head>
-<body>
-
-	<table style="width: 100%;">
-		<tr style="background-color: #008000;">
-			<td
-				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
-					Money</h1>
-				<div class="header"
-					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
-					Administrator Console</div> <br>
-				<div class="header" style="color: #000000;">
-					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
-						> Administration</a>
-				</div>
-			</td>
-		</tr>
-	</table>
-	<div>
-		<div>
-			<table style="width: 100%;">
-				<tr>
-					<td><h2>Transaction Keywords Manager</h2>
-						<hr></td>
-				</tr>
-			</table>
-		</div>
-
-		<table style="width: 100%;">
-			<tr>
-				<td class="navbar">
-					<div id="accordion">
-						<h3>
-							<a href="ussdmenuitems.html">Ussd Menu Items Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdmenuitems.html">Ussd Menu Items Listing</a>
-							</li>
-							<li><a href="addussdmenuitems.html">Create Ussd Menu
-									Items</a>
-							</li>
-						</ul>
-						<h3>
-							<a href="ussdtransactionkeywords.html">Transaction Keywords
-								Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdtransactionkeywords.html">Transaction
-									Keywords</a>
-							</li>
-							<li><a href="ussdkeywordsteps.html">Keyword Steps</a>
-							</li>
-						</ul>
-						<h3>
-							<a href="ussdpredefinputs.html">Predefined Inputs Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdpredefinputs.html">Predefined Inputs</a>
-							</li>
-							<li><a href="ussdpredefinputitems.html">Predefined Input
-									Items</a>
-							</li>
-						</ul>
-						<h3>
-                            <a href="ussdrequests.html">USSD Requests</a>
-                        </h3>
-                        <ul>
-                            <li><a href="ussdrequests.html">USSD Requests</a>
-                            </li>
-                        </ul>
-					</div></td>
-				<td class="content">
-					<div>
-						<fieldset>
-							<legend>
-								<h2>Create Transaction Keyword</h2>
-							</legend>
-							<form:form method="post" action="addtransactionkeywords.html"
-								commandName="ussdTransactionKeyword">
-								<form:errors path="*" cssClass="errorblock" element="div" />
-								<table>
-									<tr>
-										<td class="formlabels"><form:label path="keywordCode">Transaction Keyword Code:</form:label>
-										</td>
-										<td class="form"><form:input cssClass="formfields"
-												path="keywordCode" />
-										</td>
-									</tr>
-									<tr>
-										<td class="formlabels"><form:label path="keywordName">Transaction Keyword Name</form:label>
-										</td>
-										<td class="form"><form:input cssClass="formfields"
-												path="keywordName" />
-										</td>
-									</tr>
-									<tr>
-										<td class="formlabels"><form:label
-												path="keywordDescription">Transaction Keyword Description</form:label>
-										</td>
-										<td class="form"><form:input cssClass="formfields"
-												path="keywordDescription" />
-										</td>
-									</tr>
-									<tr>
-										<td class="formlabels"><form:label
-												path="keywordStepsCount">Transaction Keyword Step Count</form:label>
-										</td>
-										<td class="form"><form:input cssClass="formfields"
-												path="keywordStepsCount" />
-										</td>
-									</tr>
-									<tr>
-										<td class="formlabels"><form:checkbox cssClass="otherformfields"
-												path="keywordEnabledFlag" value="1"/>
-										</td>
-										<td><form:label path="keywordEnabledFlag">Enable Transaction Keyword</form:label>
-										</td>
-									</tr>
-
-									<tr>
-										<td colspan="2" class="savebutton"><br> <input
-											class="btn" type="submit" value="Save" /></td>
-									</tr>
-								</table>
-							</form:form>
-						</fieldset>
-					</div></td>
-			</tr>
-		</table>
-	</div>
-</body>
-</html>
\ No newline at end of file
diff --git a/WebContent/jsp/editaccounttype.jsp b/WebContent/jsp/editaccounttype.jsp
new file mode 100644
index 0000000..2c7fa24
--- /dev/null
+++ b/WebContent/jsp/editaccounttype.jsp
@@ -0,0 +1,401 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Predefined Inputs Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+
+	function set(box) {
+		if (box == null) {
+			//return null;
+			$('(#enable)').attr('checked', false);
+		} else {
+			$('(#enable)').attr('checked', true);
+
+			//return "checked";
+		}
+
+	}
+</script>
+<style>
+
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+
+/*BUTTONS*/
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 40%;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	width: 2px;
+	padding: 1px;
+	background-color: #F3F3EC;
+	text-align: left;
+	word-wrap: break-word;
+}
+
+td.otherdata {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	width: 1px;
+	padding: 1px;
+	background-color: #F3F3EC;
+	text-align: center;
+	word-wrap: break-word;
+	padding: 1px;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 250px;
+}
+
+.alterformfields {
+	width: 15px;
+	height: 15px;
+	text-align: left;
+}
+
+.alterlabel {
+	vertical-align: top;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div>
+			</td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Manage Predefined Inputs</h2>
+						<hr></td>
+				</tr>
+			</table>
+		</div>
+
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+					<div id="accordion">
+						<h3>
+							<a href="ussdmenuitems.html">Ussd Menu Setup</a>
+						</h3>
+						<ul>
+							<li><a href="/metomeui/listussdmenuitems.html">Ussd Menu
+									Items Setup</a></li>
+							<li><a href="/metomeui/listussdtransactionkeywords.html">Transaction
+									Keywords Setup</a>
+							</li>
+							<li><a href="/metomeui/listussdkeywordsteps.html">Keyword
+									Steps</a></li>
+							<li><a href="/metomeui/listussdpredefinputs.html">Predefined
+									Inputs Setup</a>
+							</li>
+						</ul>
+						<h3>
+							<a href="/metomeui/charge.html">Charge Setup</a>
+						</h3>
+						<ul>
+							<li><a href="/metomeui/charge.html">Configure Charges</a>
+							</li>
+							<li><a href="/metomeui/accounttypes.html">Manage Account
+									Types</a>
+							</li>
+						</ul>
+					</div></td>
+				<td class="content">
+					<div>
+						<fieldset>
+							<legend>
+								<h2>Edit Account Types</h2>
+							</legend>
+							<%--               action="/metomeui/editcontacts.html"                 --%>
+							<form:form method="post"
+								action="/metomeui/editaccounttype/${accountTypes.accountTypeId}.html"
+								commandName="accountType">
+
+								<form:errors path="*" cssClass="errorblock" element="div" />
+								<form:errors path="*" cssClass="errorblock" element="div" />
+
+								<table>
+
+									<tr>
+										<td class="formlabels"><form:label path="accountTypeId">Menu Item Parent ID:</form:label>
+										</td>
+
+										<td class="form"><form:input cssClass="formfields"
+												path="accountTypeId" value="${accountType.accountTypeId}"
+												disabled="true" /><input type="hidden" name="accountTypeId"
+											value="${accountType.accountTypeId}" /></td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label path="accountTypeCode">Account Code: </form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="accountTypeCode"
+												value="${accountType.accountTypeCode}" /></td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label path="accountTypeName">Account Name: </form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="accountTypeName"
+												value="${accountType.accountTypeName}" /></td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label
+												path="accountTypeBitMap">Account Bitmap:</form:label>
+										</td>
+										<td class="form"><form:checkbox
+												cssClass="alterformfields" path="accountTypeBitMap"
+												value="0" /><label class="alterlabel">Undefined</label><br>
+											<form:checkbox cssClass="alterformfields"
+												path="accountTypeBitMap" value="1" /><label
+											class="alterlabel">Dealer</label><br> <form:checkbox
+												cssClass="alterformfields" path="accountTypeBitMap"
+												value="2" /><label class="alterlabel">Agent</label>
+										</td>
+									</tr>
+
+									<tr>
+										<td class="formlabels"><form:label
+												path="accountMaximumBookBalance">Maximum Book Balance:</form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="accountMaximumBookBalance"
+												value="${accountType.accountTypeId}" /></td>
+									</tr>
+									<tr>
+										<td colspan="2" class="savebutton"><input class="btn"
+											type="submit" value="addaccounttypes" /></td>
+									</tr>
+								</table>
+							</form:form>
+						</fieldset>
+					</div></td>
+			</tr>
+		</table>
+	</div>
+
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/editaddnewussdkeywordstep.jsp b/WebContent/jsp/editaddnewussdkeywordstep.jsp
new file mode 100644
index 0000000..a702f53
--- /dev/null
+++ b/WebContent/jsp/editaddnewussdkeywordstep.jsp
@@ -0,0 +1,413 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Transaction Keywords Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+</script>
+<style>
+
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+
+/*BUTTONS*/
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 40%;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	width: 2px;
+	padding: 1px;
+	background-color: #F3F3EC;
+	text-align: left;
+	word-wrap: break-word;
+}
+
+td.otherdata {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	width: 1px;
+	padding: 1px;
+	background-color: #F3F3EC;
+	text-align: center;
+	word-wrap: break-word;
+	padding: 1px;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 250px;
+}
+
+.alterformfields {
+	width: 15px;
+	height: 15px;
+	text-align: left;
+}
+
+.alterlabel {
+	vertical-align: top;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div>
+			</td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Manage Transaction Keywords</h2>
+						<hr></td>
+				</tr>
+			</table>
+		</div>
+
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+					<div id="accordion">
+						<h3>
+							<a href="/metomeui/listussdmenuitems.html">Ussd Menu Items
+								Setup</a>
+						</h3>
+						<ul>
+							<li><a href="/metomeui/listussdmenuitems.html">Ussd Menu
+									Items</a></li>
+						</ul>
+						<h3>
+							<a href="/metomeui/listussdtransactionkeywords.html">Transaction
+								Keywords Setup</a>
+						</h3>
+						<ul>
+							<li><a href="/metomeui/listussdtransactionkeywords.html">Transaction
+									Keywords</a>
+							</li>
+						</ul>
+						<h3>
+							<a href="/metomeui/listussdpredefinputs.html">Predefined
+								Inputs Setup</a>
+						</h3>
+						<ul>
+							<li><a href="/metomeui/listussdpredefinputs.html">Predefined
+									Inputs</a>
+							</li>
+						</ul>
+					</div></td>
+				<td class="content">
+					<div>
+						<fieldset>
+							<legend>
+								<h2>Edit Transaction Keyword Steps</h2>
+							</legend>
+							<form:form method="post"
+								action="/metomeui/editaddnewussdkeywordstep/${keywordId}.html"
+								commandName="ussdKeywordStep">
+								<form:errors path="*" cssClass="errorblock" element="div" />
+								<table>
+									<tr>
+										<td><input type="hidden" name="keywordId"
+											value="${keywordId}" /></td>
+									</tr>
+									<tr>
+
+										<td class="formlabels"><form:label path="stepMenuName"> Step Menu Name:</form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="stepMenuName" />
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label path="stepMenuNumber">Step Menu Number</form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="stepMenuNumber" />
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:checkbox
+												cssClass="otherformfields" path="isFirstStepFlag" value="1" />
+										</td>
+										<td class="form"><form:label path="isFirstStepFlag">Is First Step</form:label>
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:checkbox
+												cssClass="otherformfields" path="isLastStepFlag" value="1" />
+										</td>
+										<td class="form"><form:label path="isLastStepFlag">Is Last Step</form:label>
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:checkbox
+												cssClass="otherformfields" path="hasPredefInputFlag"
+												value="1" />
+										</td>
+										<td class="form"><form:label path="hasPredefInputFlag">Keyword Step has Predefined Input: </form:label>
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label
+												path="predefInput.predefInputId">Predefined Input Name</form:label>
+										</td>
+										<td class="form"><form:select cssClass="dropdown"
+												path="predefInput.predefInputId">
+												<form:option value="0" label="--None--" />
+												<c:forEach items="${predefInputList}" var="predefinput">
+													<form:option value="${predefinput.predefInputId}"
+														label="${predefinput.predefInputName}" />
+												</c:forEach>
+											</form:select>
+										</td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:checkbox
+												cssClass="otherformfields" path="useFixedValueFlag"
+												value="1" />
+										</td>
+										<td class="form"><form:label path="useFixedValueFlag">Use Fixed Value </form:label>
+										</td>
+									</tr>
+
+									<tr>
+										<td class="formlabels"><form:label path="fixedValue"> Fixed Value:</form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="fixedValue" /></td>
+									</tr>
+
+									<tr>
+										<td></td>
+										<td><input type="submit" name="Add" id="Add" value="Add" /><input
+											type="button" value="Cancel"
+											onClick="location.href='/metomeui/editussdtransactionkeyword/${keywordId}.html'" />
+										</td>
+									</tr>
+								</table>
+							</form:form>
+						</fieldset>
+					</div>
+				</td>
+			</tr>
+		</table>
+	</div>
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/editaddnewussdpredefinputitem.jsp b/WebContent/jsp/editaddnewussdpredefinputitem.jsp
new file mode 100644
index 0000000..6921622
--- /dev/null
+++ b/WebContent/jsp/editaddnewussdpredefinputitem.jsp
@@ -0,0 +1,332 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Predefined Inputs Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+		$('#enable').is(':checked');
+
+	});
+
+	/* function testButton (form)
+	    if (form.enable.checked){
+	    	return 1;
+	    }
+	    if (!(form.enable.checked)){
+	    	return 0;
+	    }
+	} */
+</script>
+<style>
+
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+
+/*BUTTONS*/
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 40%;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	width: 10%;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	padding: 1px;
+	background-color: #F3F3EC;
+	text-align: left;
+	word-wrap: break-word;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 250px;
+}
+
+.alterformfields {
+	width: 15px;
+	height: 15px;
+	text-align: left;
+}
+
+.alterlabel {
+	vertical-align: top;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div>
+			</td>
+		</tr>
+	</table>
+	<table>
+		<tr>
+			<td class="content">
+				<div>
+					<fieldset>
+						<legend>
+							<h2>Edit Existing Predefined Input Item</h2>
+						</legend>
+
+						<form:form method="post"
+							action="/metomeui/editaddnewussdpredefinputitem/${predefInputId}.html"
+							modelAttribute="ussdPredefInputItem">
+							<table>
+								<tr>
+									<td><input type="hidden" name="predefInputId"
+										value="${predefInputId}" /></td>
+								</tr>
+								<tr>
+									<td class="formlabels"><form:label
+											path="predefInputItemName">Predefined Input Item Name</form:label>
+									</td>
+									<td class="form"><form:input cssClass="formfields"
+											path="predefInputItemName" /></td>
+								</tr>
+								<tr>
+									<td class="formlabels"><form:label
+											path="predefInputItemCode">Predefined Input Item Code</form:label>
+									</td>
+									<td class="form"><form:input cssClass="formfields"
+											path="predefInputItemCode" /></td>
+								</tr>
+								<tr>
+									<td class="formlabels"><form:label
+											path="predefInputItemOrder">Predefined Input Item Order</form:label>
+									</td>
+									<td class="form"><form:input cssClass="formfields"
+											path="predefInputItemOrder" /></td>
+								</tr>
+								<tr>
+									<td class="formlabels"><form:checkbox id="enable"
+											cssClass="otherformfields" path="predefInputItemEnabledFlag"
+											value="1" /></td>
+									<td class="form"><form:label
+											path="predefInputItemEnabledFlag">Enable Predefined Input Item</form:label>
+									</td>
+								</tr>
+
+								<tr>
+									<td></td>
+									<td><input type="submit" name="Add" id="Add" value="Add" /><input
+										type="button" value="Cancel"
+										onClick="location.href='/metomeui/editussdpredefinput/${predefInputId}.html'" />
+									</td>
+								</tr>
+							</table>
+						</form:form>
+					</fieldset>
+				</div></td>
+		</tr>
+	</table>
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/editedussdpredefinputs.jsp b/WebContent/jsp/editedussdpredefinputs.jsp
deleted file mode 100644
index ee061db..0000000
--- a/WebContent/jsp/editedussdpredefinputs.jsp
+++ /dev/null
@@ -1,20 +0,0 @@
-<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
-	pageEncoding="ISO-8859-1"%>
-<%@ include file="include.jsp"%>
-<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-
-<html>
-<head>
-<title>Predefined Input Items Manager</title>
-</head>
-<body>
-
-	<h2>Predefined Input Items Manager</h2>
-
-	<p>You have edited an entry with id ${predeInputId} at <%= new java.util.Date() %></p>
- 
-<c:url var="mainUrl" value="/ussdpredefinputs" />
-<p>Return to <a href="${mainUrl}">Predefined Inputs Home</a></p>
-
-</body>
-</html>
\ No newline at end of file
diff --git a/WebContent/jsp/editussdmenuitem.jsp b/WebContent/jsp/editussdmenuitem.jsp
new file mode 100644
index 0000000..2c21823
--- /dev/null
+++ b/WebContent/jsp/editussdmenuitem.jsp
@@ -0,0 +1,402 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Menu Items Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+</script>
+<style>
+
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+
+div#persitId {
+	display: none;
+}
+
+/*BUTTONS*/
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 40%;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	width: 2px;
+	padding: 1px;
+	background-color: #F3F3EC;
+	text-align: left;
+	word-wrap: break-word;
+}
+
+td.otherdata {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	width: 1px;
+	padding: 1px;
+	background-color: #F3F3EC;
+	text-align: center;
+	word-wrap: break-word;
+	padding: 1px;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 250px;
+}
+
+.alterformfields {
+	width: 15px;
+	height: 15px;
+	text-align: left;
+}
+
+.alterlabel {
+	vertical-align: top;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div></td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Manage Menu Items</h2>
+						<hr>
+					</td>
+				</tr>
+			</table>
+		</div>
+
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+					<div id="accordion">
+						<h3>
+							<a href="/metomeui/listussdmenuitems.html">Ussd Menu Items
+								Setup</a>
+						</h3>
+						<ul>
+							<li><a href="/metomeui/listussdmenuitems.html">Ussd Menu
+									Items</a></li>
+						</ul>
+						<h3>
+							<a href="/metomeui/listussdtransactionkeywords.html">Transaction
+								Keywords Setup</a>
+						</h3>
+						<ul>
+							<li><a href="/metomeui/listussdtransactionkeywords.html">Transaction
+									Keywords</a>
+							</li>
+						</ul>
+						<h3>
+							<a href="/metomeui/listussdpredefinputs.html">Predefined
+								Inputs Setup</a>
+						</h3>
+						<ul>
+							<li><a href="/metomeui/listussdpredefinputs.html">Predefined
+									Inputs</a>
+							</li>
+						</ul>
+					</div></td>
+				<td class="content">
+					<div>
+						<fieldset>
+							<legend>
+								<h2>Edit Menu Items</h2>
+							</legend>
+							<form:form method="post"
+								action="/metomeui/editussdmenuitem/${ussdMenuItem.menuItemId}.html"
+								commandName="ussdMenuItem">
+
+								<form:errors path="*" cssClass="errorblock" element="div" />
+								<table>
+									<tr>
+										<td class="formlabels"><form:label path="menuItemId">Menu Item ID:</form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="menuItemId" value="${ussdMenuItem.menuItemId}"
+												disabled="true" /> <input type="hidden" name="menuItemId"
+											value="${ussdMenuItem.menuItemId}" /></td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label path="menuItemName">Menu Item Name:</form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="menuItemName" value="${ussdMenuItem.menuItemName}" />
+											<input type="hidden" name="menuItemId"
+											value="${ussdMenuItem.menuItemId}" /></td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label
+												path="rootMenuItem.menuItemId">Menu Item Parent ID:</form:label>
+										</td>
+										<td class="form"><form:select cssClass="dropdown"
+												path="rootMenuItem.menuItemId">
+
+												<form:option value="${ussdMenuItem.rootMenuItem.menuItemId}"
+													label="${ussdMenuItem.rootMenuItem.menuItemName}" />
+												<form:option value="0" label="--None--" />
+												<c:forEach items="${menuItemList}" var="menuitem">
+													<form:option value="${menuitem.menuItemId}"
+														label="${menuitem.menuItemName}" />
+												</c:forEach>
+											</form:select>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label
+												path="menuItemKeyword.keywordId">Associated Keyword Name:</form:label>
+										</td>
+										<td class="form"><form:select cssClass="dropdown"
+												path="menuItemKeyword.keywordId">
+												<form:option
+													value="${ussdMenuItem.menuItemKeyword.keywordId}"
+													label="${ussdMenuItem.menuItemKeyword.keywordName}" />
+												<form:option value="0" label="--None--" />
+												<c:forEach items="${transactionKeywordList}"
+													var="transactionkeyword">
+													<form:option value="${transactionkeyword.keywordId}"
+														label="${transactionkeyword.keywordName}" />
+												</c:forEach>
+											</form:select></td>
+									</tr>
+									<tr>
+										<td class="formlabels"><form:label path="menuItemOrder">Menu Item Order</form:label>
+										</td>
+										<td class="form"><form:input cssClass="formfields"
+												path="menuItemOrder" value="${ussdMenuItem.menuItemOrder}" />
+										</td>
+									</tr>
+									<tr>
+										<td colspan="2" class="savebutton"><br> <input
+											class="btn" type="submit" value="Save" />
+										</td>
+									</tr>
+								</table>
+							</form:form>
+						</fieldset>
+					</div>
+				</td>
+			</tr>
+		</table>
+	</div>
+
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/editussdpredefinput.jsp b/WebContent/jsp/editussdpredefinput.jsp
new file mode 100644
index 0000000..ca6c531
--- /dev/null
+++ b/WebContent/jsp/editussdpredefinput.jsp
@@ -0,0 +1,436 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Predefined Inputs Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+</script>
+<style>
+
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+
+/*BUTTONS*/
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 40%;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	width: 2px;
+	padding: 1px;
+	background-color: #F3F3EC;
+	text-align: left;
+	word-wrap: break-word;
+}
+
+td.otherdata {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	width: 1px;
+	padding: 1px;
+	background-color: #F3F3EC;
+	text-align: center;
+	word-wrap: break-word;
+	padding: 1px;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 250px;
+}
+
+.alterformfields {
+	width: 15px;
+	height: 15px;
+	text-align: left;
+}
+
+.alterlabel {
+	vertical-align: top;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div>
+			</td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Manage Predefined Inputs</h2>
+						<hr></td>
+				</tr>
+			</table>
+		</div>
+
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+					<div id="accordion">
+						<h3>
+							<a href="/metomeui/listussdmenuitems.html">Ussd Menu Items
+								Setup</a>
+						</h3>
+						<ul>
+							<li><a href="/metomeui/listussdmenuitems.html">Ussd Menu
+									Items</a>
+							</li>
+						</ul>
+						<h3>
+							<a href="/metomeui/listussdtransactionkeywords.html">Transaction
+								Keywords Setup</a>
+						</h3>
+						<ul>
+							<li><a href="/metomeui/listussdtransactionkeywords.html">Transaction
+									Keywords</a></li>
+						</ul>
+						<h3>
+							<a href="/metomeui/listussdpredefinputs.html">Predefined
+								Inputs Setup</a>
+						</h3>
+						<ul>
+							<li><a href="/metomeui/listussdpredefinputs.html">Predefined
+									Inputs</a></li>
+						</ul>
+					</div>
+				</td>
+				<td class="content">
+					<div>
+						<fieldset>
+							<legend>
+								<h2>Edit Predefined Inputs</h2>
+							</legend>
+							<%--               action="/metomeui/editcontacts.html"                 --%>
+							<form:form method="post"
+								action="/metomeui/editussdpredefinput/${ussdPredefInput.predefInputId}.html"
+								commandName="ussdPredefInput">
+								<form:errors path="*" cssClass="errorblock" element="div" />
+								<fieldset>
+									<table>
+										<tr>
+
+											<td class="formlabels"><form:label path="predefInputId">Predefined Input Id</form:label>
+											</td>
+											<td class="form"><form:input cssClass="formfields"
+													path="predefInputId"
+													value="${ussdPredefInput.predefInputId}" disabled="true" />
+												<input type="hidden" name="predefInputId"
+												value="${ussdPredefInput.predefInputId}" /></td>
+											<td>
+										</tr>
+										<tr>
+											<td class="formlabels"><form:label
+													path="predefInputName">Predefined Input Name</form:label>
+											</td>
+											<td class="form"><form:input cssClass="formfields"
+													path="predefInputName"
+													value="${ussdPredefInput.predefInputName}" />
+											</td>
+										</tr>
+										<tr>
+											<td class="formlabels"><form:label
+													path="predefInputDescription">Predefined Input Description</form:label>
+											</td>
+											<td class="form"><form:input cssClass="formfields"
+													path="predefInputDescription"
+													value="${ussdPredefInput.predefInputDescription}" />
+											</td>
+										</tr>
+
+
+									</table>
+								</fieldset>
+
+								<table>
+									<tr>
+										<td></td>
+										<td><div>
+												<br> <input type="button"
+													value="Create New Predefined Input Item"
+													onClick="location.href='/metomeui/editaddnewussdpredefinputitem/${ussdPredefInput.predefInputId}.html'">
+											</div>
+										</td>
+										<td></td>
+										<td></td>
+									</tr>
+								</table>
+								<c:if test="${!empty ussdPredefInput.predefInputItems}">
+									<h2>Predefined Items Added</h2>
+									<table class="data">
+										<tr>
+											<th>No.</th>
+											<th>Predefined Input Item Name</th>
+											<th>Predefined Input Item Code</th>
+											<th>Predefined Input Item Order</th>
+											<th>Action</th>
+										</tr>
+										<c:forEach items="${ussdPredefInput.predefInputItems}"
+											var="predefinputitem" varStatus="status">
+											<%-- <c:forEach items="${contactsList}" var="contact" varStatus="status"> --%>
+											<%-- <c:forEach items="${contactsList}" var="contact" varStatus="status"> --%>
+											<tr class=data>
+												<td class=otherdata>${status.count}</td>
+												<td class=data><input type="hidden"
+													name="ussdPredefInput.predefInputItems[${status.index}].inputItemId"
+													value="${predefinputitem.inputItemId}" /><input
+													name="predefInputItems[${status.index}].predefInputItemName"
+													value="${predefinputitem.predefInputItemName}" />
+												</td>
+												<td class=data><input
+													name="predefInputItems[${status.index}].predefInputItemCode"
+													value="${predefinputitem.predefInputItemCode}" />
+												</td>
+												<td class=data><input
+													name="predefInputItems[${status.index}].predefInputItemOrder"
+													value="${predefinputitem.predefInputItemOrder}" />
+												</td>
+												<td class=data><c:if
+														test="${predefinputitem.inputItemId != null}">
+														<c:if
+															test="${predefinputitem.predefInputItemEnabledFlag != 1}">
+															<a
+																href="/metomeui/activatepredefinputitem/${predefinputitem.inputItemId}.html">Activate
+															</a>
+														</c:if>
+														<c:if
+															test="${predefinputitem.predefInputItemEnabledFlag == 1}">
+															<a
+																href="/metomeui/deactivatepredefinputitem/${predefinputitem.inputItemId}.html">Deactivate
+															</a>
+														</c:if>
+														<a
+															href="/metomeui/removepredefinputitem/${predefinputitem.inputItemId}.html">Delete</a>
+													</c:if></td>
+											</tr>
+										</c:forEach>
+									</table>
+								</c:if>
+								<br />
+								<input type="submit" value="Save" />
+							</form:form>
+						</fieldset>
+					</div>
+				</td>
+			</tr>
+		</table>
+	</div>
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/editussdpredefinputs.jsp b/WebContent/jsp/editussdpredefinputs.jsp
deleted file mode 100644
index daf62bc..0000000
--- a/WebContent/jsp/editussdpredefinputs.jsp
+++ /dev/null
@@ -1,45 +0,0 @@
-<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
-	pageEncoding="ISO-8859-1"%>
-<%@ include file="include.jsp"%>
-<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-
-<html>
-<head>
-<title>Predefined Input Items Manager</title>
-</head>
-<body>
-
-	<h2>Predefined Input Items Manager</h2>
-
-	<h1>Edit Person</h1>
-	<form:form modelAttribute="ussdPredefInput" method="POST"
-		action="/editpredefinputs/${ussdPredefInput.predefInputId}.html"
-		commandName="ussdPredefInput">
-
-		<table>
-
-			<tr>
-				<td><form:label path="predefInputId">Predefined Input ID:</form:label>
-				</td>
-				<td><form:input path="predefInputId" disabled="true" /></td>
-			</tr>
-
-			<tr>
-				<td><form:label path="predefInputName">Predefined Input Name</form:label>
-				</td>
-				<td><form:input path="predefInputName" /></td>
-			</tr>
-			<tr>
-				<td><form:label path="predefInputDescription">Predefined Input Description</form:label>
-				</td>
-				<td><form:input path="predefInputDescription" /></td>
-			</tr>
-			<tr>
-				<td colspan="2"><input type="submit" value="Save" />
-				</td>
-			</tr>
-		</table>
-	</form:form>
-
-</body>
-</html>
\ No newline at end of file
diff --git a/WebContent/jsp/editussdtransactionkeyword.jsp b/WebContent/jsp/editussdtransactionkeyword.jsp
new file mode 100644
index 0000000..fc6cfa6
--- /dev/null
+++ b/WebContent/jsp/editussdtransactionkeyword.jsp
@@ -0,0 +1,492 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Transaction Keywords Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+</script>
+<style>
+
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+
+/*BUTTONS*/
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 40%;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	width: 2px;
+	padding: 1px;
+	background-color: #F3F3EC;
+	text-align: left;
+	word-wrap: break-word;
+}
+
+td.otherdata {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	width: 1px;
+	padding: 1px;
+	background-color: #F3F3EC;
+	text-align: center;
+	word-wrap: break-word;
+	padding: 1px;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 250px;
+}
+
+.alterformfields {
+	width: 15px;
+	height: 15px;
+	text-align: left;
+}
+
+.alterlabel {
+	vertical-align: top;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div></td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Manage Transaction Keywords</h2>
+						<hr>
+					</td>
+				</tr>
+			</table>
+		</div>
+
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+                    <div id="accordion">
+                        <h3>
+                            <a href="/metomeui/listussdmenuitems.html">Ussd Menu Items
+                                Setup</a>
+                        </h3>
+                        <ul>
+                            <li><a href="/metomeui/listussdmenuitems.html">Ussd Menu
+                                    Items</a>
+                            </li>
+                        </ul>
+                        <h3>
+                            <a href="/metomeui/listussdtransactionkeywords.html">Transaction
+                                Keywords Setup</a>
+                        </h3>
+                        <ul>
+                            <li><a href="/metomeui/listussdtransactionkeywords.html">Transaction
+                                    Keywords</a></li>
+                        </ul>
+                        <h3>
+                            <a href="/metomeui/listussdpredefinputs.html">Predefined
+                                Inputs Setup</a>
+                        </h3>
+                        <ul>
+                            <li><a href="/metomeui/listussdpredefinputs.html">Predefined
+                                    Inputs</a></li>
+                        </ul>
+                    </div>
+                </td>
+				<td class="content">
+					<div>
+						<fieldset>
+							<legend>
+								<h2>Edit Transaction Keyword</h2>
+							</legend>
+							<form:form method="post"
+								action="/metomeui/editussdtransactionkeyword/${ussdTransactionKeyword.keywordId}.html"
+								commandName="ussdTransactionKeyword">
+								<form:errors path="*" cssClass="errorblock" element="div" />
+								<fieldset>
+									<table>
+										<tr>
+											<td class="formlabels"><form:label path="keywordId">Transaction Keyword Id:</form:label>
+											</td>
+											<td class="form"><form:input cssClass="formfields"
+													path="keywordId"
+													value="${ussdTransactionKeyword.keywordId}" disabled="true" /><input
+												type="hidden" name="keywordId"
+												value="${ussdTransactionKeyword.keywordId}" /></td>
+										</tr>
+										<tr>
+											<td class="formlabels"><form:label path="keywordCode">Transaction Keyword Code:</form:label>
+											</td>
+											<td class="form"><form:input cssClass="formfields"
+													path="keywordCode" maxlength="10"
+													value="${ussdTransactionKeyword.keywordCode}" /></td>
+										</tr>
+										<tr>
+											<td class="formlabels"><form:label path="keywordName">Transaction Keyword Name</form:label>
+											</td>
+											<td class="form"><form:input cssClass="formfields"
+													path="keywordName"
+													value="${ussdTransactionKeyword.keywordName}" />
+											</td>
+										</tr>
+										<tr>
+											<td class="formlabels"><form:label
+													path="keywordDescription">Transaction Keyword Description</form:label>
+											</td>
+											<td class="form"><form:input cssClass="formfields"
+													path="keywordDescription"
+													value="${ussdTransactionKeyword.keywordDescription}" />
+											</td>
+										</tr>
+										<tr>
+											<td class="formlabels"><form:label
+													path="keywordStepsCount">Transaction Keyword Step Count</form:label>
+											</td>
+											<td class="form"><form:input cssClass="formfields"
+													path="keywordStepsCount"
+													value="${ussdTransactionKeyword.keywordStepsCount}" />
+											</td>
+										</tr>
+									</table>
+								</fieldset>
+								<table>
+									<tr>
+										<td></td>
+										<td><div>
+												<br> <input type="button"
+													value="Create New Keyword Step"
+													onClick="location.href='/metomeui/editaddnewussdkeywordstep/${ussdTransactionKeyword.keywordId}.html'">
+											</div>
+										</td>
+										<td></td>
+										<td></td>
+									</tr>
+								</table>
+								<c:if test="${!empty ussdTransactionKeyword.keywordSteps}">
+									<h2>Keyword Steps Added</h2>
+									<table class="data">
+										<tr>
+											<th>No.</th>
+											<th>Step Menu Name</th>
+											<th>Step Menu Number</th>
+											<th>Is First Step Flag</th>
+											<th>Is Last Step Flag</th>
+											<th>Has Predefined Input</th>
+											<th>Predefined Input</th>
+											<th>Use Fixed Value</th>
+											<th>Fixed Value</th>
+											<th>Action</th>
+										</tr>
+										<c:forEach items="${ussdTransactionKeyword.keywordSteps}"
+											var="keywordstep" varStatus="status">
+											<tr class="data">
+												<td class=otherdata>${status.count} <input
+													type="hidden"
+													name="keywordSteps[${status.index}].keywordStepId"
+													value="${keywordstep.keywordStepId}" /></td>
+												<td class=data><input
+													name="keywordSteps[${status.index}].stepMenuName"
+													value="${keywordstep.stepMenuName}" /> <a
+													href="/metomeui/editussdkeywordstep/${keywordstep.keywordStepId}.html"></a>
+												</td>
+												<td class=data><input
+													name="keywordSteps[${status.index}].stepMenuNumber"
+													value="${keywordstep.stepMenuNumber}" /></td>
+												<td class="data"><c:if
+														test="${keywordstep.isFirstStepFlag == 0}"> No
+														<input size="3" type="hidden"
+															name="keywordSteps[${status.index}].isFirstStepFlag"
+															value="0" />
+													</c:if> <c:if test="${keywordstep.isFirstStepFlag == 1}"> Yes
+														<input size="3" type="hidden"
+															name="keywordSteps[${status.index}].isFirstStepFlag"
+															value="1" />
+													</c:if>
+												</td>
+												<td class="data"><c:if
+														test="${keywordstep.isLastStepFlag == 0}"> No
+														<input size="3" type="hidden"
+															name="keywordSteps[${status.index}].isLastStepFlag"
+															value="0" />
+													</c:if> <c:if test="${keywordstep.isLastStepFlag == 1}"> Yes
+														<input size="3" type="hidden"
+															name="keywordSteps[${status.index}].isLastStepFlag"
+															value="1" />
+													</c:if>
+												</td>
+												<td class="data"><c:if
+														test="${keywordstep.hasPredefInputFlag == 0}"> No
+														<input size="3" type="hidden"
+															name="keywordSteps[${status.index}].hasPredefInputFlag"
+															value="0" />
+													</c:if> <c:if test="${keywordstep.hasPredefInputFlag == 1}"> Yes
+														<input size="3" type="hidden"
+															name="keywordSteps[${status.index}].hasPredefInputFlag"
+															value="1" />
+													</c:if>
+												</td>
+												<td class="data"><c:forEach items="${predefInputList}"
+														var="predefinput">
+														<c:if
+															test="${predefinput.predefInputId == keywordstep.predefInput.predefInputId}">
+															<c:out value="${predefinput.predefInputName}" />
+														</c:if>
+													</c:forEach><input type="hidden"
+													name="keywordSteps[${status.index}].predefInputId"
+													value="${keywordstep.predefInput.predefInputId}" />
+												</td>
+												<td class="data"><c:if
+														test="${keywordstep.useFixedValueFlag == 0}"> No
+														<input size="3" type="hidden"
+															name="keywordSteps[${status.index}].useFixedValueFlag"
+															value="0" />
+													</c:if> <c:if test="${keywordstep.useFixedValueFlag == 1}"> Yes
+														<input size="3" type="hidden"
+															name="keywordSteps[${status.index}].useFixedValueFlag"
+															value="1" />
+													</c:if></td>
+												<td class="data"><input
+													name="keywordSteps[${status.index}].fixedValue"
+													value="${keywordstep.fixedValue}" /></td>
+												<td class=data><c:if
+														test="${keywordstep.keywordStepId != null}">
+														<a
+															href="/metomeui/removekeywordstep/${keywordstep.keywordStepId}.html">Delete</a>
+													</c:if>
+												</td>
+											</tr>
+										</c:forEach>
+									</table>
+								</c:if>
+
+								<br />
+								<input class="btn" type="submit" value="Save" />
+
+
+							</form:form>
+						</fieldset>
+					</div></td>
+			</tr>
+		</table>
+	</div>
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/hello.jsp b/WebContent/jsp/hello.jsp
index 8515903..62bfa74 100644
--- a/WebContent/jsp/hello.jsp
+++ b/WebContent/jsp/hello.jsp
@@ -1,32 +1,76 @@
-<%@ include file="include.jsp" %>
+<%@ include file="include.jsp"%>
 
 <html>
-  <head><title>Hello :: Spring Application</title></head>
-  <body>
-    <h1>Hello - Spring Application</h1>
-    <p>Greetings, it is now <c:out value="${now}"/></p>
-    
-    <a>USSD Processing Engine Setup Menu</a></br></br>
-    
-    <a href ="ussdmenuitems.html"> USSD Menu Items Management</a></br>
-    <a href ="ussdtransactionkeywords.html"> Transaction Keyword Management</a></br>
-    <a href ="ussdpredefinputitems.html"> Predefined Input Items Management</a></br>
-    <a href ="ussdpredefinputs.html"> Predefined Input Management</a></br>
-    <a href ="ussdkeywordsteps.html"> Keyword Steps Management</a></br></br>
-    
-    <a>Admin UI parked!! :-)</a><br><br>
-    
-    <a href ="uilogin.html"> Administrator Console Login</a></br>
-    <a href ="auilanding.html">Password Settings</a></br>
-    <a href ="auimsisdnsettings.html">MSISDN Settings</a></br>
-    <a href ="auitransactionsettings.html">Transaction Settings</a></br>
-    <a href ="auimessagesettings.html">Message Settings</a></br>
-    <a href ="auilanguagesettings.html">Language Settings</a></br>
-    <a href ="auiaccountsconfiguration.html">Accounts Configuration</a></br>
-    <a href ="auimemogroupsconfiguration.html">Memo Groups Configuration</a></br>
-    <a href ="auimobilendcconfiguration.html">Mobile NDC Configuration</a></br>
-    <a href ="users.html"> User Management</a></br>
-    
-    
-  </body>
+<head>
+<title>Hello :: Spring Application</title>
+</head>
+<body>
+	<h1>Hello - Spring Application</h1>
+	<p>
+		Greetings, it is now
+		<c:out value="${now}" />
+	</p>
+
+	<a>USSD Processing Engine Setup Menu</a>
+	</br>
+	</br>
+<a href="listussdpredefinputs.html"> USSD Menu Items Management</a>
+	</br>
+
+	<a href="listussdmenuitems.html"> USSD Menu Items Management</a>
+	</br>
+	<a href="listussdtransactionkeywords.html"> Transaction Keyword
+		Management</a>
+	</br>
+	<a href="listussdpredefinputitems.html"> Predefined Input Items
+		Management</a>
+	</br>
+	<a href="listussdpredefinputs.html"> Predefined Input Management</a>
+	</br>
+	<a href="listussdkeywordsteps.html"> Keyword Steps Management</a>
+	</br>
+	</br>
+
+	<a>Admin UI parked!! :-)</a>
+	<br>
+	<br>
+
+	<a href="uilogin.html"> Administrator Console Login</a>
+	</br>
+	<a href="auilanding.html">Password Settings</a>
+	</br>
+	<a href="auimsisdnsettings.html">MSISDN Settings</a>
+	</br>
+	<a href="auitransactionsettings.html">Transaction Settings</a>
+	</br>
+	<a href="auimessagesettings.html">Message Settings</a>
+	</br>
+	<a href="auilanguagesettings.html">Language Settings</a>
+	</br>
+	<a href="auiaccountsconfiguration.html">Accounts Configuration</a>
+	</br>
+	<a href="auimemogroupsconfiguration.html">Memo Groups Configuration</a>
+	</br>
+	<a href="auimobilendcconfiguration.html">Mobile NDC Configuration</a>
+	</br>
+	<a href="users.html"> User Management</a>
+	</br>
+	<a href="accounttypes.html"> Account Type Management</a>
+	</br>
+	<a href="languages.html"> Language Configuration</a>
+	</br>
+	<a href="messages.html"> Message Management</a>
+	</br>
+	<a href="charges.html"> Charge Setup</a>
+	</br>
+	<a href="memogroups.html"> Memo Groups</a>
+	</br>
+	<a href="amlsettings.html"> AML Settings</a>
+	</br>
+	<a href="ndc-lists.html"> AML Settings</a>
+	</br>
+	
+
+
+</body>
 </html>
\ No newline at end of file
diff --git a/WebContent/jsp/include.jsp b/WebContent/jsp/include.jsp
index 7fa1441..07c6af0 100644
--- a/WebContent/jsp/include.jsp
+++ b/WebContent/jsp/include.jsp
@@ -2,5 +2,6 @@
 <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
 <%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
 <%@ taglib prefix="form" uri="http://www.springframework.org/tags/form"%>
-<%@taglib prefix="spring" uri="http://www.springframework.org/tags" %>
+<%@ taglib prefix="spring" uri="http://www.springframework.org/tags" %>
+<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>
 <%--<%@ taglib prefix="h"  uri="http://java.sun.com/jsf/html"--%>
\ No newline at end of file
diff --git a/WebContent/jsp/index.jsp b/WebContent/jsp/index.jsp
index b7f990b..b3071a9 100644
--- a/WebContent/jsp/index.jsp
+++ b/WebContent/jsp/index.jsp
@@ -1,4 +1,4 @@
 <%@ include file="include.jsp" %>
 
 <%-- Redirected because we can't set the welcome page to a virtual URL. --%>
-<c:redirect url="/uilogin.html"/>
\ No newline at end of file
+<c:redirect url="uilogin.html"/>
\ No newline at end of file
diff --git a/WebContent/jsp/listaccounttypes.jsp b/WebContent/jsp/listaccounttypes.jsp
new file mode 100644
index 0000000..db19864
--- /dev/null
+++ b/WebContent/jsp/listaccounttypes.jsp
@@ -0,0 +1,345 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Account Types Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+</script>
+<style>
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+/*BUTTONS*/
+input.createbtn {
+	
+}
+
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	width: 10%;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 20%;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	padding: 4px;
+	background-color: #F3F3EC;
+	text-align: left;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 200px;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div>
+			</td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Manage Account Types</h2>
+						<hr></td>
+				</tr>
+			</table>
+		</div>
+
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+					<div id="accordion">
+						<h3>
+							<a href="ussdmenuitems.html">Ussd Menu Setup</a>
+						</h3>
+						<ul>
+							<li><a href="ussdmenuitems.html">Ussd Menu Items Setup</a></li>
+							<li><a href="ussdtransactionkeywords.html">Transaction
+									Keywords Setup</a>
+							</li>
+							<li><a href="ussdpredefinputs.html">Predefined Inputs
+									Setup</a>
+							</li>
+						</ul>
+						<h3>
+							<a href="charge.html">Charge Setup</a>
+						</h3>
+						<ul>
+							<li><a href="charge.html">Configure Charge</a>
+							</li>
+							<li><a href="accounttypes.html">Manage Account Types</a>
+							</li>
+						</ul>
+					</div></td>
+				<td class="content">
+					<table>
+						<tr>
+							<td></td>
+							<td></td>
+							<td></td>
+							<td></td>
+							<td><div>
+									<input class="btn" type="submit" name="submit"
+										value="Create New"
+										onClick="location.href='addaccounttypes.html'">
+								</div>
+							</td>
+						</tr>
+					</table> <c:if test="${empty accountTypesList}">
+						<div>
+							<table>
+								<tr>
+									<td>There are no Account Types registered on this system <br>
+										<br>
+									</td>
+								</tr>
+							</table>
+						</div>
+					</c:if> <c:if test="${!empty accountTypesList}">
+						<h2>Configured Account Types Listing</h2>
+						<table class="data">
+							<tr>
+								<th>Code</th>
+								<th>Name</th>
+								<th>BitMap</th>
+								<!-- 								<th>Action</th> -->
+							</tr>
+							<c:forEach items="${accountTypesList}" var="accounttype">
+								<tr class=data>
+									<td class=data>${accounttype.accountTypeCode}</td>
+									<td class=data>${accounttype.accountTypeName}</td>
+									<td class=data>${accounttype.accountTypeBitMap}</td>
+									<%-- 									<td class=data><c:if test="${menuitem.menuItemEnabledFlag == 0}"> --%>
+									<%-- 											<a href="#activate/${menuitem.menuItemId}">Activate/</a> --%>
+									<%-- 										</c:if> <c:if test="${menuitem.menuItemEnabledFlag == 1}"> --%>
+									<%-- 											<a href="#deactivate/${menuitem.menuItemId}">Deactivate/</a> --%>
+									<%-- 										</c:if> <a href="removemenuitem/${menuitem.menuItemId}.html">Delete</a><a> --%>
+									<%-- 											| </a><a href="#edit/${menuitem.menuItemId}">Edit</a></td> --%>
+								</tr>
+							</c:forEach>
+						</table>
+					</c:if>
+				</td>
+			</tr>
+		</table>
+		<!-- 	<table border=1px; width=100%;> -->
+		<!-- 		<tr> -->
+		<!-- 			<td>Footer</td> -->
+		<!-- 		</tr> -->
+		<!-- 	</table> -->
+	</div>
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/listcharges.jsp b/WebContent/jsp/listcharges.jsp
new file mode 100644
index 0000000..febb858
--- /dev/null
+++ b/WebContent/jsp/listcharges.jsp
@@ -0,0 +1,349 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Menu Items Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+</script>
+<style>
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+/*BUTTONS*/
+input.createbtn {
+	
+}
+
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	width: 10%;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 20%;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	padding: 4px;
+	background-color: #F3F3EC;
+	text-align: left;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 200px;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div>
+			</td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Manage Account Types</h2>
+						<hr></td>
+				</tr>
+			</table>
+		</div>
+
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+					<div id="accordion">
+						<h3>
+							<a href="ussdmenuitems.html">Ussd Menu Setup</a>
+						</h3>
+						<ul>
+							<li><a href="ussdmenuitems.html">Ussd Menu Items Setup</a></li>
+							<li><a href="ussdtransactionkeywords.html">Transaction
+									Keywords Setup</a>
+							</li>
+							<li><a href="ussdpredefinputs.html">Predefined Inputs
+									Setup</a>
+							</li>
+						</ul>
+						<h3>
+							<a href="charge.html">Charge Setup</a>
+						</h3>
+						<ul>
+							<li><a href="charges.html">Configure Charge</a>
+							</li>
+							<li><a href="customers.html">Manage Customer Accounts </a>
+							</li>
+							<li><a href="accounts.html">Manage Account Types</a>
+							</li>
+						</ul>
+					</div></td>
+				<td class="content">
+					<table>
+						<tr>
+							<td></td>
+							<td></td>
+							<td></td>
+							<td></td>
+							<td><div>
+									<input class="btn" type="submit" name="submit"
+										value="Create New" onClick="location.href='addcharge.html'">
+								</div>
+							</td>
+						</tr>
+					</table> <c:if test="${empty chargeList}">
+						<div>
+							<table>
+								<tr>
+									<td>There are no customers registered on this system <br>
+										<br>
+									</td>
+								</tr>
+							</table>
+						</div>
+					</c:if> <c:if test="${!empty chargeList}">
+						<h2>System Charge Configuration</h2>
+						<table class="data">
+							<tr>
+								<th>Charge Type</th>
+								<th>Charge Range</th>
+								<th>Charge Calculation Type</th>
+								<th>Charge Duration</th>
+								
+								<!-- 								<th>Action</th> -->
+							</tr>
+							<c:forEach items="${chargeList}" var="charge">
+								<tr class=data>
+									<td class=data>${charge.chargeType}</td>
+									<td class=data>${charge.range}</td>
+									<td class=data>${charge.calculationType}</td>
+									<td class=data>${charge.chargeDuration}</td>
+									<%-- 									<td class=data><c:if test="${menuitem.menuItemEnabledFlag == 0}"> --%>
+									<%-- 											<a href="#activate/${menuitem.menuItemId}">Activate/</a> --%>
+									<%-- 										</c:if> <c:if test="${menuitem.menuItemEnabledFlag == 1}"> --%>
+									<%-- 											<a href="#deactivate/${menuitem.menuItemId}">Deactivate/</a> --%>
+									<%-- 										</c:if> <a href="removemenuitem/${menuitem.menuItemId}.html">Delete</a><a> --%>
+									<%-- 											| </a><a href="#edit/${menuitem.menuItemId}">Edit</a></td> --%>
+								</tr>
+							</c:forEach>
+						</table>
+					</c:if>
+				</td>
+			</tr>
+		</table>
+		<!-- 	<table border=1px; width=100%;> -->
+		<!-- 		<tr> -->
+		<!-- 			<td>Footer</td> -->
+		<!-- 		</tr> -->
+		<!-- 	</table> -->
+	</div>
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/listlanguages.jsp b/WebContent/jsp/listlanguages.jsp
new file mode 100644
index 0000000..9d3a956
--- /dev/null
+++ b/WebContent/jsp/listlanguages.jsp
@@ -0,0 +1,339 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Language Configuration</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+</script>
+<style>
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+/*BUTTONS*/
+input.createbtn {
+	
+}
+
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	width: 10%;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 20%;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	padding: 4px;
+	background-color: #F3F3EC;
+	text-align: left;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 200px;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div></td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Configure System Languages</h2>
+						<hr>
+					</td>
+				</tr>
+			</table>
+		</div>
+
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+					<div id="accordion">
+						<h3>
+							<a href="ussdmenuitems.html">Ussd Menu Setup</a>
+						</h3>
+						<ul>
+							<li><a href="ussdmenuitems.html">Ussd Menu Items Setup</a>
+							</li>
+							<li><a href="ussdtransactionkeywords.html">Transaction
+									Keywords Setup</a></li>
+							<li><a href="ussdpredefinputs.html">Predefined Inputs
+									Setup</a></li>
+						</ul>
+						<h3>
+							<a href="charge.html">Charge Setup</a>
+						</h3>
+						<ul>
+							<li><a href="charge.html">Configure Charge</a></li>
+							<li><a href="accounttypes.html">Manage Account Types</a></li>
+						</ul>
+					</div>
+				</td>
+				<td class="content">
+					<table>
+						<tr>
+							<td></td>
+							<td></td>
+							<td></td>
+							<td></td>
+							<td><div>
+									<input class="btn" type="submit" name="submit"
+										value="Create New"
+										onClick="location.href='addlanguages.html'">
+								</div></td>
+						</tr>
+					</table> <c:if test="${empty languagesList}">
+						<div>
+							<table>
+								<tr>
+									<td>There are no languages configured on this system <br>
+										<br></td>
+								</tr>
+							</table>
+						</div>
+					</c:if> <c:if test="${!empty languagesList}">
+						<h2>Configured Languages Listing</h2>
+						<table class="data">
+							<tr>
+								<th>Name</th>
+								<th>Default</th>
+								<!-- <th>Action</th> -->
+							</tr>
+							<c:forEach items="${languagesList}" var="language">
+								<tr class=data>
+									<td class=data>${language.languageName}</td>
+									<td class=data><c:if test="${language.isDefault==1}">Yes</c:if>
+										<c:if test="${language.isDefault==0}">No</c:if></td>
+									<%-- 									<td class=data><c:if test="${menuitem.menuItemEnabledFlag == 0}"> --%>
+									<%-- 											<a href="#activate/${menuitem.menuItemId}">Activate/</a> --%>
+									<%-- 										</c:if> <c:if test="${menuitem.menuItemEnabledFlag == 1}"> --%>
+									<%-- 											<a href="#deactivate/${menuitem.menuItemId}">Deactivate/</a> --%>
+									<%-- 										</c:if> <a href="removemenuitem/${menuitem.menuItemId}.html">Delete</a><a> --%>
+									<%-- 											| </a><a href="#edit/${menuitem.menuItemId}">Edit</a></td> --%>
+								</tr>
+							</c:forEach>
+						</table>
+					</c:if></td>
+			</tr>
+		</table>
+		<!-- 	<table border=1px; width=100%;> -->
+		<!-- 		<tr> -->
+		<!-- 			<td>Footer</td> -->
+		<!-- 		</tr> -->
+		<!-- 	</table> -->
+	</div>
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/listmemogroups.jsp b/WebContent/jsp/listmemogroups.jsp
new file mode 100644
index 0000000..8806cb3
--- /dev/null
+++ b/WebContent/jsp/listmemogroups.jsp
@@ -0,0 +1,345 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Memo Groups Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+</script>
+<style>
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+/*BUTTONS*/
+input.createbtn {
+	
+}
+
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	width: 10%;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 20%;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	padding: 4px;
+	background-color: #F3F3EC;
+	text-align: left;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 200px;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div>
+			</td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Manage Memo Groups</h2>
+						<hr></td>
+				</tr>
+			</table>
+		</div>
+
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+					<div id="accordion">
+						<h3>
+							<a href="ussdmenuitems.html">Ussd Menu Setup</a>
+						</h3>
+						<ul>
+							<li><a href="ussdmenuitems.html">Ussd Menu Items Setup</a></li>
+							<li><a href="ussdtransactionkeywords.html">Transaction
+									Keywords Setup</a>
+							</li>
+							<li><a href="ussdpredefinputs.html">Predefined Inputs
+									Setup</a>
+							</li>
+						</ul>
+						<h3>
+							<a href="charge.html">Charge Setup</a>
+						</h3>
+						<ul>
+							<li><a href="charge.html">Configure Charge</a>
+							</li>
+							<li><a href="accounttypes.html">Manage Account Types</a>
+							</li>
+						</ul>
+					</div></td>
+				<td class="content">
+					<table>
+						<tr>
+							<td></td>
+							<td></td>
+							<td></td>
+							<td></td>
+							<td><div>
+									<input class="btn" type="submit" name="submit"
+										value="Create New"
+										onClick="location.href='addmemogroups.html'">
+								</div>
+							</td>
+						</tr>
+					</table> <c:if test="${empty memoGroupsList}">
+						<div>
+							<table>
+								<tr>
+									<td>There are no memo groups configured for this system <br>
+										<br>
+									</td>
+								</tr>
+							</table>
+						</div>
+					</c:if> <c:if test="${!empty memoGroupsList}">
+						<h2>Configured Memo Groups Listing</h2>
+						<table class="data">
+							<tr>
+								<th>Memo Group Code</th>
+								<th>Memo Group Name</th>
+								<th>Memo Group Description</th>
+								<!-- <th>Action</th> -->
+							</tr>
+							<c:forEach items="${memoGroupsList}" var="memogroup">
+								<tr class=data>
+									<td class=data>${memogroup.messageCode}</td>
+									<td class=data>${memogroup.messageName}</td>
+									<td class=data>${memogroup.messageDesc}</td>
+									<%-- 									<td class=data><c:if test="${menuitem.menuItemEnabledFlag == 0}"> --%>
+									<%-- 											<a href="#activate/${menuitem.menuItemId}">Activate/</a> --%>
+									<%-- 										</c:if> <c:if test="${menuitem.menuItemEnabledFlag == 1}"> --%>
+									<%-- 											<a href="#deactivate/${menuitem.menuItemId}">Deactivate/</a> --%>
+									<%-- 										</c:if> <a href="removemenuitem/${menuitem.menuItemId}.html">Delete</a><a> --%>
+									<%-- 											| </a><a href="#edit/${menuitem.menuItemId}">Edit</a></td> --%>
+								</tr>
+							</c:forEach>
+						</table>
+					</c:if>
+				</td>
+			</tr>
+		</table>
+		<!-- 	<table border=1px; width=100%;> -->
+		<!-- 		<tr> -->
+		<!-- 			<td>Footer</td> -->
+		<!-- 		</tr> -->
+		<!-- 	</table> -->
+	</div>
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/listmessages.jsp b/WebContent/jsp/listmessages.jsp
new file mode 100644
index 0000000..e3e6a86
--- /dev/null
+++ b/WebContent/jsp/listmessages.jsp
@@ -0,0 +1,343 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Messages Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+</script>
+<style>
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+/*BUTTONS*/
+input.createbtn {
+	
+}
+
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	width: 10%;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 20%;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	padding: 4px;
+	background-color: #F3F3EC;
+	text-align: left;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 200px;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div>
+			</td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Manage Messages</h2>
+						<hr></td>
+				</tr>
+			</table>
+		</div>
+
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+					<div id="accordion">
+						<h3>
+							<a href="ussdmenuitems.html">Ussd Menu Setup</a>
+						</h3>
+						<ul>
+							<li><a href="ussdmenuitems.html">Ussd Menu Items Setup</a></li>
+							<li><a href="ussdtransactionkeywords.html">Transaction
+									Keywords Setup</a>
+							</li>
+							<li><a href="ussdpredefinputs.html">Predefined Inputs
+									Setup</a>
+							</li>
+						</ul>
+						<h3>
+							<a href="charge.html">Charge Setup</a>
+						</h3>
+						<ul>
+							<li><a href="charge.html">Configure Charge</a>
+							</li>
+							<li><a href="accounttypes.html">Manage Account Types</a>
+							</li>
+						</ul>
+					</div></td>
+				<td class="content">
+					<table>
+						<tr>
+							<td></td>
+							<td></td>
+							<td></td>
+							<td></td>
+							<td><div>
+									<input class="btn" type="submit" name="submit"
+										value="Create New"
+										onClick="location.href='addmessages.html'">
+								</div>
+							</td>
+						</tr>
+					</table> <c:if test="${empty messagesList}">
+						<div>
+							<table>
+								<tr>
+									<td>There are no messages configured for this system <br>
+										<br>
+									</td>
+								</tr>
+							</table>
+						</div>
+					</c:if> <c:if test="${!empty messagesList}">
+						<h2>Configured Messages Listing</h2>
+						<table class="data">
+							<tr>
+								<th>Message Code</th>
+								<th>Message Description</th>
+								<!-- <th>Action</th> -->
+							</tr>
+							<c:forEach items="${messagesList}" var="message">
+								<tr class=data>
+									<td class=data>${message.messageCode}</td>
+									<td class=data>${message.messageDesc}</td>
+									<%-- 									<td class=data><c:if test="${menuitem.menuItemEnabledFlag == 0}"> --%>
+									<%-- 											<a href="#activate/${menuitem.menuItemId}">Activate/</a> --%>
+									<%-- 										</c:if> <c:if test="${menuitem.menuItemEnabledFlag == 1}"> --%>
+									<%-- 											<a href="#deactivate/${menuitem.menuItemId}">Deactivate/</a> --%>
+									<%-- 										</c:if> <a href="removemenuitem/${menuitem.menuItemId}.html">Delete</a><a> --%>
+									<%-- 											| </a><a href="#edit/${menuitem.menuItemId}">Edit</a></td> --%>
+								</tr>
+							</c:forEach>
+						</table>
+					</c:if>
+				</td>
+			</tr>
+		</table>
+		<!-- 	<table border=1px; width=100%;> -->
+		<!-- 		<tr> -->
+		<!-- 			<td>Footer</td> -->
+		<!-- 		</tr> -->
+		<!-- 	</table> -->
+	</div>
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/listussdkeywordsteps.jsp b/WebContent/jsp/listussdkeywordsteps.jsp
new file mode 100644
index 0000000..60ead06
--- /dev/null
+++ b/WebContent/jsp/listussdkeywordsteps.jsp
@@ -0,0 +1,344 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Transaction Keywords Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+</script>
+<style>
+
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+/*BUTTONS*/
+input.createbtn {
+	
+}
+
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	width: 10%;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	padding: 2px;
+	background-color: #F3F3EC;
+	text-align: left;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div></td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Transaction Keywords Manager</h2>
+						<hr>
+					</td>
+				</tr>
+			</table>
+		</div>
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+                    <div id="accordion">
+                        <h3>
+                            <a href="/metomeui/listussdmenuitems.html">Ussd Menu Items
+                                Setup</a>
+                        </h3>
+                        <ul>
+                            <li><a href="/metomeui/listussdmenuitems.html">Ussd Menu
+                                    Items</a>
+                            </li>
+                        </ul>
+                        <h3>
+                            <a href="/metomeui/listussdtransactionkeywords.html">Transaction
+                                Keywords Setup</a>
+                        </h3>
+                        <ul>
+                            <li><a href="/metomeui/listussdtransactionkeywords.html">Transaction
+                                    Keywords</a></li>
+                        </ul>
+                        <h3>
+                            <a href="/metomeui/listussdpredefinputs.html">Predefined
+                                Inputs Setup</a>
+                        </h3>
+                        <ul>
+                            <li><a href="/metomeui/listussdpredefinputs.html">Predefined
+                                    Inputs</a></li>
+                        </ul>
+                    </div>
+                </td>
+				<td class="content">
+					<table>
+						<tr>
+							<td></td>
+							<td></td>
+							<td></td>
+							<td></td>
+							<td><div>
+									<input class="btn" type="submit" name="submit"
+										value="Create New"
+										onClick="location.href='addussdkeywordstep.html'">
+								</div></td>
+						</tr>
+					</table> <c:if test="${empty keywordStepList}">
+						<div>
+							<table>
+								<tr>
+									<td>There are no keyword steps configured on this system <br>
+										<br></td>
+								</tr>
+							</table>
+						</div>
+					</c:if> <c:if test="${!empty keywordStepList}">
+						<h2>System Keyword Steps Listing</h2>
+						<table class="data">
+							<tr>
+							<th>Step Menu Name 1</th>
+								<th>Step Menu Name</th>
+								<th>Step Menu Number</th>
+								<th>Is First Step Flag</th>
+								<th>Is Last Step Flag</th>
+								<th>Has Predefined Input</th>
+								<th>Predefined Input</th>
+								<th>Use Fixed Value</th>
+								<th>Fixed Value</th>
+								<!-- 								<th>Action</th> -->
+							</tr>
+							<c:forEach items="${keywordStepList}" var="keywordstep">
+								<tr class="data">
+								<td>${keywordstep.keywordStepId}</td>
+									<td class="data"><a
+										href="/metomeui/editussdkeywordstep/${keywordstep.keywordStepId}.html">${keywordstep.stepMenuName}</a>
+									</td>
+									<td class="data">${keywordstep.stepMenuNumber}</td>
+									<td class="data"><c:if
+											test="${keywordstep.isFirstStepFlag == 0}">No</c:if> <c:if
+											test="${keywordstep.isFirstStepFlag == 1}">Yes</c:if></td>
+									<td class="data"><c:if
+											test="${keywordstep.isLastStepFlag == 0}">No</c:if> <c:if
+											test="${keywordstep.isLastStepFlag == 1}">Yes</c:if></td>
+									<td class="data"><c:if
+											test="${keywordstep.hasPredefInputFlag == 0}">No</c:if> <c:if
+											test="${keywordstep.hasPredefInputFlag == 1}">Yes</c:if></td>
+									<td class="data">${keywordstep.predefInputId}</td>
+									<td class="data"><c:if
+											test="${keywordstep.useFixedValueFlag == 0}">No</c:if> <c:if
+											test="${keywordstep.useFixedValueFlag == 1}">Yes</c:if>
+									</td>
+									<td class="data">${keywordstep.fixedValue}</td>
+								</tr>
+							</c:forEach>
+						</table>
+					</c:if></td>
+			</tr>
+		</table>
+		<!--    <table border=1px; width=100%;> -->
+		<!--        <tr> -->
+		<!--            <td>Footer</td> -->
+		<!--        </tr> -->
+		<!--    </table> -->
+	</div>
+
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/listussdmenuitems.jsp b/WebContent/jsp/listussdmenuitems.jsp
new file mode 100644
index 0000000..f02b819
--- /dev/null
+++ b/WebContent/jsp/listussdmenuitems.jsp
@@ -0,0 +1,356 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Menu Items Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+</script>
+<style>
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+/*BUTTONS*/
+input.createbtn {
+	
+}
+
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	width: 10%;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 20%;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	padding: 4px;
+	background-color: #F3F3EC;
+	text-align: left;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 200px;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div></td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Menu Items Manager</h2>
+						<hr>
+					</td>
+				</tr>
+			</table>
+		</div>
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+					<div id="accordion">
+						<h3>
+							<a href="/metomeui/listussdmenuitems.html">Ussd Menu Items
+								Setup</a>
+						</h3>
+						<ul>
+							<li><a href="/metomeui/listussdmenuitems.html">Ussd Menu
+									Items</a>
+							</li>
+						</ul>
+						<h3>
+							<a href="/metomeui/listussdtransactionkeywords.html">Transaction
+								Keywords Setup</a>
+						</h3>
+						<ul>
+							<li><a href="/metomeui/listussdtransactionkeywords.html">Transaction
+									Keywords</a></li>
+						</ul>
+						<h3>
+							<a href="/metomeui/listussdpredefinputs.html">Predefined
+								Inputs Setup</a>
+						</h3>
+						<ul>
+							<li><a href="/metomeui/listussdpredefinputs.html">Predefined
+									Inputs</a></li>
+						</ul>
+					</div>
+				</td>
+				<td class="content">
+					<table>
+						<tr>
+							<td></td>
+							<td></td>
+							<td></td>
+							<td></td>
+							<td><div>
+									<input class="btn" type="submit" name="submit"
+										value="Create New"
+										onClick="location.href='addussdmenuitem.html'">
+								</div></td>
+						</tr>
+					</table> <c:if test="${empty ussdMenuItemsList}">
+						<div>
+							<table>
+								<tr>
+									<td>There are no menu items configured on this system <br>
+										<br></td>
+								</tr>
+							</table>
+						</div>
+					</c:if> <c:if test="${!empty ussdMenuItemsList}">
+						<h2>System Ussd Menu Items Listing</h2>
+						<table class="data">
+							<tr>
+								<th>Menu Item Name</th>
+								<th>Menu Item Order</th>
+								<th>Keyword ID</th>
+								<th>Parent Menu Name</th>
+								<th>Action</th>
+							</tr>
+							<c:forEach items="${ussdMenuItemsList}" var="menuitem">
+								<tr class=data>
+									<td class=data><a
+										href="/metomeui/editussdmenuitem/${menuitem.menuItemId}.html">${menuitem.menuItemName}</a>
+									</td>
+									<td class=data>${menuitem.menuItemOrder}</td>
+									<td class=data><c:forEach
+											items="${ussdTransactionKeywordsList}" var="transkeyword">
+											<c:if
+												test="${transkeyword.keywordId == menuitem.menuItemKeyword.keywordId}">
+												<c:out value="${transkeyword.keywordName}" />
+											</c:if>
+										</c:forEach></td>
+									<td class=data>${menuitem.rootMenuItem.menuItemName}</td>
+									<td class=data><c:if
+											test="${menuitem.menuItemEnabledFlag != 1}">
+											<a
+												href="/metomeui/activatemenuitem/${menuitem.menuItemId}.html">Activate</a>
+										</c:if> <c:if test="${menuitem.menuItemEnabledFlag == 1}">
+											<a
+												href="/metomeui/deactivatemenuitem/${menuitem.menuItemId}.html">Deactivate</a>
+										</c:if> <a
+										href="/metomeui/removemenuitem/${menuitem.menuItemId}.html">Delete</a>
+									</td>
+									<%-- 											| </a><a href="#edit/${menuitem.menuItemId}">Edit</a></td> --%>
+								</tr>
+							</c:forEach>
+						</table>
+					</c:if></td>
+			</tr>
+		</table>
+	</div>
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/listussdpredefinputs.jsp b/WebContent/jsp/listussdpredefinputs.jsp
new file mode 100644
index 0000000..7a4a3ca
--- /dev/null
+++ b/WebContent/jsp/listussdpredefinputs.jsp
@@ -0,0 +1,322 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Predefined Inputs Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+</script>
+<style>
+
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+/*BUTTONS*/
+input.createbtn {
+	
+}
+
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	width: 10%;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	padding: 2px;
+	background-color: #F3F3EC;
+	text-align: left;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div>
+			</td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Predefined Inputs Manager</h2>
+						<hr></td>
+				</tr>
+			</table>
+		</div>
+
+		<table style="width: 100%;">
+            <tr>
+                <td class="navbar">
+                    <div id="accordion">
+                        <h3>
+                            <a href="/metomeui/listussdmenuitems.html">Ussd Menu Items
+                                Setup</a>
+                        </h3>
+                        <ul>
+                            <li><a href="/metomeui/listussdmenuitems.html">Ussd Menu
+                                    Items</a>
+                            </li>
+                        </ul>
+                        <h3>
+                            <a href="/metomeui/listussdtransactionkeywords.html">Transaction
+                                Keywords Setup</a>
+                        </h3>
+                        <ul>
+                            <li><a href="/metomeui/listussdtransactionkeywords.html">Transaction
+                                    Keywords</a></li>
+                        </ul>
+                        <h3>
+                            <a href="/metomeui/listussdpredefinputs.html">Predefined
+                                Inputs Setup</a>
+                        </h3>
+                        <ul>
+                            <li><a href="/metomeui/listussdpredefinputs.html">Predefined
+                                    Inputs</a></li>
+                        </ul>
+                    </div>
+                </td>
+				<td class="content">
+					<table width="100%">
+						<tr>
+							<td></td>
+							<td></td>
+							<td></td>
+							<td></td>
+							<td align=center><div>
+									<input class="btn" type="submit" name="submit"
+										value="Create New"
+										onClick="location.href='addussdpredefinput.html'">
+								</div>
+							</td>
+						</tr>
+					</table> <c:if test="${empty predefInputList}">
+						<div>
+							<table>
+								<tr>
+									<td>There are no predef inputs configured on this system <br>
+										<br>
+									</td>
+								</tr>
+							</table>
+						</div>
+					</c:if> <c:if test="${!empty predefInputList}">
+						<h2>System Predefined Inputs Listing</h2>
+						<table class="data">
+							<tr>
+								<th>Predefined Input Name</th>
+								<th>Predefined Input Description</th>
+								<th>Action</th>
+							</tr>
+							<%-- editcontacts?id=${predefinput.predefInputId}.html --%>
+							<c:forEach items="${predefInputList}" var="predefinput">
+								<tr class="data">
+									<td class="data"><a
+										href="/metomeui/editussdpredefinput/${predefinput.predefInputId}.html">${predefinput.predefInputName}</a>
+									</td>
+									<td class="data">${predefinput.predefInputDescription}</td>
+									<td class="data"><a href="/metomeui/removepredefinput/${predefinput.predefInputId}.html">Delete</a></td>
+								</tr>
+							</c:forEach>
+						</table>
+					</c:if>
+				</td>
+			</tr>
+		</table>
+	</div>
+
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/listussdrequests.jsp b/WebContent/jsp/listussdrequests.jsp
new file mode 100644
index 0000000..17bdafb
--- /dev/null
+++ b/WebContent/jsp/listussdrequests.jsp
@@ -0,0 +1,329 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>USSD Requests</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+</script>
+<style>
+
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+/*BUTTONS*/
+input.createbtn {
+	
+}
+
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	width: 10%;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	padding: 2px;
+	background-color: #F3F3EC;
+	text-align: left;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div></td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Ussd Requests</h2>
+						<hr>
+					</td>
+				</tr>
+			</table>
+		</div>
+
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+					<div id="accordion">
+						<h3>
+							<a href="/metomeui/listussdmenuitems.html">Ussd Menu Items
+								Setup</a>
+						</h3>
+						<ul>
+							<li><a href="/metomeui/listussdmenuitems.html">Ussd Menu
+									Items Listing</a></li>
+							<li><a href="/metomeui/addussdmenuitems.html">Create
+									Ussd Menu Items</a>
+							</li>
+						</ul>
+						<h3>
+							<a href="/metomeui/listussdtransactionkeywords.html">Transaction
+								Keywords Setup</a>
+						</h3>
+						<ul>
+							<li><a href="/metomeui/listussdtransactionkeywords.html">Transaction
+									Keywords</a>
+							</li>
+							<li><a href="/metomeui/listussdkeywordsteps.html">Keyword
+									Steps</a>
+							</li>
+						</ul>
+						<h3>
+							<a href="/metomeui/listussdpredefinputs.html">Predefined
+								Inputs Setup</a>
+						</h3>
+						<ul>
+							<li><a href="/metomeui/listussdpredefinputs.html">Predefined
+									Inputs</a>
+							</li>
+							<li><a href="/metomeui/listussdpredefinputitems.html">Predefined
+									Input Items</a>
+							</li>
+						</ul>
+						<h3>
+							<a href="/metomeui/ussdrequests.html">USSD Requests</a>
+						</h3>
+						<ul>
+							<li><a href="/metomeui/ussdrequests.html">USSD Requests</a>
+							</li>
+						</ul>
+					</div></td>
+				<td class="content"><c:if test="${empty ussdRequestsList}">
+						<div>
+							<table>
+								<tr>
+									<td>There are no ussd requests recorded on this system</td>
+								</tr>
+							</table>
+						</div>
+						<br>
+						<br>
+					</c:if> <c:if test="${!empty ussdRequestsList}">
+						<h2>System USSD Requests Listing</h2>
+						<table class="data">
+							<tr>
+								<th>Transaction Id</th>
+								<th>Source Msisdn</th>
+								<th>Request Thread</th>
+								<th>Is Completed</th>
+								<th>Final Transaction Keyword</th>
+								<th>Request TimeStamp</th>
+							</tr>
+							<c:forEach items="${ussdRequestsList}" var="ussdrequest">
+								<tr>
+									<td>${ussdrequest.transactionId}</td>
+									<td>${ussdrequest.sourceMsisdn}</td>
+									<td>${ussdrequest.requestThread}</td>
+									<td><c:if test="${ussdrequest.isCompleted == 0}">No</c:if>
+										<c:if test="${ussdrequest.isCompleted == 1}">Yes</c:if>
+									</td>
+									<td>${ussdrequest.finalTransactionKeyword}</td>
+									<td>${ussdrequest.requestTimeStamp}</td>
+
+
+								</tr>
+							</c:forEach>
+						</table>
+					</c:if></td>
+			</tr>
+		</table>
+	</div>
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/listussdtransactionkeywords.jsp b/WebContent/jsp/listussdtransactionkeywords.jsp
new file mode 100644
index 0000000..a75235f
--- /dev/null
+++ b/WebContent/jsp/listussdtransactionkeywords.jsp
@@ -0,0 +1,335 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+	pageEncoding="ISO-8859-1"%>
+<%@ include file="include.jsp"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+
+<html>
+<head>
+<title>Transaction Keywords Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+</script>
+<style>
+
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+/*BUTTONS*/
+input.createbtn {
+	
+}
+
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	width: 10%;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	padding: 2px;
+	background-color: #F3F3EC;
+	text-align: left;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+/*END CONTENT SECTION*/
+</style>
+</head>
+<body>
+
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div>
+			</td>
+		</tr>
+	</table>
+	<div>
+		<table style="width: 100%;">
+			<tr>
+				<td><h2>Transaction Keywords Manager</h2>
+					<hr></td>
+			</tr>
+		</table>
+	</div>
+	<table style="width: 100%;">
+		<tr>
+			<td class="navbar">
+				<div id="accordion">
+					<h3>
+						<a href="/metomeui/listussdmenuitems.html">Ussd Menu Items
+							Setup</a>
+					</h3>
+					<ul>
+						<li><a href="/metomeui/listussdmenuitems.html">Ussd Menu
+								Items</a></li>
+					</ul>
+					<h3>
+						<a href="/metomeui/listussdtransactionkeywords.html">Transaction
+							Keywords Setup</a>
+					</h3>
+					<ul>
+						<li><a href="/metomeui/listussdtransactionkeywords.html">Transaction
+								Keywords</a>
+						</li>
+					</ul>
+					<h3>
+						<a href="/metomeui/listussdpredefinputs.html">Predefined
+							Inputs Setup</a>
+					</h3>
+					<ul>
+						<li><a href="/metomeui/listussdpredefinputs.html">Predefined
+								Inputs</a>
+						</li>
+					</ul>
+				</div></td>
+			<td class="content">
+				<table width="100%">
+					<tr>
+						<td></td>
+						<td></td>
+						<td></td>
+						<td></td>
+						<td align=center><div>
+								<input class="btn" type="submit" name="submit"
+									value="Create New"
+									onClick="location.href='addussdtransactionkeyword.html'">
+							</div>
+						</td>
+					</tr>
+				</table> <c:if test="${empty ussdTransactionKeywordList}">
+					<div>
+						<table>
+							<tr>
+								<td>There are no Transaction Keywords configured on this
+									system <br> <br></td>
+							</tr>
+						</table>
+					</div>
+
+				</c:if> <c:if test="${!empty ussdTransactionKeywordList}">
+					<h2>System Transaction Keywords Listing</h2>
+					<table class="data">
+						<tr>
+							<th>Keyword Name</th>
+							<th>Keyword Code</th>
+							<th>Keyword Steps Count</th>
+							<th>Keyword Description</th>
+							<th>Action</th>
+						</tr>
+						<c:forEach items="${ussdTransactionKeywordList}"
+							var="transactionkeyword">
+							<tr class="data">
+								<td class="data"><a
+									href="/metomeui/editussdtransactionkeyword/${transactionkeyword.keywordId}.html">${transactionkeyword.keywordName}</a>
+								</td>
+
+								<td class="data">${transactionkeyword.keywordCode}</td>
+								<td class="data">${transactionkeyword.keywordStepsCount}</td>
+								<td class="data">${transactionkeyword.keywordDescription}</td>
+
+								<td class=data><c:if
+										test="${transactionkeyword.keywordEnabledFlag != 1}">
+										<a
+											href="/metomeui/activatekeyword/${transactionkeyword.keywordId}.html">Activate
+										</a>
+									</c:if> <c:if test="${transactionkeyword.keywordEnabledFlag == 1}">
+										<a
+											href="/metomeui/deactivatekeyword/${transactionkeyword.keywordId}.html">Deactivate
+										</a>
+									</c:if> <a
+									href="/metomeui/removekeyword/${transactionkeyword.keywordId}.html">
+										Delete </a>
+								</td>
+							</tr>
+						</c:forEach>
+					</table>
+				</c:if></td>
+		</tr>
+	</table>
+</body>
+</html>
\ No newline at end of file
diff --git a/WebContent/jsp/uilogin.jsp b/WebContent/jsp/uilogin.jsp
index d02cb7d..ff3465a 100644
--- a/WebContent/jsp/uilogin.jsp
+++ b/WebContent/jsp/uilogin.jsp
@@ -261,7 +261,7 @@
                             </legend>
 						
 					 <form:form method="post" action="uilogin.html"
-						commandName="user">
+						commandName="login">
 						<form:errors path="*" cssClass="errorblock" element="div" />
 							<table>
 								<tr>
diff --git a/WebContent/jsp/users.jsp b/WebContent/jsp/users.jsp
index ea38083..244ad5b 100644
--- a/WebContent/jsp/users.jsp
+++ b/WebContent/jsp/users.jsp
@@ -6,71 +6,306 @@
 <html>
 <head>
 <title>Users Manager</title>
+<link type="text/css"
+	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
+	rel="stylesheet" />
+<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
+<script type="text/javascript"
+	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
+<script type="text/javascript">
+	$(function() {
+		// Accordion
+		$('#accordion').accordion({
+			header : "h3"
+		});
+		// Tabs
+		$('#tabs').tabs();
+		$('#button').button();
+	});
+</script>
+<style>
+/*GENERAL*/
+body {
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 75%;
+	line-height: 1.6em;
+	background: #F3F3EC;
+	padding: 0;
+}
+
+h1,h2 {
+	font-size: 14px;
+	font-weight: bold;
+}
+
+h3 {
+	font-size: 100%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+h4 {
+	font-size: 80%;
+	background: #DDB929;
+	display: block;
+	padding: 1px;
+	color: #fff;
+}
+
+label {
+	font-weight: bold;
+	text-align: right;
+}
+
+/*END GENERAL*/
+/* ERROR BLOCK */
+.errorblock {
+	color: #000;
+	background-color: #ffEEEE;
+	border: 3px solid #ff0000;
+	padding: 8px;
+	margin: 16px;
+}
+/*BUTTONS*/
+input.createbtn {
+	
+}
+
+button,.btn {
+	background-image:
+		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
+	background-position: left top;
+	background-repeat: repeat-x;
+	background-color: transparent;
+	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
+		-moz-use-text-color;
+	border-style: none none none none;
+	border-width: medium 2px 2px medium;
+	cursor: pointer;
+	display: inline;
+	colour: #008000;
+	font-family: 'Arial', 'Helvetica', sans-serif;
+	font-size: 100%;
+	font-weight: bold;
+	padding: 1px 3px;
+	height: 33px;
+	width: 100px;
+}
+
+hover.btn {
+	color: #0066CC;
+}
+
+/*END BUTTONS*/
+
+/*SIDE BAR*/
+.navbar {
+	vertical-align: top;
+	top: 1px;
+	width: 20%;
+}
+
+/*END SIDE BAR*/
+
+/*CONTENT SECTION*/
+.content {
+	vertical-align: top;
+	top: 1px;
+	width: 80%;
+}
+
+div.header {
+	background: #008000;
+	border: 2px Solid #008000;
+}
+
+div {
+	background: #F3F3EC;
+	margin: 2px;
+	padding: 1px;
+	border: 2px;
+}
+
+fieldset {
+	border-color: #9AC482;
+}
+
+hr {
+	border-color: #9AC482;
+}
+
+li {
+	display: block;
+	margin: 2px 2px 2px -20px;
+}
+
+tr.header {
+	background: #ffffff;
+}
+
+th {
+	background: #7CB15C;
+	height: 19px;
+	width: 10%;
+	border-color: #ffffff;
+	text-align: left;
+	padding: 4px;
+	word-wrap: break-word;
+}
+
+td {
+	height: 19px;
+	width: 30%;
+	margin: 0px 2px 0px 2px;
+	padding: 0px 5px 0px 5px;
+	test-align: center;
+	width: 20%;
+}
+
+td.data {
+	border-color: #9AC482;
+	border-width: 1px 1px 0 0;
+	border-style: solid;
+	margin: 1;
+	padding: 4px;
+	background-color: #F3F3EC;
+	text-align: left;
+}
+
+tr.data {
+	border: 1px Solid #9AC482;
+}
+
+table.form {
+	padding: 8px;
+	width: 100px;
+}
+
+td.form {
+	padding: 5px;
+	width: 400px;
+}
+
+table.data {
+	width: 100%;
+	font-size: 13px;
+	border: 1px Solid;
+	margin: 0px 0px 1px 1px;
+	padding: 0px;
+	border-color: #9AC482;
+	background-color: #F3F3EC;
+	border-collapse: collapse;
+	text-align: -webkit-auto;
+}
+
+td.savebutton {
+	padding-right: 300px;
+	text-align: right;
+	height: 30px
+}
+
+td.formlabels {
+	text-align: right;
+}
+
+.dropdown {
+	width: 157px;
+	height: 29px;
+}
+
+.formfields {
+	width: 150px;
+	height: 25px;
+}
+
+.labels {
+	text-align: right;
+}
+
+.otherformfields {
+	padding-left: 200px;
+}
+
+/*END CONTENT SECTION*/
+</style>
 </head>
 <body>
 
-	<h2>Users Manager</h2>
+	<table style="width: 100%;">
+		<tr style="background-color: #008000;">
+			<td
+				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
+					Money</h1>
+				<div class="header"
+					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
+					Administrator Console</div> <br>
+				<div class="header" style="color: #000000;">
+					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
+						> Administration</a>
+				</div>
+			</td>
+		</tr>
+	</table>
+	<div>
+		<div>
+			<table style="width: 100%;">
+				<tr>
+					<td><h2>Manage Users</h2>
+						<hr></td>
+				</tr>
+			</table>
+		</div>
 
-	<c:if test="${empty userList}">
+		<table style="width: 100%;">
+			<tr>
+				<td class="navbar">
+					<div id="accordion">
+						<h3>
+							<a href="ussdmenuitems.html">Ussd Menu Setup</a>
+						</h3>
+						<ul>
+							<li><a href="ussdmenuitems.html">Ussd Menu Items Setup</a></li>
+							<li><a href="ussdtransactionkeywords.html">Transaction
+									Keywords Setup</a>
+							</li>
+							<li><a href="ussdpredefinputs.html">Predefined Inputs
+									Setup</a>
+							</li>
+						</ul>
+						<h3>
+							<a href="charge.html">Charge Setup</a>
+						</h3>
+						<ul>
+							<li><a href="charge.html">Configure Charge</a>
+							</li>
+							<li><a href="accounttypes.html">Manage Account Types</a>
+							</li>
+						</ul>
+					</div></td>
+				<td class="content">
+					<table>
+						<tr>
+							<td></td>
+							<td></td>
+							<td></td>
+							<td></td>
+							<td><div>
+									<input class="btn" type="submit" name="submit"
+										value="Create New"
+										onClick="location.href='adduser.html'">
+								</div>
+							</td>
+						</tr>
+					</table> 
+	<c:if test="${empty usersList}">
 		<tr>
 			<td>There are no users configured on this system</td>
 		</tr><br><br>
 	</c:if>
 
-	<form:form method="post" action="adduser.html" commandName="user">
-
-		<table>
-			<tr>
-				<td><form:label path="userName">UserName</form:label></td>
-				<td><form:input path="userName" /></td>
-			</tr>
-			<tr>
-				<td><form:label path="password">Password</form:label></td>
-				<td><form:password path="password" /></td>
-			</tr>
-			<!-- 			<tr> -->
-			<%-- 				<td><form:label path="confirmPassword">Confirm Password</form:label> --%>
-			<!-- 				</td> -->
-			<%-- 				<td><form:input path="confirmPassword" /> --%>
-			<!-- 				</td> -->
-			<!-- 			</tr> -->
-			<tr>
-				<td><form:label path="firstName">FirstName</form:label></td>
-				<td><form:input path="firstName" /></td>
-			</tr>
-			<tr>
-				<td><form:label path="lastName">LastName</form:label></td>
-				<td><form:input path="lastName" /></td>
-			</tr>
-			<tr>
-				<td><form:label path="middleName">MiddleName</form:label></td>
-				<td><form:input path="middleName" /></td>
-			</tr>
-			<tr>
-				<td><form:label path="email">Email Address</form:label></td>
-				<td><form:input path="email" /></td>
-			</tr>
-			<tr>
-				<td><form:label path="telephone">Phone Contact</form:label></td>
-				<td><form:input path="telephone" /></td>
-			</tr>
-
-			<tr>
-				<td><form:label path="role">Role</form:label></td>
-				<td><form:select path="role">
-						<form:option value="Guest" label="Guest" />
-						<form:option value="Admin" label="Admin" />
-					</form:select></td>
-			</tr>
-			<tr>
-				<td colspan="2"><input type="submit" value="adduser" />
-				</td>
-			</tr>
-		</table>
-	</form:form>
-
-
-	<c:if test="${!empty userList}">
+	<c:if test="${!empty usersList}">
 		<h3>System Users</h3>
 		<table class="data">
 			<tr>
@@ -82,23 +317,21 @@
 				<th>Telephone</th>
 				<th>&nbsp;</th>
 			</tr>
-			<c:forEach items="${userList}" var="user">
-				<tr>
-					<td>${user.userName}</td>
-					<td>${user.lastName}</td>
-					<td>${user.firstName}</td>
-					<td>${user.middleName}</td>
-					<td>${user.email}</td>
-					<td>${user.role}</td>
-					<td>${user.telephone}</td>
-					<td><a href="#activate/${user.userId}">Activate/</a><a
+			<c:forEach items="${usersList}" var="user">
+				<tr class=data>
+					<td class=data>${user.userName}</td>
+					<td class=data>${user.lastName}</td>
+					<td class=data>${user.firstName}</td>
+					<td class=data>${user.middleName}</td>
+					<td class=data>${user.email}</td>
+					<td class=data>${user.role}</td>
+					<td class=data>${user.telephone}</td>
+					<td class=data><a href="#activate/${user.userId}">Activate/</a><a
 						href="removeUser/${user.userId}.html">Delete</a><a
 						href="#edit/${user.userId}">Edit</a></td>
 				</tr>
 			</c:forEach>
 		</table>
 	</c:if>
-
-
 </body>
 </html>
\ No newline at end of file
diff --git a/WebContent/jsp/ussdkeywordsteps.jsp b/WebContent/jsp/ussdkeywordsteps.jsp
deleted file mode 100644
index a6b26e7..0000000
--- a/WebContent/jsp/ussdkeywordsteps.jsp
+++ /dev/null
@@ -1,350 +0,0 @@
-<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
-	pageEncoding="ISO-8859-1"%>
-<%@ include file="include.jsp"%>
-<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-
-<html>
-<head>
-<title>Transaction Keywords Manager</title>
-<link type="text/css"
-	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
-	rel="stylesheet" />
-<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
-<script type="text/javascript"
-	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
-<script type="text/javascript">
-	$(function() {
-		// Accordion
-		$('#accordion').accordion({
-			header : "h3"
-		});
-		// Tabs
-		$('#tabs').tabs();
-		$('#button').button();
-	});
-</script>
-<style>
-
-/*GENERAL*/
-body {
-	font-family: 'Arial', 'Helvetica', sans-serif;
-	font-size: 75%;
-	line-height: 1.6em;
-	background: #F3F3EC;
-	padding: 0;
-}
-
-h1,h2 {
-	font-size: 14px;
-	font-weight: bold;
-}
-
-h3 {
-	font-size: 100%;
-	background: #DDB929;
-	display: block;
-	padding: 1px;
-	color: #fff;
-}
-
-h4 {
-	font-size: 80%;
-	background: #DDB929;
-	display: block;
-	padding: 1px;
-	color: #fff;
-}
-
-label {
-	font-weight: bold;
-	text-align: right;
-}
-
-/*END GENERAL*/
-/* ERROR BLOCK */
-.errorblock {
-	color: #000;
-	background-color: #ffEEEE;
-	border: 3px solid #ff0000;
-	padding: 8px;
-	margin: 16px;
-}
-/*BUTTONS*/
-input.createbtn {
-	
-}
-
-button,.btn {
-	background-image:
-		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
-	background-position: left top;
-	background-repeat: repeat-x;
-	background-color: transparent;
-	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
-		-moz-use-text-color;
-	border-style: none none none none;
-	border-width: medium 2px 2px medium;
-	cursor: pointer;
-	display: inline;
-	colour: #008000;
-	font-family: 'Arial', 'Helvetica', sans-serif;
-	font-size: 100%;
-	font-weight: bold;
-	padding: 1px 3px;
-	height: 33px;
-	width: 100px;
-}
-
-hover.btn {
-	color: #0066CC;
-}
-
-/*END BUTTONS*/
-
-/*SIDE BAR*/
-.navbar {
-	vertical-align: top;
-	top: 1px;
-	width: 20%;
-}
-
-/*END SIDE BAR*/
-
-/*CONTENT SECTION*/
-.content {
-	vertical-align: top;
-	top: 1px;
-	width: 80%;
-}
-
-div.header {
-	background: #008000;
-	border: 2px Solid #008000;
-}
-
-div {
-	background: #F3F3EC;
-	margin: 2px;
-	padding: 1px;
-	border: 2px;
-}
-
-fieldset {
-	border-color: #9AC482;
-}
-
-hr {
-	border-color: #9AC482;
-}
-
-li {
-	display: block;
-	margin: 2px 2px 2px -20px;
-}
-
-tr.header {
-	background: #ffffff;
-}
-
-th {
-	background: #7CB15C;
-	height: 19px;
-	width: 10%;
-	border-color: #ffffff;
-	text-align: left;
-	padding: 4px;
-	word-wrap: break-word;
-}
-
-td.data {
-	border-color: #9AC482;
-	border-width: 1px 1px 0 0;
-	border-style: solid;
-	margin: 1;
-	padding: 2px;
-	background-color: #F3F3EC;
-	text-align: left;
-}
-
-tr.data {
-	border: 1px Solid #9AC482;
-}
-
-table.form {
-	padding: 8px;
-	width: 100px;
-}
-
-td.form {
-	padding: 5px;
-	width: 400px;
-}
-
-table.data {
-	width: 100%;
-	font-size: 13px;
-	border: 1px Solid;
-	margin: 0px 0px 1px 1px;
-	padding: 0px;
-	border-color: #9AC482;
-	background-color: #F3F3EC;
-	border-collapse: collapse;
-	text-align: -webkit-auto;
-}
-
-td.savebutton {
-	padding-right: 300px;
-	text-align: right;
-	height: 30px
-}
-
-.dropdown {
-	width: 157px;
-	height: 29px;
-}
-
-.formfields {
-	width: 150px;
-	height: 25px;
-}
-
-/*END CONTENT SECTION*/
-</style>
-</head>
-<body>
-
-	<table style="width: 100%;">
-		<tr style="background-color: #008000;">
-			<td
-				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
-					Money</h1>
-				<div class="header"
-					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
-					Administrator Console</div> <br>
-				<div class="header" style="color: #000000;">
-					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
-						> Administration</a>
-				</div>
-			</td>
-		</tr>
-	</table>
-	<div>
-		<div>
-			<table style="width: 100%;">
-				<tr>
-					<td><h2>Transaction Keywords Manager</h2>
-						<hr></td>
-				</tr>
-			</table>
-		</div>
-
-		<table style="width: 100%;">
-			<tr>
-				<td class="navbar">
-					<div id="accordion">
-						<h3>
-							<a href="ussdmenuitems.html">Ussd Menu Items Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdmenuitems.html">Ussd Menu Items Listing</a>
-							</li>
-							<li><a href="addussdmenuitems.html">Create Ussd Menu
-									Items</a>
-							</li>
-						</ul>
-						<h3>
-							<a href="ussdtransactionkeywords.html">Transaction Keywords
-								Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdtransactionkeywords.html">Transaction
-									Keywords</a>
-							</li>
-							<li><a href="ussdkeywordsteps.html">Keyword Steps</a>
-							</li>
-						</ul>
-						<h3>
-							<a href="ussdpredefinputs.html">Predefined Inputs Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdpredefinputs.html">Predefined Inputs</a>
-							</li>
-							<li><a href="ussdpredefinputitems.html">Predefined Input
-									Items</a>
-							</li>
-						</ul>
-						<h3>
-                            <a href="ussdrequests.html">USSD Requests</a>
-                        </h3>
-                        <ul>
-                            <li><a href="ussdrequests.html">USSD Requests</a>
-                            </li>
-                        </ul>
-					</div></td>
-				<td class="content">
-					<table>
-						<tr>
-							<td></td>
-							<td></td>
-							<td></td>
-							<td></td>
-							<td><div>
-									<input class="btn" type="submit" name="submit"
-										value="Create New"
-										onClick="location.href='addussdkeywordsteps.html'">
-								</div>
-							</td>
-						</tr>
-					</table> <c:if test="${empty ussdKeywordStepList}">
-						<div>
-							<table>
-								<tr>
-									<td>There are no keyword steps configured on this system <br>
-										<br>
-									</td>
-								</tr>
-							</table>
-						</div>
-					</c:if> <c:if test="${!empty ussdKeywordStepList}">
-						<h2>System Keyword Steps Listing</h2>
-						<table class="data">
-							<tr>
-								<th>Step Menu Name</th>
-								<th>Step Menu Number</th>
-								<th>Is First Step Flag</th>
-								<th>Is Last Step Flag</th>
-								<th>Has Predefined Input</th>
-								<th>Predefined Input</th>
-								<th>Use Fixed Value</th>
-								<th>Fixed Value</th>
-<!-- 								<th>Action</th> -->
-							</tr>
-							<c:forEach items="${ussdKeywordStepList}" var="keywordstep">
-								<tr class="data">
-									<td class="data">${keywordstep.stepMenuName}</td>
-									<td class="data">${keywordstep.stepMenuNumber}</td>
-									<td class="data">${keywordstep.isFirstStepFlag}</td>
-									<td class="data">${keywordstep.isLastStepFlag}</td>
-									<td class="data">${keywordstep.hasPredefInputFlag}</td>
-									<td class="data">${keywordstep.predefInputId}</td>
-									<td class="data">${keywordstep.useFixedValueFlag}</td>
-									<td class="data">${keywordstep.fixedValue}</td>
-<!-- 									<td align="center"><a -->
-<%-- 										href="removekeywordstep/${keywordstep.keywordStepId}.html">Delete</a><a> --%>
-<%-- 											| </a><a href="#edit/${keywordstep.keywordStepId}">Edit</a></td> --%>
-								</tr>
-							</c:forEach>
-						</table>
-					</c:if>
-				</td>
-			</tr>
-		</table>
-		<!--    <table border=1px; width=100%;> -->
-		<!--        <tr> -->
-		<!--            <td>Footer</td> -->
-		<!--        </tr> -->
-		<!--    </table> -->
-	</div>
-
-</body>
-</html>
\ No newline at end of file
diff --git a/WebContent/jsp/ussdmenuitems.jsp b/WebContent/jsp/ussdmenuitems.jsp
deleted file mode 100644
index c599a0f..0000000
--- a/WebContent/jsp/ussdmenuitems.jsp
+++ /dev/null
@@ -1,357 +0,0 @@
-<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
-	pageEncoding="ISO-8859-1"%>
-<%@ include file="include.jsp"%>
-<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-
-<html>
-<head>
-<title>Menu Items Manager</title>
-<link type="text/css"
-	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
-	rel="stylesheet" />
-<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
-<script type="text/javascript"
-	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
-<script type="text/javascript">
-	$(function() {
-		// Accordion
-		$('#accordion').accordion({
-			header : "h3"
-		});
-		// Tabs
-		$('#tabs').tabs();
-		$('#button').button();
-	});
-</script>
-<style>
-/*GENERAL*/
-body {
-    font-family: 'Arial', 'Helvetica', sans-serif;
-    font-size: 75%;
-    line-height: 1.6em;
-    background: #F3F3EC;
-    padding: 0;
-}
-
-h1,h2 {
-    font-size: 14px;
-    font-weight: bold;
-}
-
-h3 {
-    font-size: 100%;
-    background: #DDB929;
-    display: block;
-    padding: 1px;
-    color: #fff;
-}
-
-h4 {
-    font-size: 80%;
-    background: #DDB929;
-    display: block;
-    padding: 1px;
-    color: #fff;
-}
-
-label {
-    font-weight: bold;
-    text-align: right;
-}
-
-/*END GENERAL*/
-/* ERROR BLOCK */
-.errorblock {
-    color: #000;
-    background-color: #ffEEEE;
-    border: 3px solid #ff0000;
-    padding: 8px;
-    margin: 16px;
-}
-/*BUTTONS*/
-input.createbtn {
-    
-}
-
-button,.btn {
-    background-image:
-        url('resources/css/ui-lightness/images/CuteCapLa7.gif');
-    background-position: left top;
-    background-repeat: repeat-x;
-    background-color: transparent;
-border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97) 
-     -moz-use-text-color; 
-    border-style: none none none none;
-    border-width: medium 2px 2px medium;
-    cursor: pointer;
-    display: inline;
-    colour: #008000;
-    font-family: 'Arial', 'Helvetica', sans-serif;
-    font-size: 100%;
-    font-weight: bold;
-    padding: 1px 3px;
-    height:33px;
-    width: 100px;
-    
-}
-
-hover.btn{
-color:#0066CC;
-}
-
-/*END BUTTONS*/
-
-/*SIDE BAR*/
-.navbar {
-    vertical-align: top;
-    top: 1px;
-    width: 20%;
-}
-
-/*END SIDE BAR*/
-
-/*CONTENT SECTION*/
-.content {
-    vertical-align: top;
-    top: 1px;
-    width: 80%;
-}
-
-div.header {
-    background: #008000;
-    border: 2px Solid #008000;
-}
-
-div {
-    background: #F3F3EC;
-    margin: 2px;
-    padding: 1px;
-    border: 2px;
-}
-
-fieldset {
-    border-color: #9AC482;
-}
-
-hr {
-    border-color: #9AC482;
-}
-
-li {
-    display: block;
-    margin: 2px 2px 2px -20px;
-}
-
-tr.header {
-    background: #ffffff;
-}
-
-th {
-    background: #7CB15C;
-    height: 19px;
-    width: 10%;
-    border-color: #ffffff;
-    text-align: left;
-    padding: 4px;
-    word-wrap: break-word;
-}
-
-td {
-    height: 19px;
-    width: 30%;
-    margin: 0px 2px 0px 2px;
-    padding: 0px 5px 0px 5px;
-    test-align: center;
-    width: 20%;
-}
-
-td.data {
-    border-color: #9AC482;
-    border-width: 1px 1px 0 0;
-    border-style: solid;
-    margin: 1;
-    padding: 4px;
-    background-color: #F3F3EC;
-    text-align:left;
-}
-
-tr.data {
-    border: 1px Solid #9AC482;
-}
-
-table.form {
-    padding: 8px;
-    width: 100px;
-}
-
-td.form {
-    padding: 5px;
-    width: 400px;
-}
-
-table.data {
-    width: 100%;
-    font-size: 13px;
-    border: 1px Solid;
-    margin: 0px 0px 1px 1px;
-    padding: 0px;
-    border-color: #9AC482;
-    background-color: #F3F3EC;
-    border-collapse: collapse;
-    text-align: -webkit-auto;
-}
-
-td.savebutton {
-    padding-right: 300px;
-    text-align: right;
-    height:30px
-}
-
-td.formlabels{
-text-align:right;
-}
-
-.dropdown{
-width: 157px;
-height: 29px;
-}
-
-.formfields{
-width: 150px;
-height: 25px;
-}
-
-.labels{
-text-align:right;
-}
-
-.otherformfields {
-    padding-left:200px;
-}
-
-/*END CONTENT SECTION*/
-</style>
-</head>
-<body>
-
-	<table style="width: 100%;">
-		<tr style="background-color: #008000;">
-			<td
-				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
-					Money</h1>
-				<div class="header"
-					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
-					Administrator Console</div> <br>
-				<div class="header" style="color: #000000;">
-					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
-						> Administration</a>
-				</div></td>
-		</tr>
-	</table>
-	<div>
-		<div>
-			<table style="width: 100%;">
-				<tr>
-					<td><h2>Menu Items Manager</h2>
-						<hr>
-					</td>
-				</tr>
-			</table>
-		</div>
-
-		<table style="width: 100%;">
-			<tr>
-				<td class="navbar">
-					<div id="accordion">
-						<h3>
-							<a href="ussdmenuitems.html">Ussd Menu Items Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdmenuitems.html">Ussd Menu Items Listing</a>
-							</li>
-							<li><a href="addussdmenuitems.html">Create Ussd Menu
-									Items</a></li>
-						</ul>
-						<h3>
-							<a href="ussdtransactionkeywords.html">Transaction Keywords
-								Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdtransactionkeywords.html">Transaction
-									Keywords</a></li>
-							<li><a href="ussdkeywordsteps.html">Keyword Steps</a></li>
-						</ul>
-						<h3>
-							<a href="ussdpredefinputs.html">Predefined Inputs Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdpredefinputs.html">Predefined Inputs</a></li>
-							<li><a href="ussdpredefinputitems.html">Predefined Input
-									Items</a></li>
-						</ul>
-						<h3>
-                            <a href="ussdrequests.html">USSD Requests</a>
-                        </h3>
-                        <ul>
-                            <li><a href="ussdrequests.html">USSD Requests</a>
-                            </li>
-                        </ul>
-					</div>
-				</td>
-				<td class="content">
-					<table>
-						<tr>
-							<td></td>
-							<td></td>
-							<td></td>
-							<td></td>
-							<td><div>
-									<input class="btn" type="submit" name="submit" value="Create New"
-										onClick="location.href='addussdmenuitems.html'">
-								</div></td>
-						</tr>
-					</table> <c:if test="${empty ussdMenuItemsList}">
-						<div>
-							<table>
-								<tr>
-									<td>There are no menu items configured on this system <br>
-										<br></td>
-								</tr>
-							</table>
-						</div>
-					</c:if> <c:if test="${!empty ussdMenuItemsList}">
-						<h2>System Ussd Menu Items Listing</h2>
-						<table class="data">
-							<tr>
-								<th>Menu Item Name</th>
-								<th>Menu Item Order</th>
-								<th>Keyword ID</th>
-								<th>Parent Menu ID</th>
-<!-- 								<th>Action</th> -->
-							</tr>
-							<c:forEach items="${ussdMenuItemsList}" var="menuitem">
-								<tr class=data>
-									<td class=data>${menuitem.menuItemName}</td>
-									<td class=data>${menuitem.menuItemOrder}</td>
-									<td class=data>${menuitem.menuItemKeywordId}</td>
-									<td class=data>${menuitem.menuItemParentId}</td>
-<%-- 									<td class=data><c:if test="${menuitem.menuItemEnabledFlag == 0}"> --%>
-<%-- 											<a href="#activate/${menuitem.menuItemId}">Activate/</a> --%>
-<%-- 										</c:if> <c:if test="${menuitem.menuItemEnabledFlag == 1}"> --%>
-<%-- 											<a href="#deactivate/${menuitem.menuItemId}">Deactivate/</a> --%>
-<%-- 										</c:if> <a href="removemenuitem/${menuitem.menuItemId}.html">Delete</a><a> --%>
-<%-- 											| </a><a href="#edit/${menuitem.menuItemId}">Edit</a></td> --%>
-								</tr>
-							</c:forEach>
-						</table>
-					</c:if></td>
-			</tr>
-		</table>
-		<!-- 	<table border=1px; width=100%;> -->
-		<!-- 		<tr> -->
-		<!-- 			<td>Footer</td> -->
-		<!-- 		</tr> -->
-		<!-- 	</table> -->
-	</div>
-</body>
-</html>
\ No newline at end of file
diff --git a/WebContent/jsp/ussdpredefinputitems.jsp b/WebContent/jsp/ussdpredefinputitems.jsp
deleted file mode 100644
index 46c1e05..0000000
--- a/WebContent/jsp/ussdpredefinputitems.jsp
+++ /dev/null
@@ -1,340 +0,0 @@
-<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
-	pageEncoding="ISO-8859-1"%>
-<%@ include file="include.jsp"%>
-<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-
-<html>
-<head>
-<title>Predefined Inputs Manager</title>
-<link type="text/css"
-	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
-	rel="stylesheet" />
-<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
-<script type="text/javascript"
-	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
-<script type="text/javascript">
-	$(function() {
-		// Accordion
-		$('#accordion').accordion({
-			header : "h3"
-		});
-		// Tabs
-		$('#tabs').tabs();
-		$('#button').button();
-	});
-</script>
-<style>
-
-/*GENERAL*/
-body {
-	font-family: 'Arial', 'Helvetica', sans-serif;
-	font-size: 75%;
-	line-height: 1.6em;
-	background: #F3F3EC;
-	padding: 0;
-}
-
-h1,h2 {
-	font-size: 14px;
-	font-weight: bold;
-}
-
-h3 {
-	font-size: 100%;
-	background: #DDB929;
-	display: block;
-	padding: 1px;
-	color: #fff;
-}
-
-h4 {
-	font-size: 80%;
-	background: #DDB929;
-	display: block;
-	padding: 1px;
-	color: #fff;
-}
-
-label {
-	font-weight: bold;
-	text-align: right;
-}
-
-/*END GENERAL*/
-/* ERROR BLOCK */
-.errorblock {
-	color: #000;
-	background-color: #ffEEEE;
-	border: 3px solid #ff0000;
-	padding: 8px;
-	margin: 16px;
-}
-/*BUTTONS*/
-input.createbtn {
-	
-}
-
-button,.btn {
-	background-image:
-		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
-	background-position: left top;
-	background-repeat: repeat-x;
-	background-color: transparent;
-	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
-		-moz-use-text-color;
-	border-style: none none none none;
-	border-width: medium 2px 2px medium;
-	cursor: pointer;
-	display: inline;
-	colour: #008000;
-	font-family: 'Arial', 'Helvetica', sans-serif;
-	font-size: 100%;
-	font-weight: bold;
-	padding: 1px 3px;
-	height: 33px;
-	width: 100px;
-}
-
-hover.btn {
-	color: #0066CC;
-}
-
-/*END BUTTONS*/
-
-/*SIDE BAR*/
-.navbar {
-	vertical-align: top;
-	top: 1px;
-	width: 20%;
-}
-
-/*END SIDE BAR*/
-
-/*CONTENT SECTION*/
-.content {
-	vertical-align: top;
-	top: 1px;
-	width: 80%;
-}
-
-div.header {
-	background: #008000;
-	border: 2px Solid #008000;
-}
-
-div {
-	background: #F3F3EC;
-	margin: 2px;
-	padding: 1px;
-	border: 2px;
-}
-
-fieldset {
-	border-color: #9AC482;
-}
-
-hr {
-	border-color: #9AC482;
-}
-
-li {
-	display: block;
-	margin: 2px 2px 2px -20px;
-}
-
-tr.header {
-	background: #ffffff;
-}
-
-th {
-	background: #7CB15C;
-	height: 19px;
-	width: 10%;
-	border-color: #ffffff;
-	text-align: left;
-	padding: 4px;
-	word-wrap: break-word;
-}
-
-td.data {
-	border-color: #9AC482;
-	border-width: 1px 1px 0 0;
-	border-style: solid;
-	margin: 1;
-	padding: 2px;
-	background-color: #F3F3EC;
-	text-align: left;
-}
-
-tr.data {
-	border: 1px Solid #9AC482;
-}
-
-table.form {
-	padding: 8px;
-	width: 100px;
-}
-
-td.form {
-	padding: 5px;
-	width: 400px;
-}
-
-table.data {
-	width: 100%;
-	font-size: 13px;
-	border: 1px Solid;
-	margin: 0px 0px 1px 1px;
-	padding: 0px;
-	border-color: #9AC482;
-	background-color: #F3F3EC;
-	border-collapse: collapse;
-	text-align: -webkit-auto;
-}
-
-td.savebutton {
-	padding-right: 300px;
-	text-align: right;
-	height: 30px
-}
-
-.dropdown {
-	width: 157px;
-	height: 29px;
-}
-
-.formfields {
-	width: 150px;
-	height: 25px;
-}
-
-/*END CONTENT SECTION*/
-</style>
-</head>
-<body>
-
-	<table style="width: 100%;">
-		<tr style="background-color: #008000;">
-			<td
-				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
-					Money</h1>
-				<div class="header"
-					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
-					Administrator Console</div> <br>
-				<div class="header" style="color: #000000;">
-					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
-						> Administration</a>
-				</div>
-			</td>
-		</tr>
-	</table>
-	<div>
-		<div>
-			<table style="width: 100%;">
-				<tr>
-					<td><h2>Predefined Inputs Manager</h2>
-						<hr></td>
-				</tr>
-			</table>
-		</div>
-
-		<table style="width: 100%;">
-			<tr>
-				<td class="navbar">
-					<div id="accordion">
-						<h3>
-							<a href="ussdmenuitems.html">Ussd Menu Items Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdmenuitems.html">Ussd Menu Items Listing</a>
-							</li>
-							<li><a href="addussdmenuitems.html">Create Ussd Menu
-									Items</a>
-							</li>
-						</ul>
-						<h3>
-							<a href="ussdtransactionkeywords.html">Transaction Keywords
-								Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdtransactionkeywords.html">Transaction
-									Keywords</a>
-							</li>
-							<li><a href="ussdkeywordsteps.html">Keyword Steps</a>
-							</li>
-						</ul>
-						<h3>
-							<a href="ussdpredefinputs.html">Predefined Inputs Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdpredefinputs.html">Predefined Inputs</a>
-							</li>
-							<li><a href="ussdpredefinputitems.html">Predefined Input
-									Items</a>
-							</li>
-						</ul>
-						<h3>
-                            <a href="ussdrequests.html">USSD Requests</a>
-                        </h3>
-                        <ul>
-                            <li><a href="ussdrequests.html">USSD Requests</a>
-                            </li>
-                        </ul>
-					</div></td>
-				<td class="content">
-					<table width="100%">
-						<tr>
-							<td></td>
-							<td></td>
-							<td></td>
-							<td></td>
-							<td align=center><div>
-									<input class="btn" type="submit" name="submit"
-										value="Create New"
-										onClick="location.href='addussdpredefinputitems.html'">
-								</div>
-							</td>
-						</tr>
-					</table> <c:if test="${empty ussdPredefInputItemList}">
-						<div>
-							<table>
-								<tr>
-									<td>There are no Predefined Input Items configured on this
-										system <br> <br>
-									</td>
-								</tr>
-							</table>
-						</div>
-					</c:if> <c:if test="${!empty ussdPredefInputItemList}">
-						<h2>System Predefined Input Items</h2>
-						<table class="data">
-							<tr>
-								<th>Input Item Name</th>
-								<th>Input Item Code</th>
-								<th>Input Item Order</th>
-<!-- 								<th>Action</th> -->
-							</tr>
-							<c:forEach items="${ussdPredefInputItemList}"
-								var="predefinputitem">
-								<tr>
-									<td class="data">${predefinputitem.predefInputItemName}</td>
-									<td class="data">${predefinputitem.predefInputItemCode}</td>
-									<td class="data">${predefinputitem.predefInputItemOrder}</td>
-<%-- 									<td class="data"><c:if --%>
-<%-- 											test="${predefinputitem.predefInputItemEnabledFlag == 0}"> --%>
-<%-- 											<a href="#activate/${predefinputitem.inputItemId}">Activate/</a> --%>
-<%-- 										</c:if> <c:if --%>
-<%-- 											test="${predefinputitem.predefInputItemEnabledFlag == 1}"> --%>
-<%-- 											<a href="#deactivate/${predefinputitem.inputItemId}">Deactivate/</a> --%>
-<%-- 										</c:if><a --%>
-<%-- 										href="removepredefinputitem/${predefinputitem.inputItemId}.html">Delete/</a><a --%>
-<%-- 										href="#edit/${predefinputitem.inputItemId}">Edit</a> --%>
-<!-- 									</td> -->
-								</tr>
-							</c:forEach>
-						</table>
-					</c:if> </td>
-			</tr>
-		</table>
-</body>
-</html>
\ No newline at end of file
diff --git a/WebContent/jsp/ussdpredefinputs.jsp b/WebContent/jsp/ussdpredefinputs.jsp
deleted file mode 100644
index f756a81..0000000
--- a/WebContent/jsp/ussdpredefinputs.jsp
+++ /dev/null
@@ -1,330 +0,0 @@
-<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
-	pageEncoding="ISO-8859-1"%>
-<%@ include file="include.jsp"%>
-<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-
-<html>
-<head>
-<title>Predefined Inputs Manager</title>
-<link type="text/css"
-	href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
-	rel="stylesheet" />
-<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
-<script type="text/javascript"
-	src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
-<script type="text/javascript">
-	$(function() {
-		// Accordion
-		$('#accordion').accordion({
-			header : "h3"
-		});
-		// Tabs
-		$('#tabs').tabs();
-		$('#button').button();
-	});
-</script>
-<style>
-
-/*GENERAL*/
-body {
-	font-family: 'Arial', 'Helvetica', sans-serif;
-	font-size: 75%;
-	line-height: 1.6em;
-	background: #F3F3EC;
-	padding: 0;
-}
-
-h1,h2 {
-	font-size: 14px;
-	font-weight: bold;
-}
-
-h3 {
-	font-size: 100%;
-	background: #DDB929;
-	display: block;
-	padding: 1px;
-	color: #fff;
-}
-
-h4 {
-	font-size: 80%;
-	background: #DDB929;
-	display: block;
-	padding: 1px;
-	color: #fff;
-}
-
-label {
-	font-weight: bold;
-	text-align: right;
-}
-
-/*END GENERAL*/
-/* ERROR BLOCK */
-.errorblock {
-	color: #000;
-	background-color: #ffEEEE;
-	border: 3px solid #ff0000;
-	padding: 8px;
-	margin: 16px;
-}
-/*BUTTONS*/
-input.createbtn {
-	
-}
-
-button,.btn {
-	background-image:
-		url('resources/css/ui-lightness/images/CuteCapLa7.gif');
-	background-position: left top;
-	background-repeat: repeat-x;
-	background-color: transparent;
-	border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
-		-moz-use-text-color;
-	border-style: none none none none;
-	border-width: medium 2px 2px medium;
-	cursor: pointer;
-	display: inline;
-	colour: #008000;
-	font-family: 'Arial', 'Helvetica', sans-serif;
-	font-size: 100%;
-	font-weight: bold;
-	padding: 1px 3px;
-	height: 33px;
-	width: 100px;
-}
-
-hover.btn {
-	color: #0066CC;
-}
-
-/*END BUTTONS*/
-
-/*SIDE BAR*/
-.navbar {
-	vertical-align: top;
-	top: 1px;
-	width: 20%;
-}
-
-/*END SIDE BAR*/
-
-/*CONTENT SECTION*/
-.content {
-	vertical-align: top;
-	top: 1px;
-	width: 80%;
-}
-
-div.header {
-	background: #008000;
-	border: 2px Solid #008000;
-}
-
-div {
-	background: #F3F3EC;
-	margin: 2px;
-	padding: 1px;
-	border: 2px;
-}
-
-fieldset {
-	border-color: #9AC482;
-}
-
-hr {
-	border-color: #9AC482;
-}
-
-li {
-	display: block;
-	margin: 2px 2px 2px -20px;
-}
-
-tr.header {
-	background: #ffffff;
-}
-
-th {
-	background: #7CB15C;
-	height: 19px;
-	width: 10%;
-	border-color: #ffffff;
-	text-align: left;
-	padding: 4px;
-	word-wrap: break-word;
-}
-
-td.data {
-	border-color: #9AC482;
-	border-width: 1px 1px 0 0;
-	border-style: solid;
-	margin: 1;
-	padding: 2px;
-	background-color: #F3F3EC;
-	text-align: left;
-}
-
-tr.data {
-	border: 1px Solid #9AC482;
-}
-
-table.form {
-	padding: 8px;
-	width: 100px;
-}
-
-td.form {
-	padding: 5px;
-	width: 400px;
-}
-
-table.data {
-	width: 100%;
-	font-size: 13px;
-	border: 1px Solid;
-	margin: 0px 0px 1px 1px;
-	padding: 0px;
-	border-color: #9AC482;
-	background-color: #F3F3EC;
-	border-collapse: collapse;
-	text-align: -webkit-auto;
-}
-
-td.savebutton {
-	padding-right: 300px;
-	text-align: right;
-	height: 30px
-}
-
-.dropdown {
-	width: 157px;
-	height: 29px;
-}
-
-.formfields {
-	width: 150px;
-	height: 25px;
-}
-
-/*END CONTENT SECTION*/
-</style>
-</head>
-<body>
-
-	<table style="width: 100%;">
-		<tr style="background-color: #008000;">
-			<td
-				style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
-					Money</h1>
-				<div class="header"
-					style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
-					Administrator Console</div> <br>
-				<div class="header" style="color: #000000;">
-					<a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
-						> Administration</a>
-				</div></td>
-		</tr>
-	</table>
-	<div>
-		<div>
-			<table style="width: 100%;">
-				<tr>
-					<td><h2>Predefined Inputs Manager</h2>
-						<hr>
-					</td>
-				</tr>
-			</table>
-		</div>
-
-		<table style="width: 100%;">
-			<tr>
-				<td class="navbar">
-					<div id="accordion">
-						<h3>
-							<a href="ussdmenuitems.html">Ussd Menu Items Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdmenuitems.html">Ussd Menu Items Listing</a>
-							</li>
-							<li><a href="addussdmenuitems.html">Create Ussd Menu
-									Items</a></li>
-						</ul>
-						<h3>
-							<a href="ussdtransactionkeywords.html">Transaction Keywords
-								Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdtransactionkeywords.html">Transaction
-									Keywords</a></li>
-							<li><a href="ussdkeywordsteps.html">Keyword Steps</a></li>
-						</ul>
-						<h3>
-							<a href="ussdpredefinputs.html">Predefined Inputs Setup</a>
-						</h3>
-						<ul>
-							<li><a href="ussdpredefinputs.html">Predefined Inputs</a></li>
-							<li><a href="ussdpredefinputitems.html">Predefined Input
-									Items</a></li>
-						</ul>
-						<h3>
-                            <a href="ussdrequests.html">USSD Requests</a>
-                        </h3>
-                        <ul>
-                            <li><a href="ussdrequests.html">USSD Requests</a>
-                            </li>
-                        </ul>
-					</div>
-				</td>
-				<td class="content">
-					<table width="100%">
-						<tr>
-							<td></td>
-							<td></td>
-							<td></td>
-							<td></td>
-							<td align=center><div>
-									<input class="btn" type="submit" name="submit"
-										value="Create New"
-										onClick="location.href='addussdpredefinputs.html'">
-								</div></td>
-						</tr>
-					</table> <c:if test="${empty ussdPredefInputList}">
-						<div>
-							<table>
-								<tr>
-									<td>There are no predef inputs configured on this system <br>
-										<br></td>
-								</tr>
-							</table>
-						</div>
-					</c:if> <c:if test="${!empty ussdPredefInputList}">
-						<h2>System Predefined Inputs Listing</h2>
-						<table class="data">
-							<tr>
-								<th>Input Item Name</th>
-								<th>Input Item Desc</th>
-<!-- 								<th>Action</th> -->
-							</tr>
-							<c:forEach items="${ussdPredefInputList}" var="predefinput">
-								<tr class="data">
-									<td class="data">${predefinput.predefInputName}</td>
-									<td class="data">${predefinput.predefInputDescription}</td>
-<!-- 									<td class="data"><a -->
-<%-- 										href="#activate/${predefinput.predefInputId}">Activate</a><a> --%>
-<!-- 											&nbsp; | &nbsp;</a><a -->
-<%-- 										href="removepredefinput/${predefinput.predefInputId}.html">Delete</a><a> --%>
-<!-- 											&nbsp; | &nbsp;</a><a -->
-<%-- 										href="editpredefinput/?id=${predefinput.predefInputId}.html">Edit</a> --%>
-<!-- 									</td> -->
-								</tr>
-							</c:forEach>
-						</table>
-					</c:if></td>
-			</tr>
-		</table>
-	</div>
-
-</body>
-</html>
\ No newline at end of file
diff --git a/WebContent/jsp/ussdrequests.jsp b/WebContent/jsp/ussdrequests.jsp
deleted file mode 100644
index 5ffc61d..0000000
--- a/WebContent/jsp/ussdrequests.jsp
+++ /dev/null
@@ -1,325 +0,0 @@
-<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
-    pageEncoding="ISO-8859-1"%>
-<%@ include file="include.jsp"%>
-<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-
-<html>
-<head>
-<title>USSD Requests</title>
-<link type="text/css"
-    href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
-    rel="stylesheet" />
-<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
-<script type="text/javascript"
-    src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
-<script type="text/javascript">
-    $(function() {
-        // Accordion
-        $('#accordion').accordion({
-            header : "h3"
-        });
-        // Tabs
-        $('#tabs').tabs();
-        $('#button').button();
-    });
-</script>
-<style>
-
-/*GENERAL*/
-body {
-    font-family: 'Arial', 'Helvetica', sans-serif;
-    font-size: 75%;
-    line-height: 1.6em;
-    background: #F3F3EC;
-    padding: 0;
-}
-
-h1,h2 {
-    font-size: 14px;
-    font-weight: bold;
-}
-
-h3 {
-    font-size: 100%;
-    background: #DDB929;
-    display: block;
-    padding: 1px;
-    color: #fff;
-}
-
-h4 {
-    font-size: 80%;
-    background: #DDB929;
-    display: block;
-    padding: 1px;
-    color: #fff;
-}
-
-label {
-    font-weight: bold;
-    text-align: right;
-}
-
-/*END GENERAL*/
-/* ERROR BLOCK */
-.errorblock {
-    color: #000;
-    background-color: #ffEEEE;
-    border: 3px solid #ff0000;
-    padding: 8px;
-    margin: 16px;
-}
-/*BUTTONS*/
-input.createbtn {
-    
-}
-
-button,.btn {
-    background-image:
-        url('resources/css/ui-lightness/images/CuteCapLa7.gif');
-    background-position: left top;
-    background-repeat: repeat-x;
-    background-color: transparent;
-    border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
-        -moz-use-text-color;
-    border-style: none none none none;
-    border-width: medium 2px 2px medium;
-    cursor: pointer;
-    display: inline;
-    colour: #008000;
-    font-family: 'Arial', 'Helvetica', sans-serif;
-    font-size: 100%;
-    font-weight: bold;
-    padding: 1px 3px;
-    height: 33px;
-    width: 100px;
-}
-
-hover.btn {
-    color: #0066CC;
-}
-
-/*END BUTTONS*/
-
-/*SIDE BAR*/
-.navbar {
-    vertical-align: top;
-    top: 1px;
-    width: 20%;
-}
-
-/*END SIDE BAR*/
-
-/*CONTENT SECTION*/
-.content {
-    vertical-align: top;
-    top: 1px;
-    width: 80%;
-}
-
-div.header {
-    background: #008000;
-    border: 2px Solid #008000;
-}
-
-div {
-    background: #F3F3EC;
-    margin: 2px;
-    padding: 1px;
-    border: 2px;
-}
-
-fieldset {
-    border-color: #9AC482;
-}
-
-hr {
-    border-color: #9AC482;
-}
-
-li {
-    display: block;
-    margin: 2px 2px 2px -20px;
-}
-
-tr.header {
-    background: #ffffff;
-}
-
-th {
-    background: #7CB15C;
-    height: 19px;
-    width: 10%;
-    border-color: #ffffff;
-    text-align: left;
-    padding: 4px;
-    word-wrap: break-word;
-}
-
-td.data {
-    border-color: #9AC482;
-    border-width: 1px 1px 0 0;
-    border-style: solid;
-    margin: 1;
-    padding: 2px;
-    background-color: #F3F3EC;
-    text-align: left;
-}
-
-tr.data {
-    border: 1px Solid #9AC482;
-}
-
-table.form {
-    padding: 8px;
-    width: 100px;
-}
-
-td.form {
-    padding: 5px;
-    width: 400px;
-}
-
-table.data {
-    width: 100%;
-    font-size: 13px;
-    border: 1px Solid;
-    margin: 0px 0px 1px 1px;
-    padding: 0px;
-    border-color: #9AC482;
-    background-color: #F3F3EC;
-    border-collapse: collapse;
-    text-align: -webkit-auto;
-}
-
-td.savebutton {
-    padding-right: 300px;
-    text-align: right;
-    height: 30px
-}
-
-.dropdown {
-    width: 157px;
-    height: 29px;
-}
-
-.formfields {
-    width: 150px;
-    height: 25px;
-}
-
-/*END CONTENT SECTION*/
-</style>
-</head>
-<body>
-
-    <table style="width: 100%;">
-        <tr style="background-color: #008000;">
-            <td
-                style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
-                    Money</h1>
-                <div class="header"
-                    style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
-                    Administrator Console</div> <br>
-                <div class="header" style="color: #000000;">
-                    <a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
-                        > Administration</a>
-                </div>
-            </td>
-        </tr>
-    </table>
-    <div>
-        <div>
-            <table style="width: 100%;">
-                <tr>
-                    <td><h2>Ussd Requests</h2>
-                        <hr></td>
-                </tr>
-            </table>
-        </div>
-
-        <table style="width: 100%;">
-            <tr>
-                <td class="navbar">
-                    <div id="accordion">
-                        <h3>
-                            <a href="ussdmenuitems.html">Ussd Menu Items Setup</a>
-                        </h3>
-                        <ul>
-                            <li><a href="ussdmenuitems.html">Ussd Menu Items Listing</a>
-                            </li>
-                            <li><a href="addussdmenuitems.html">Create Ussd Menu
-                                    Items</a>
-                            </li>
-                        </ul>
-                        <h3>
-                            <a href="ussdtransactionkeywords.html">Transaction Keywords
-                                Setup</a>
-                        </h3>
-                        <ul>
-                            <li><a href="ussdtransactionkeywords.html">Transaction
-                                    Keywords</a>
-                            </li>
-                            <li><a href="ussdkeywordsteps.html">Keyword Steps</a>
-                            </li>
-                        </ul>
-                        <h3>
-                            <a href="ussdpredefinputs.html">Predefined Inputs Setup</a>
-                        </h3>
-                        <ul>
-                            <li><a href="ussdpredefinputs.html">Predefined Inputs</a>
-                            </li>
-                            <li><a href="ussdpredefinputitems.html">Predefined Input
-                                    Items</a>
-                            </li>
-                        </ul>
-                        <h3>
-                            <a href="ussdrequests.html">USSD Requests</a>
-                        </h3>
-                        <ul>
-                            <li><a href="ussdrequests.html">USSD Requests</a>
-                            </li>
-                        </ul>
-                    </div></td>
-                <td class="content">
-	<c:if test="${empty ussdRequestsList}">
-		<div>
-                            <table>
-                                <tr>
-                                    <td>There are no ussd requests recorded on this system</td>
-		</tr>
-		</table>
-		</div>
-		<br>
-		<br>
-	</c:if>
-
-
-<c:if test="${!empty ussdRequestsList}">
-        <h2>System USSD Requests Listing</h2>
-        <table class="data">
-            <tr>
-                <th>Transaction Id</th>
-                <th>Source Msisdn</th>
-                <th>Request Thread</th>
-                <th>Is Completed</th>
-                <th>Final Transaction Keyword</th>
-                <th>Request TimeStamp</th>
-            </tr>
-            <c:forEach items="${ussdRequestsList}" var="ussdrequest">
-                <tr>
-                    <td>${ussdrequest.transactionId}</td>
-                    <td>${ussdrequest.sourceMsisdn}</td>
-                    <td>${ussdrequest.requestThread}</td>
-                    <td>${ussdrequest.isCompleted}</td>
-                    <td>${ussdrequest.finalTransactionKeyword}</td>
-                    <td>${ussdrequest.requestTimeStamp}</td>
-                </tr>
-            </c:forEach>
-        </table>
-    </c:if>
-</td>
-</tr>
-</table></div>
-</body>
-</html>
\ No newline at end of file
diff --git a/WebContent/jsp/ussdtransactionkeywords.jsp b/WebContent/jsp/ussdtransactionkeywords.jsp
deleted file mode 100644
index 4219766..0000000
--- a/WebContent/jsp/ussdtransactionkeywords.jsp
+++ /dev/null
@@ -1,340 +0,0 @@
-<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
-    pageEncoding="ISO-8859-1"%>
-<%@ include file="include.jsp"%>
-<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-
-<html>
-<head>
-<title>Transaction Keywords Manager</title>
-<link type="text/css"
-    href="resources/css/ui-lightness/jquery-ui-1.8.18.custom.css"
-    rel="stylesheet" />
-<script type="text/javascript" src="resources/js/jquery-1.7.1.min.js"></script>
-<script type="text/javascript"
-    src="resources/js/jquery-ui-1.8.18.custom.min.js"></script>
-<script type="text/javascript">
-    $(function() {
-        // Accordion
-        $('#accordion').accordion({
-            header : "h3"
-        });
-        // Tabs
-        $('#tabs').tabs();
-        $('#button').button();
-    });
-</script>
-<style>
-
-/*GENERAL*/
-body {
-    font-family: 'Arial', 'Helvetica', sans-serif;
-    font-size: 75%;
-    line-height: 1.6em;
-    background: #F3F3EC;
-    padding: 0;
-}
-
-h1,h2 {
-    font-size: 14px;
-    font-weight: bold;
-}
-
-h3 {
-    font-size: 100%;
-    background: #DDB929;
-    display: block;
-    padding: 1px;
-    color: #fff;
-}
-
-h4 {
-    font-size: 80%;
-    background: #DDB929;
-    display: block;
-    padding: 1px;
-    color: #fff;
-}
-
-label {
-    font-weight: bold;
-    text-align: right;
-}
-
-/*END GENERAL*/
-/* ERROR BLOCK */
-.errorblock {
-    color: #000;
-    background-color: #ffEEEE;
-    border: 3px solid #ff0000;
-    padding: 8px;
-    margin: 16px;
-}
-/*BUTTONS*/
-input.createbtn {
-    
-}
-
-button,.btn {
-    background-image:
-        url('resources/css/ui-lightness/images/CuteCapLa7.gif');
-    background-position: left top;
-    background-repeat: repeat-x;
-    background-color: transparent;
-    border-color: -moz-use-text-color #5C5D61 rgb(92, 93, 97)
-        -moz-use-text-color;
-    border-style: none none none none;
-    border-width: medium 2px 2px medium;
-    cursor: pointer;
-    display: inline;
-    colour: #008000;
-    font-family: 'Arial', 'Helvetica', sans-serif;
-    font-size: 100%;
-    font-weight: bold;
-    padding: 1px 3px;
-    height: 33px;
-    width: 100px;
-}
-
-hover.btn {
-    color: #0066CC;
-}
-
-/*END BUTTONS*/
-
-/*SIDE BAR*/
-.navbar {
-    vertical-align: top;
-    top: 1px;
-    width: 20%;
-}
-
-/*END SIDE BAR*/
-
-/*CONTENT SECTION*/
-.content {
-    vertical-align: top;
-    top: 1px;
-    width: 80%;
-}
-
-div.header {
-    background: #008000;
-    border: 2px Solid #008000;
-}
-
-div {
-    background: #F3F3EC;
-    margin: 2px;
-    padding: 1px;
-    border: 2px;
-}
-
-fieldset {
-    border-color: #9AC482;
-}
-
-hr {
-    border-color: #9AC482;
-}
-
-li {
-    display: block;
-    margin: 2px 2px 2px -20px;
-}
-
-tr.header {
-    background: #ffffff;
-}
-
-th {
-    background: #7CB15C;
-    height: 19px;
-    width: 10%;
-    border-color: #ffffff;
-    text-align: left;
-    padding: 4px;
-    word-wrap: break-word;
-}
-
-td.data {
-    border-color: #9AC482;
-    border-width: 1px 1px 0 0;
-    border-style: solid;
-    margin: 1;
-    padding: 2px;
-    background-color: #F3F3EC;
-    text-align: left;
-}
-
-tr.data {
-    border: 1px Solid #9AC482;
-}
-
-table.form {
-    padding: 8px;
-    width: 100px;
-}
-
-td.form {
-    padding: 5px;
-    width: 400px;
-}
-
-table.data {
-    width: 100%;
-    font-size: 13px;
-    border: 1px Solid;
-    margin: 0px 0px 1px 1px;
-    padding: 0px;
-    border-color: #9AC482;
-    background-color: #F3F3EC;
-    border-collapse: collapse;
-    text-align: -webkit-auto;
-}
-
-td.savebutton {
-    padding-right: 300px;
-    text-align: right;
-    height: 30px
-}
-
-.dropdown {
-    width: 157px;
-    height: 29px;
-}
-
-.formfields {
-    width: 150px;
-    height: 25px;
-}
-
-/*END CONTENT SECTION*/
-</style>
-</head>
-<body>
-
-    <table style="width: 100%;">
-        <tr style="background-color: #008000;">
-            <td
-                style="font-family: sans-serif; font-stretch: wider; color: #F9FFF9;"><h1>AppLab
-                    Money</h1>
-                <div class="header"
-                    style="font-family: sans-serif; font-stretch: wider; font-size: x-large; color: #000000; text-indent: 6%;">
-                    Administrator Console</div> <br>
-                <div class="header" style="color: #000000;">
-                    <a style="color: #000000;" href="Me2meUiHome URL" title="Home">Home</a><a>
-                        > Administration</a>
-                </div>
-            </td>
-        </tr>
-    </table>
-    <div>
-        <div>
-            <table style="width: 100%;">
-                <tr>
-                    <td><h2>Transaction Keywords Manager</h2>
-                        <hr></td>
-                </tr>
-            </table>
-        </div>
-
-        <table style="width: 100%;">
-            <tr>
-                <td class="navbar">
-                    <div id="accordion">
-                        <h3>
-                            <a href="ussdmenuitems.html">Ussd Menu Items Setup</a>
-                        </h3>
-                        <ul>
-                            <li><a href="ussdmenuitems.html">Ussd Menu Items Listing</a>
-                            </li>
-                            <li><a href="addussdmenuitems.html">Create Ussd Menu
-                                    Items</a>
-                            </li>
-                        </ul>
-                        <h3>
-                            <a href="ussdtransactionkeywords.html">Transaction Keywords
-                                Setup</a>
-                        </h3>
-                        <ul>
-                            <li><a href="ussdtransactionkeywords.html">Transaction
-                                    Keywords</a>
-                            </li>
-                            <li><a href="ussdkeywordsteps.html">Keyword Steps</a>
-                            </li>
-                        </ul>
-                        <h3>
-                            <a href="ussdpredefinputs.html">Predefined Inputs Setup</a>
-                        </h3>
-                        <ul>
-                            <li><a href="ussdpredefinputs.html">Predefined Inputs</a>
-                            </li>
-                            <li><a href="ussdpredefinputitems.html">Predefined Input
-                                    Items</a>
-                            </li>
-                        </ul>
-                        <h3>
-                            <a href="ussdrequests.html">USSD Requests</a>
-                        </h3>
-                        <ul>
-                            <li><a href="ussdrequests.html">USSD Requests</a>
-                            </li>
-                        </ul>
-                    </div></td>
-                <td class="content">
-                    <table width="100%">
-                        <tr>
-                            <td></td>
-                            <td></td>
-                            <td></td>
-                            <td></td>
-                            <td align=center><div>
-                                    <input class="btn" type="submit" name="submit"
-                                        value="Create New"
-                                        onClick="location.href='addussdtransactionkeywords.html'">
-                                </div>
-                            </td>
-                        </tr>
-                    </table> 
-
-	<c:if test="${empty ussdTransactionKeywordList}">
-		<tr>
-			<td>There are no transaction keywords configured on this system</td>
-		</tr>
-		<br>
-		<br>
-	</c:if>
-
-
-<c:if test="${!empty ussdTransactionKeywordList}">
-        <h2>System Transaction Keywords Listing</h2>
-        <table class="data">
-            <tr>
-                <th>Keyword Name</th>
-                <th>Keyword Code</th>
-                <th>Keyword Steps Count</th>
-                <th>Keyword Description</th>
-<!--                 <th>Action</th> -->
-            </tr>
-            <c:forEach items="${ussdTransactionKeywordList}" var="transactionkeyword">
-                <tr>
-                    <td>${transactionkeyword.keywordName}</td>
-                    <td>${transactionkeyword.keywordCode}</td>
-                    <td>${transactionkeyword.keywordStepsCount}</td>
-                    <td>${transactionkeyword.keywordDescription}</td>
-<%--                     <td><c:if --%>
-<%--                             test="${transactionkeyword.keywordEnabledFlag != 1}"> --%>
-<%--                             <a href="#activate/${transactionkeyword.keywordId}">Activate | </a> --%>
-<%--                         </c:if> <c:if test="${transactionkeyword.keywordEnabledFlag == 1}"> --%>
-<%--                             <a href="#deactivate/${transactionkeyword.keywordId}">Deactivate |</a> --%>
-<%--                         </c:if> --%>
-<%--                         <a href="removekeyword/${transactionkeyword.keywordId}.html"> Delete |</a><a --%>
-<%--                         href="#edit/${transactionkeyword.keywordId}"> Edit</a> --%>
-<!--                     </td> -->
-                </tr>
-            </c:forEach>
-        </table>
-    </c:if>
-
-</body>
-</html>
\ No newline at end of file
diff --git a/WebContent/jsp/viewsystemsettings.jsp b/WebContent/jsp/viewsystemsettings.jsp
new file mode 100644
index 0000000..3f5be3c
--- /dev/null
+++ b/WebContent/jsp/viewsystemsettings.jsp
@@ -0,0 +1,15 @@
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+    pageEncoding="ISO-8859-1"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<html>
+<head>
+<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
+<title>View System Settings</title>
+</head>
+<body>
+
+
+
+
+</body>
+</html>
\ No newline at end of file
diff --git a/build.xml b/build.xml
index eec7799..64ef1a1 100644
--- a/build.xml
+++ b/build.xml
@@ -1,40 +1,39 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project basedir="." default="build">
- 
-  <property file="build.properties"/>
-  <property name="src.dir" value="src"/>
-  <property name="build.dir" value="WebContent/WEB-INF/classes"/>
- 
-  <path id="build.classpath">
-      <fileset dir="WebContent/WEB-INF/lib">
-          <include name="*.jar"/>
-      </fileset>
-      <fileset dir="${appserver.lib}">
-          <include name="*servlet*.jar"/>
-      </fileset>
-      <pathelement path="${build.dir}"/>
-  </path>       
- 
-  <target name="build" depends="compile">
-      <jar destfile="metomeui.war">
-         <fileset dir="." includes="WebContent/WEB-INF/**/*, WebContent/jsp/**/*"/>
-      </jar>
-  </target>
-  
-  <target name="compile">
-      <mkdir dir="${build.dir}"/>
-      <javac destdir="${build.dir}" source="1.6" target="1.6" debug="true" deprecation="false" optimize="false" failonerror="true" includeantruntime="false">
-          <src path="${src.dir}"/>
-          <classpath refid="build.classpath"/>
-      </javac>
-  </target>
- 
-  <target name="clean" description="Clean output directories">
-      <delete>
-          <fileset dir="${build.dir}">
-              <include name="**/*.class"/>
-          </fileset>
-      </delete>
-  </target>
- 
+
+	<property file="build.properties" />
+	<property name="src.dir" value="src" />
+	<property name="build.dir" value="WebContent/WEB-INF/classes" />
+
+	<path id="build.classpath">
+		<fileset dir="WebContent/WEB-INF/lib">
+			<include name="*.jar" />
+		</fileset>
+		<fileset dir="${appserver.lib}">
+			<include name="*servlet*.jar" />
+		</fileset>
+		<pathelement path="${build.dir}" />
+	</path>
+
+	<target name="clean" description="Clean output directories">
+		<delete>
+			<fileset dir="${build.dir}">
+				<include name="**/*.class" />
+			</fileset>
+		</delete>
+	</target>
+
+	<target name="compile" depends="clean">
+		<mkdir dir="${build.dir}" />
+		<javac destdir="${build.dir}" source="1.6" target="1.6" debug="true" deprecation="false" optimize="false" failonerror="false" includeantruntime="false">
+			<src path="${src.dir}" />
+			<classpath refid="build.classpath" />
+		</javac>
+	</target>
+
+	<target name="build" depends="compile">
+		<jar destfile="metomeui.war">
+			<fileset dir="." includes="WebContent/WEB-INF/**/*, WebContent/jsp/**/*" />
+		</jar>
+	</target>
 </project>
\ No newline at end of file
diff --git a/src/hibernate.cfg.xml b/src/hibernate.cfg.xml
new file mode 100644
index 0000000..ec52464
--- /dev/null
+++ b/src/hibernate.cfg.xml
@@ -0,0 +1,46 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE hibernate-configuration PUBLIC
+    "-//Hibernate/Hibernate Configuration DTD//EN"
+    "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">
+
+<hibernate-configuration>
+
+	<session-factory>
+
+		<!-- SQL dialect -->
+		<property name="dialect">org.hibernate.dialect.MySQL5Dialect</property>
+
+		<!-- Echo all executed SQL to stdout -->
+		<property name="show_sql">true</property>
+
+		<!-- Enable Hibernate's automatic session context management -->
+		<property name="current_session_context_class">thread</property>
+		<property name="hibernate.jdbc.batch_size">6</property>
+
+		<!-- MySQL connection -->
+		<property name="connection.url">jdbc:mysql://localhost:3306/applabmoney</property>
+		<property name="connection.username">root</property>
+		<property name="connection.driver_class">com.mysql.jdbc.Driver</property>
+		<property name="connection.password">root123</property>
+
+		<!-- JDBC connection pool (use the built-in) -->
+		<property name="connection.pool_size">1</property>
+
+		<!-- Disable the second-level cache -->
+		<!--<property name="cache.provider_class">org.hibernate.cache.NoCacheProvider</property>-->
+
+		<mapping class="metomeui.model.AccountType" />
+		<mapping class="metomeui.model.Message" />
+		<mapping class="metomeui.model.Language" />
+		<mapping class="metomeui.model.User" />
+		<mapping class="metomeui.model.Login" />
+		<mapping class="metomeui.model.MemoGroup" />
+		<mapping class="metomeui.model.UssdPredefInputItem" />
+		<mapping class="metomeui.model.UssdPredefInput" />
+		<mapping class="metomeui.model.UssdKeywordStep" />
+		<mapping class="metomeui.model.UssdMenuItem" />
+		<mapping class="metomeui.model.UssdTransactionKeyword" />
+		<mapping class="metomeui.model.UssdRequest" />
+	</session-factory>
+
+</hibernate-configuration>
\ No newline at end of file
diff --git a/src/metomeui/dao/Constants.java b/src/metomeui/dao/Constants.java
new file mode 100644
index 0000000..3fe5028
--- /dev/null
+++ b/src/metomeui/dao/Constants.java
@@ -0,0 +1,8 @@
+package metomeui.dao;
+
+public class Constants {
+
+	public static final String NAME_PROP_NAME = "user_name";
+	public static final String PASS_PROP_PASS = "password";
+
+}
diff --git a/src/metomeui/dao/Dao.java b/src/metomeui/dao/Dao.java
new file mode 100644
index 0000000..9f75d3b
--- /dev/null
+++ b/src/metomeui/dao/Dao.java
@@ -0,0 +1,54 @@
+package metomeui.dao;
+
+import java.util.logging.Level;
+import java.util.logging.Logger;
+import org.hibernate.HibernateException;
+import org.hibernate.Session;
+import org.hibernate.SessionFactory;
+import org.hibernate.cfg.Configuration;
+
+public class Dao {
+	protected Dao() {
+	}
+
+	public static Session getSession() {
+		Session session = (Session) Dao.session.get();
+		if (session == null) {
+			session = sessionFactory.openSession();
+			Dao.session.set(session);
+		}
+		return session;
+	}
+
+	protected void begin() {
+		getSession().beginTransaction();
+	}
+
+	protected void commit() {
+		getSession().getTransaction().commit();
+	}
+
+	protected void rollback() {
+		try {
+			getSession().getTransaction().rollback();
+		} catch (HibernateException e) {
+			log.log(Level.WARNING, "Cannot rollback", e);
+		}
+		try {
+			getSession().close();
+		} catch (HibernateException e) {
+			log.log(Level.WARNING, "Cannot close", e);
+		}
+		Dao.session.set(null);
+	}
+
+	public static void close() {
+		getSession().close();
+		Dao.session.set(null);
+	}
+
+	private static final Logger log = Logger.getAnonymousLogger();
+	private static final ThreadLocal session = new ThreadLocal();
+	private static final SessionFactory sessionFactory = new Configuration()
+			.configure().buildSessionFactory();
+}
\ No newline at end of file
diff --git a/src/metomeui/dao/HibernateUtil.java b/src/metomeui/dao/HibernateUtil.java
new file mode 100644
index 0000000..662d1db
--- /dev/null
+++ b/src/metomeui/dao/HibernateUtil.java
@@ -0,0 +1,25 @@
+package metomeui.dao;
+
+import org.hibernate.SessionFactory;
+import org.hibernate.cfg.AnnotationConfiguration;
+
+public final class HibernateUtil {
+
+	private static final SessionFactory sessionFactory;
+	static {
+		try { 
+			// Create the SessionFactory from hibernate.cfg.xml
+			sessionFactory = new AnnotationConfiguration().configure("hibernate.cfg.xml")
+					.buildSessionFactory();
+		} catch (Throwable ex) {
+			// Make sure you log the exception, as it might be swallowed
+			System.err.println("Initial SessionFactory creation failed." + ex);
+			throw new ExceptionInInitializerError(ex);
+		}
+	}
+
+	public static SessionFactory getSessionFactory() {
+		return sessionFactory;
+	}
+
+}
diff --git a/src/metomeui/dao/SystemSettingsDao.java b/src/metomeui/dao/SystemSettingsDao.java
new file mode 100644
index 0000000..9f42649
--- /dev/null
+++ b/src/metomeui/dao/SystemSettingsDao.java
@@ -0,0 +1,103 @@
+package metomeui.dao;
+
+import java.util.List;
+
+import metomeui.model.AccountType;
+import metomeui.model.ContactForm;
+import metomeui.model.Login;
+import metomeui.model.MemoGroup;
+import metomeui.model.Message;
+import metomeui.model.SystemConfiguration;
+import metomeui.model.User;
+import metomeui.model.Language;
+import metomeui.model.UssdPredefInput;
+import metomeui.model.UssdPredefInputItem;
+
+public interface SystemSettingsDao {
+
+	/**
+	 * User Management functions
+	 */
+	public List<User> listUsers();
+
+	public void addUser(User user);
+
+	public void removeUser(long id);
+
+	public User getUserByName(String userName, String password);
+
+	public void editExistingUser(User user);
+
+	public User getExistingUser(long userId);
+
+	/**
+	 * Global Management functions
+	 */
+	public List<Object> listObject();
+
+	public void addObject(Object object);
+
+	public void removeObject(Integer objectId);
+
+	/**
+	 * AccountTypes Management functions
+	 */
+	public List<AccountType> listAccountTypes();
+
+	public void addAccountType(AccountType accountType);
+
+	public void removeAccountType(long accountTypeId);
+
+	/**
+	 * Message Management functions
+	 */
+	public List<Message> listMessages();
+
+	public void removeMessage(Integer messageId);
+
+	public void addMessage(Message message);
+
+	/**
+	 * Language Management functions
+	 * 
+	 */
+	public List<Language> listLanguages();
+
+	public void removeLanguage(Integer languageId);
+
+	public void addLanguage(Language language);
+
+	/**
+	 * MemoGroup Management functions
+	 */
+	public List<MemoGroup> listMemoGroups();
+
+	public void addMemoGroup(MemoGroup memoGroup);
+
+	public void removeMemoGroup(Integer memoGroupId);
+
+	/**
+	 * System Config functions
+	 */
+	public List<SystemConfiguration> listSystemConfiguration();
+
+	public void removeSystemConfiguration(Integer SystemConfigurationId);
+
+	public void addSystemConfiguration(SystemConfiguration sysConfiguration);
+
+	public Language getExistingLanguage(long languageId);
+
+	public void editExistingLanguage(Language language);
+
+	public Message getExistingMessage(long messageId);
+
+	public void editExistingMemoGroup(MemoGroup memoGroup);
+
+	public MemoGroup getExistingMemoGroup(long memoGroupId);
+
+	public void editExistingMessage(Message message);
+
+	public AccountType getExistingAccountType(long accountTypeId);
+
+	public void editExistingAccountType(AccountType accountType);
+}
diff --git a/src/metomeui/dao/SystemSettingsDaoImplementation.java b/src/metomeui/dao/SystemSettingsDaoImplementation.java
new file mode 100644
index 0000000..83b1581
--- /dev/null
+++ b/src/metomeui/dao/SystemSettingsDaoImplementation.java
@@ -0,0 +1,293 @@
+package metomeui.dao;
+
+import java.util.List;
+import java.text.MessageFormat;
+
+import metomeui.model.AccountType;
+import metomeui.model.ContactForm;
+import metomeui.model.Customer;
+import metomeui.model.Language;
+import metomeui.model.Login;
+import metomeui.model.MemoGroup;
+import metomeui.model.Message;
+import metomeui.model.SystemConfiguration;
+import metomeui.model.User;
+import metomeui.model.UssdPredefInput;
+import metomeui.model.UssdPredefInputItem;
+
+import org.apache.log4j.Logger;
+import org.hibernate.HibernateException;
+import org.hibernate.classic.Session;
+import org.hibernate.SessionFactory;
+import org.hibernate.Transaction;
+import org.hibernate.cfg.Configuration;
+import org.hibernate.criterion.Restrictions;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Repository;
+import org.springframework.transaction.annotation.Transactional;
+
+/**
+ * @Repository("systemSettingsDao") declares that the annotated class is a
+ *                                  "DAO".
+ * @Autowired is being used to make the SessionFactory instance available
+ *            automatically by spring.
+ */
+
+@Repository("systemSettingsDao")
+@Transactional
+public class SystemSettingsDaoImplementation implements SystemSettingsDao {
+
+	private static Logger logger = Logger
+			.getLogger(SystemSettingsDaoImplementation.class);
+
+	private SessionFactory sessionFactory;
+
+	private Session currentSession() {
+		return HibernateUtil.getSessionFactory().getCurrentSession();
+	}
+	
+	/**
+	 * User Management functions
+	 * 
+	 */
+	@SuppressWarnings("unchecked")
+	public List<User> listUsers() {
+		currentSession().beginTransaction();
+		return (List<User>) currentSession().createCriteria(User.class).list();
+	}
+
+	public void addUser(User user) {
+		try {
+			currentSession().beginTransaction();
+			logger.debug("Saving predefInputItem");
+			currentSession().saveOrUpdate(user);
+			currentSession().getTransaction().commit();
+		} catch (RuntimeException e) {
+			currentSession().getTransaction().rollback();
+			throw e;
+		}
+	}
+
+	public User getUserByName(String userName, String password) {
+		currentSession().beginTransaction();
+		return (User) currentSession()
+				.createQuery(
+						"from User user "
+								+ "where user.userName = :username and user.password = :password")
+				.setParameter("username", userName)
+				.setParameter("password", password).setMaxResults(1)
+				.uniqueResult();
+	}
+
+	public User getUserLoginByName(String userName, String password) {
+		currentSession().beginTransaction();
+		return (User) currentSession()
+				.createQuery(
+						"from User user "
+								+ "where user.userName = :username and user.password = :password")
+				.setParameter("username", userName)
+				.setParameter("password", password).uniqueResult();
+	}
+
+	public void removeUser(Integer userId) {
+		currentSession().beginTransaction();
+		User user = (User) currentSession().load(User.class, userId);
+		if (null != user) {
+			currentSession().delete(user);
+		}
+	}
+
+	/**
+	 * Message Management functions
+	 * 
+	 */
+	@SuppressWarnings("unchecked")
+	public List<Message> listMessages() {
+		return (List<Message>) sessionFactory.getCurrentSession()
+				.createCriteria(Message.class).list();
+	}
+
+	public void addMessage(Message message) {
+		sessionFactory.getCurrentSession().saveOrUpdate(message);
+	}
+
+	public void removeMessage(Integer messageId) {
+		Message message = (Message) sessionFactory.getCurrentSession().load(
+				Message.class, messageId);
+		if (null != message) {
+			sessionFactory.getCurrentSession().delete(message);
+		}
+	}
+
+	/**
+	 * AccountTypes Management functions
+	 * 
+	 */
+	@SuppressWarnings("unchecked")
+	public List<AccountType> listAccountTypes() {
+		return (List<AccountType>) sessionFactory.getCurrentSession()
+				.createCriteria(AccountType.class).list();
+	}
+
+	public void addAccountType(AccountType accountType) {
+		sessionFactory.getCurrentSession().saveOrUpdate(accountType);
+	}
+
+	/**
+	 * Language Management functions
+	 * 
+	 */
+	@SuppressWarnings("unchecked")
+	public List<Language> listLanguages() {
+		return (List<Language>) sessionFactory.getCurrentSession()
+				.createCriteria(Language.class).list();
+	}
+
+	public void removeLanguage(Integer languageId) {
+		Language language = (Language) sessionFactory.getCurrentSession().load(
+				Language.class, languageId);
+		if (null != language) {
+			sessionFactory.getCurrentSession().delete(language);
+		}
+	}
+
+	public void addLanguage(Language language) {
+		sessionFactory.getCurrentSession().saveOrUpdate(language);
+	}
+
+	/**
+	 * MemoGroup Management functions
+	 * 
+	 */
+	@SuppressWarnings("unchecked")
+	public List<MemoGroup> listMemoGroups() {
+		return (List<MemoGroup>) sessionFactory.getCurrentSession()
+				.createCriteria(MemoGroup.class).list();
+	}
+
+	public void addMemoGroup(MemoGroup memoGroup) {
+		sessionFactory.getCurrentSession().saveOrUpdate(memoGroup);
+	}
+
+	public void removeMemoGroup(Integer memoGroupId) {
+		MemoGroup memoGroup = (MemoGroup) sessionFactory.getCurrentSession()
+				.load(MemoGroup.class, memoGroupId);
+		if (null != memoGroup) {
+			sessionFactory.getCurrentSession().delete(memoGroup);
+		}
+	}
+
+	/**
+	 * System Config functions
+	 * 
+	 */
+	@SuppressWarnings("unchecked")
+	public List<SystemConfiguration> listSystemConfiguration() {
+		return (List<SystemConfiguration>) sessionFactory.getCurrentSession()
+				.createCriteria(SystemConfiguration.class).list();
+	}
+
+	public void addSystemConfiguration(SystemConfiguration systemConfiguration) {
+		sessionFactory.getCurrentSession().saveOrUpdate(systemConfiguration);
+	}
+
+	public void removeSystemConfiguration(Integer systemConfigurationId) {
+		SystemConfiguration systemConfiguration = (SystemConfiguration) sessionFactory
+				.getCurrentSession().load(SystemConfiguration.class,
+						systemConfigurationId);
+		if (null != systemConfiguration) {
+			sessionFactory.getCurrentSession().delete(systemConfiguration);
+		}
+	}
+
+	@Override
+	public List<Object> listObject() {
+		// TODO Auto-generated method stub
+		return null;
+	}
+
+	@Override
+	public void addObject(Object object) {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public void removeObject(Integer objectId) {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public void removeAccountType(long accountTypeId) {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public void removeUser(long id) {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public void editExistingUser(User user) {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public User getExistingUser(long userId) {
+		// TODO Auto-generated method stub
+		return null;
+	}
+
+	@Override
+	public Language getExistingLanguage(long languageId) {
+		// TODO Auto-generated method stub
+		return null;
+	}
+
+	@Override
+	public void editExistingLanguage(Language language) {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public Message getExistingMessage(long messageId) {
+		// TODO Auto-generated method stub
+		return null;
+	}
+
+	@Override
+	public void editExistingMemoGroup(MemoGroup memoGroup) {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public MemoGroup getExistingMemoGroup(long memoGroupId) {
+		// TODO Auto-generated method stub
+		return null;
+	}
+
+	@Override
+	public void editExistingMessage(Message message) {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public AccountType getExistingAccountType(long accountTypeId) {
+		// TODO Auto-generated method stub
+		return null;
+	}
+
+	@Override
+	public void editExistingAccountType(AccountType accountType) {
+		// TODO Auto-generated method stub
+		
+	}
+
+}
diff --git a/src/metomeui/dao/UserDao.java b/src/metomeui/dao/UserDao.java
index c4d7b34..530fe6b 100644
--- a/src/metomeui/dao/UserDao.java
+++ b/src/metomeui/dao/UserDao.java
@@ -1,16 +1,109 @@
 package metomeui.dao;
 
-import java.util.List;
+import java.util.logging.Level;
+
+import org.apache.log4j.Logger;
+import org.hibernate.HibernateException;
+import org.hibernate.Query;
+import org.hibernate.Session;
+import org.hibernate.SessionFactory;
+import org.hibernate.Transaction;
+import org.hibernate.cfg.AnnotationConfiguration;
+import org.hibernate.cfg.Configuration;
 
 import metomeui.model.User;
+import metomeui.web.UserLoginController;
 
-public interface UserDao {
-	// To Save the article detail
-	public void addUser(User user);
+public class UserDao {
+	private static Logger logger = Logger.getLogger(UserDao.class);
 
-	// To get list of all articles
-	public List<User> listUsers();
-	
-	//Delet a user
-	public void removeUser(Integer id);
+	/*
+	 * @SuppressWarnings("rawtypes") // private static final ThreadLocal session
+	 * = new ThreadLocal(); private static final SessionFactory sessionFactory =
+	 * new AnnotationConfiguration() .configure().buildSessionFactory(); static
+	 * Session session = sessionFactory.getCurrentSession();
+	 * 
+	 * 
+	 * 
+	 * @SuppressWarnings("unchecked") public static Session getSession() {
+	 * Session session = (Session) UserDao.session.get(); if (session == null) {
+	 * session = sessionFactory.openSession(); UserDao.session.set(session); }
+	 * return session; }
+	 * 
+	 * protected void begin() { getSession().beginTransaction(); }
+	 * 
+	 * protected void commit() { getSession().getTransaction().commit(); }
+	 * 
+	 * @SuppressWarnings("unchecked") protected void rollback() { try {
+	 * getSession().getTransaction().rollback(); } catch (HibernateException e)
+	 * { logger.warn("Cannot rollback", e); } try { getSession().close(); }
+	 * catch (HibernateException e) { logger.warn("Cannot close", e); }
+	 * UserDao.session.set(null); }
+	 * 
+	 * @SuppressWarnings("unchecked") public static void close() {
+	 * getSession().close(); UserDao.session.set(null); }
+	 */
+
+	public UserDao() {
+	}
+
+	public boolean checkIfUserExists(String userName, String password) {
+		boolean exist = false;
+		logger.info("getting sessions!!!!!!!!!!!!!!!");
+		/** Getting the Session Factory and session */
+		SessionFactory session = HibernateUtil.getSessionFactory();
+		Session sess = session.getCurrentSession();
+		/** Starting the Transaction */
+		Transaction tx = sess.beginTransaction();
+
+		Query q = sess.createQuery("from User where name = :username and password = :password");
+		q.setString("username", userName);
+		q.setString("password", password);
+		User user = (User) q.uniqueResult();
+		/** Committing the changes */
+		tx.commit();
+		if (user != null) {
+			exist = true;
+			logger.info("User exists");
+		} else {
+			exist = false;
+		}
+		
+		/** Closing Session */
+		session.close();
+		return exist;
+	}
+
+	@SuppressWarnings("unused")
+	public boolean checkIfUserExists2(String userName, String password)
+			throws Exception {
+		boolean exist = false;
+		logger.info("getting sessions!!!!!!!!!!!!!!!");
+		Session session = null;
+		//Session session = getSession();
+
+		if (session != null) {
+			try {
+				//begin();
+				Query q = session
+						.createQuery("from User where name = :username and password = :password");
+				q.setString("username", userName);
+				q.setString("password", password);
+				User user = (User) q.uniqueResult();
+				//commit();
+				if (user != null) {
+					exist = true;
+				} else {
+					exist = false;
+				}
+			} catch (HibernateException e) {
+				//rollback();
+				throw new Exception("Could not get user " + userName, e);
+			}
+		} else {
+			logger.info("Seession nara exists!!!!!!!!!!!!!!!");
+		}
+
+		return exist;
+	}
 }
diff --git a/src/metomeui/dao/UserDaoImplementation.java b/src/metomeui/dao/UserDaoImplementation.java
deleted file mode 100644
index 1459ebd..0000000
--- a/src/metomeui/dao/UserDaoImplementation.java
+++ /dev/null
@@ -1,68 +0,0 @@
-package metomeui.dao;
-
-import java.util.List;
-
-import metomeui.model.User;
-
-import org.hibernate.SessionFactory;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.stereotype.Repository;
-
-/**
- * This is the implementation class of ArticleDao interface.
- * 
- * @Repository("articleDao") declares that the annotated class is a "DAO".
- * @Autowired is being used to make the SessionFactory instance available
- *            automatically by spring. Now, define the methods declared in
- *            ArticleDao interface using hibernate.
- */
-
-@Repository("userDao")
-public class UserDaoImplementation implements UserDao {
-
-	@Autowired
-	private static SessionFactory sessionFactory;
-
-	// To save the new user details
-	public void addUser(User user) {
-		sessionFactory.getCurrentSession().saveOrUpdate(user);
-	}
-
-	// To get list of all users
-	@SuppressWarnings("unchecked")
-	public List<User> listUsers() {
-		return (List<User>) sessionFactory.getCurrentSession()
-				.createCriteria(User.class).list();
-	}
-
-	@Override
-	public void removeUser(Integer id) {
-		User user = (User) sessionFactory.getCurrentSession().load(User.class,
-				id);
-		if (null != user) {
-			sessionFactory.getCurrentSession().delete(user);
-		}
-	}
-
-//	private static void updateUser(User user) {
-//		Transaction tx = null;
-
-		// try {
-		// tx =
-		// (Transaction)sessionFactory.getCurrentSession().beginTransaction().update(user);
-		// tx.commit();
-		// } catch (RuntimeException e) {
-		// if (null != tx) {
-		// try {
-		// // Second try catch as the rollback could fail as well
-		// tx.rollback();
-		// } catch (HibernateException e1) {
-		//
-		// }
-		// // throw again the first exception
-		// throw e;
-		// }
-		// }
-		// }
-	//}
-}
\ No newline at end of file
diff --git a/src/metomeui/dao/UssdMenuDao.java b/src/metomeui/dao/UssdMenuDao.java
index 3342b50..edbd98a 100644
--- a/src/metomeui/dao/UssdMenuDao.java
+++ b/src/metomeui/dao/UssdMenuDao.java
@@ -6,47 +6,93 @@
 import metomeui.model.UssdMenuItem;
 import metomeui.model.UssdPredefInput;
 import metomeui.model.UssdPredefInputItem;
-import metomeui.model.UssdRequest;
 import metomeui.model.UssdTransactionKeyword;
 
 public interface UssdMenuDao {
 
-	public List<UssdPredefInputItem> listUssdPredefInputItems();
+	public List<UssdTransactionKeyword> listTransactionKeywords();
 
-	public void addUssdPredefInputItem(UssdPredefInputItem ussdPredefInputItem);
+	public void addTransactionKeyword(
+			UssdTransactionKeyword transactionKeyword);
 
-	public void removeUssdPredefInputItem(Integer inputItemId);
+	public void deleteTransactionKeyword(Long keywordId);
 
-	public List<UssdPredefInput> listUssdPredefInputs();
+	public void editTransactionKeyword(UssdTransactionKeyword transactionKeyword);
 	
-	public UssdPredefInput retrieveSinglePredefInputEntry(Integer predefInputId);
-
-	public void addUssdPredefInput(UssdPredefInput ussdPredefInput);
+	public UssdTransactionKeyword getExistingTransactionKeyword(long keywordId);
 	
-	public void updatePredefInput(UssdPredefInput ussdPredefInput, Integer predefInputId);
+	public List<UssdKeywordStep> listKeywordSteps();
 
-	public void removeUssdPredefInput(Integer predefInputId);
+	public void addKeywordStep(UssdKeywordStep ussdKeywordStep);
 
-	public List<UssdTransactionKeyword> listUssdTransactionKeywords();
-
-	public void addUssdTransactionKeyword(
-			UssdTransactionKeyword ussdTransactionKeyword);
-
-	public void removeUssdTransactionKeyword(Integer keywordId);
-
-	public List<UssdKeywordStep> listUssdKeywordSteps();
-
-	public void addUssdKeywordStep(UssdKeywordStep ussdKeywordStep);
-
-	public void removeUssdKeywordStep(Integer keywordStepId);
-
-	public List<UssdMenuItem> listUssdMenuItems();
-
-	public void addUssdMenuItem(UssdMenuItem ussdMenuItem);
-
-	public void removeUssdMenuItem(Integer menuItemId);
-
-	public List<UssdRequest> listUssdRequests();
-
+	public void deleteExistingKeywordStep(Long keywordStepId);
 	
+	public void editKeywordStep(UssdKeywordStep keywordStep);
+	
+	public UssdKeywordStep getExistingKeywordStep(long keywordStepId);
+	
+	public List<UssdMenuItem> listMenuItems();
+
+	public void addMenuItem(UssdMenuItem ussdMenuItem);
+
+	public void deleteMenuItem(Long menuItemId);
+	public void editMenuItem(UssdMenuItem menuItem);
+	
+	public UssdMenuItem getExistingMenuItem(long menuItemId);
+	
+	public void addPredefInput(UssdPredefInput predefInput);
+
+	public List<UssdPredefInput> listPredefInputs();
+	public List<UssdPredefInputItem> listPredefInputItemsByPredefInputId(long predefInputId);
+
+	public void editPredefInput(UssdPredefInput predefInput);
+
+	public UssdPredefInput getExistingPredefInput(Long predefInputId);
+
+	public void deleteExistingPredefInput(Long predefInputId);
+
+	public List<UssdKeywordStep> listKeywordStepByKeywordId(long keywordId);
+
+	public void activateExistingMenuItem(Long menuItemId);
+
+	public void deactivateExistingMenuItem(Long menuItemId);
+
+	public void activateExistingPredefInputItem(Long predefInputItemId);
+
+	public void deactivateExistingPredefInputItem(Long predefInputItemId);
+
+	public void deactivateExistingKeyword(Long keywordId);
+
+	public void activateExistingKeyword(Long keywordId);
+
+	public boolean checkIfDuplicateStepMenuNumber(Integer stepMenuNumber, Long keywordId);
+
+	boolean checkIfDuplicateStepMenuName(String stepMenuName, Long keywordId);
+
+	public void deleteExistingPredefInputItem(Long inputItemId);
+
+	public UssdPredefInputItem getExistingPredefInputItem(Long predefInputItemId);
+
+	public List<UssdKeywordStep> getKeywordsLinkedToThisPredefInput(
+			Long predefInputId);
+
+	public List<UssdMenuItem> getChildMenuItemsForParentMenuItem(Long menuItemId);
+
+	public boolean checkIfDuplicateInputItemName(String predefInputItemName,
+			Long predefInputId);
+
+	public boolean checkIfDuplicateInputItemCode(String predefInputItemCode,
+			Long predefInputId);
+
+	public boolean checkIfDuplicateInputItemOrder(Integer predefInputItemOrder,
+			Long predefInputId);
+
+	boolean checkIfDuplicatePredefInputName(String predefInputName,
+			Long predefInputId);
+
+	boolean checkIfDuplicateMenuName(String menuItemName, Long menuItemId);
+
+	boolean checkIfDuplicateKeywordName(String keywordName, Long keywordId);
+
+	boolean checkIfDuplicateKeywordCode(String keywordCode, Long keywordId);
 }
diff --git a/src/metomeui/dao/UssdMenuDaoImplementation.java b/src/metomeui/dao/UssdMenuDaoImplementation.java
index 8cc6fff..8aa746c 100644
--- a/src/metomeui/dao/UssdMenuDaoImplementation.java
+++ b/src/metomeui/dao/UssdMenuDaoImplementation.java
@@ -1,170 +1,740 @@
 package metomeui.dao;
 
+import java.util.ArrayList;
 import java.util.List;
 
 import metomeui.model.UssdKeywordStep;
 import metomeui.model.UssdMenuItem;
 import metomeui.model.UssdPredefInput;
 import metomeui.model.UssdPredefInputItem;
-import metomeui.model.UssdRequest;
 import metomeui.model.UssdTransactionKeyword;
 
+import org.apache.log4j.Logger;
+import org.hibernate.Query;
 import org.hibernate.Session;
-import org.hibernate.SessionFactory;
-import org.springframework.beans.factory.annotation.Autowired;
+import org.hibernate.Transaction;
 import org.springframework.stereotype.Repository;
+import org.springframework.transaction.annotation.Transactional;
 
 /**
- * This is the implementation class of UssdDao interface.
+ * This is the implementation class of UssdMenuDao interface.
  * 
- * @Repository("ussdDao") declares that the annotated class is a "DAO".
+ * @Repository("ussdMenuDao") declares that the annotated class is a "DAO".
  * @Autowired is being used to make the SessionFactory instance available
- *            automatically by spring. Now, define the methods declared in
- *            UssdDao interface using hibernate.
+ *            automatically by spring.
  */
 
 @Repository("ussdMenuDao")
+@Transactional
 public class UssdMenuDaoImplementation implements UssdMenuDao {
 
-	@Autowired
-	private SessionFactory sessionFactory;
+	private static Logger logger = Logger
+			.getLogger(SystemSettingsDaoImplementation.class);
 
-	// To save the new predefined input items
-	public void addUssdPredefInputItem(UssdPredefInputItem ussdPredefInputItem) {
-		sessionFactory.getCurrentSession().saveOrUpdate(ussdPredefInputItem);
+	public Session currentSession() {
+		return HibernateUtil.getSessionFactory().getCurrentSession();
 	}
 
-	// To get list of all predefined input items
-	@SuppressWarnings("unchecked")
-	public List<UssdPredefInputItem> listUssdPredefInputItems() {
-		return (List<UssdPredefInputItem>) sessionFactory.getCurrentSession()
-				.createCriteria(UssdPredefInputItem.class).list();
-	}
+	public void addPredefInput(UssdPredefInput predefInput) {
+		try {
 
-	@Override
-	public void removeUssdPredefInputItem(Integer inputItemId) {
-		UssdPredefInputItem ussdPredefInputItem = (UssdPredefInputItem) sessionFactory
-				.getCurrentSession().load(UssdPredefInputItem.class,
-						inputItemId);
-		if (null != ussdPredefInputItem) {
-			sessionFactory.getCurrentSession().delete(ussdPredefInputItem);
+			// Retrieve session from Hibernate
+			currentSession().beginTransaction();
+			currentSession().save(predefInput);
+			currentSession().getTransaction().commit();
+
+		} catch (Exception e) {
+			currentSession().getTransaction().rollback();
+			e.printStackTrace();
 		}
 	}
 
-	public void addUssdPredefInput(UssdPredefInput ussdPredefInput) {
-		sessionFactory.getCurrentSession().saveOrUpdate(ussdPredefInput);
-	}
-
-	// To get list of all predefined inputs
 	@SuppressWarnings("unchecked")
-	public List<UssdPredefInput> listUssdPredefInputs() {
-		return (List<UssdPredefInput>) sessionFactory.getCurrentSession()
+	public List<UssdPredefInput> listPredefInputs() {
+		Transaction transaction = currentSession().beginTransaction();
+		List<UssdPredefInput> listPredefInputs = (List<UssdPredefInput>) currentSession()
 				.createCriteria(UssdPredefInput.class).list();
-	}
-
-	@Override
-	public void removeUssdPredefInput(Integer predefInputId) {
-		UssdPredefInput ussdPredefInput = (UssdPredefInput) sessionFactory
-				.getCurrentSession().load(UssdPredefInput.class, predefInputId);
-		if (null != ussdPredefInput) {
-			sessionFactory.getCurrentSession().delete(ussdPredefInput);
-		}
+		transaction.commit();
+		return listPredefInputs;
 	}
 
 	/**
-	 * Retrieves a single entry
+	 * Edits existing UssdPredefInput
 	 */
-	@Override
-	public UssdPredefInput retrieveSinglePredefInputEntry(Integer predefInputId) {
-		return (UssdPredefInput) sessionFactory.getCurrentSession().get(
-				UssdPredefInput.class, predefInputId);
-	}
+	public void editPredefInput(UssdPredefInput predefInput) {
 
-	/**
-	 * Edits an existing predefined input
-	 */
-	@Override
-	public void updatePredefInput(UssdPredefInput ussdPredefInput,
-			Integer predefInputId) {
-		Session session = sessionFactory.getCurrentSession();
+		UssdPredefInput existingPredefInput = new UssdPredefInput();
+		deleteExistingPredefInputItems(predefInput.getPredefInputId());
+		currentSession().beginTransaction();
+		existingPredefInput = (UssdPredefInput) currentSession().load(
+				UssdPredefInput.class, predefInput.getPredefInputId());
 
-		UssdPredefInput existingUssdPredefInput = (UssdPredefInput) session
-				.get(UssdPredefInput.class, predefInputId);
-
-		// Assign updated values to this entry
-		existingUssdPredefInput.setPredefInputName(ussdPredefInput
-				.getPredefInputName());
-		existingUssdPredefInput.setPredefInputDescription(ussdPredefInput
+		// Assign updated values to this existing PredefInput
+		existingPredefInput
+				.setPredefInputName(predefInput.getPredefInputName());
+		existingPredefInput.setPredefInputDescription(predefInput
 				.getPredefInputDescription());
+		existingPredefInput.setPredefInputItems(predefInput
+				.getPredefInputItems());
+		try {
 
-		// Save updates
-		session.save(existingUssdPredefInput);
+			// Save updates
+			currentSession().update(existingPredefInput);
+			currentSession().getTransaction().commit();
+		} catch (Exception e) {
+			e.printStackTrace();
+			currentSession().getTransaction().rollback();
+		}
 	}
 
 	@SuppressWarnings("unchecked")
-	public List<UssdTransactionKeyword> listUssdTransactionKeywords() {
-		return (List<UssdTransactionKeyword>) sessionFactory
-				.getCurrentSession()
-				.createCriteria(UssdTransactionKeyword.class).list();
+	public List<UssdPredefInputItem> listPredefInputItemsByPredefInputId(
+			long predefInputId) {
+		currentSession().beginTransaction();
+		return (List<UssdPredefInputItem>) currentSession()
+				.createQuery(
+						"from UssdPredefInputItem predefInputItem "
+								+ "where predefInputItem.predefInput.predefInputId = :predefInputId")
+				.setParameter("predefInputId", predefInputId).list();
 	}
 
-	public void addUssdTransactionKeyword(
+	public UssdPredefInput getExistingPredefInput(Long predefInputId) {
+
+		currentSession().beginTransaction();
+
+		// Retrieve existing UssdPredefInput
+		UssdPredefInput existingUssdPredefInput = (UssdPredefInput) currentSession()
+				.load(UssdPredefInput.class, predefInputId);
+		return existingUssdPredefInput;
+	}
+
+	public void deleteExistingPredefInputItems(Long predefInputId) {
+		currentSession().beginTransaction();
+		String hql = "delete from UssdPredefInputItem predefInputItem "
+				+ "where predefInputItem.predefInput.predefInputId = :predefInputId";
+		Query query = currentSession().createQuery(hql).setParameter(
+				"predefInputId", predefInputId);
+		query.executeUpdate();
+
+	}
+
+	@SuppressWarnings("unchecked")
+	public List<UssdTransactionKeyword> listTransactionKeywords() {
+		currentSession().beginTransaction();
+		return (List<UssdTransactionKeyword>) currentSession().createCriteria(
+				UssdTransactionKeyword.class).list();
+	}
+
+	public void addTransactionKeyword(
 			UssdTransactionKeyword ussdTransactionKeyword) {
-		sessionFactory.getCurrentSession().saveOrUpdate(ussdTransactionKeyword);
+		try {
+			currentSession().beginTransaction();
+			currentSession().saveOrUpdate(ussdTransactionKeyword);
+			currentSession().getTransaction().commit();
+		} catch (Exception e) {
+			currentSession().getTransaction().rollback();
+			e.printStackTrace();
+		}
 	}
 
 	@Override
-	public void removeUssdTransactionKeyword(Integer keywordId) {
-		UssdTransactionKeyword ussdTransactionKeyword = (UssdTransactionKeyword) sessionFactory
-				.getCurrentSession().load(UssdTransactionKeyword.class,
-						keywordId);
-		if (null != ussdTransactionKeyword) {
-			sessionFactory.getCurrentSession().delete(ussdTransactionKeyword);
+	public void deleteTransactionKeyword(Long keywordId) {
+		try {
+			currentSession().beginTransaction();
+			UssdTransactionKeyword ussdTransactionKeyword = (UssdTransactionKeyword) currentSession()
+					.get(UssdTransactionKeyword.class, keywordId);
+			if (null != ussdTransactionKeyword) {
+				currentSession().delete(ussdTransactionKeyword);
+				currentSession().getTransaction().commit();
+			}
+		} catch (RuntimeException e) {
+			currentSession().getTransaction().rollback();
+			throw e;
 		}
 	}
 
 	@SuppressWarnings("unchecked")
-	public List<UssdKeywordStep> listUssdKeywordSteps() {
-		return (List<UssdKeywordStep>) sessionFactory.getCurrentSession()
-				.createCriteria(UssdKeywordStep.class).list();
+	public List<UssdKeywordStep> listKeywordStepByKeywordId(long keywordId) {
+		currentSession().beginTransaction();
+		return (List<UssdKeywordStep>) currentSession()
+				.createQuery(
+						"from UssdKeywordStep keywordStep "
+								+ "where keywordStep.transactionKeyword.keywordId = :keywordId")
+				.setParameter("keywordId", keywordId).list();
 	}
 
-	public void addUssdKeywordStep(UssdKeywordStep ussdKeywordStep) {
-		sessionFactory.getCurrentSession().saveOrUpdate(ussdKeywordStep);
+	/**
+	 * Edits existing Ussd Transaction Keyword
+	 */
+	public void editTransactionKeyword(UssdTransactionKeyword transactionKeyword) {
+		logger.debug("Editing existing Ussd Transaction Keyword");
+		currentSession().beginTransaction();
+		UssdTransactionKeyword existingTransactionKeyword = (UssdTransactionKeyword) currentSession()
+				.load(UssdTransactionKeyword.class,
+						transactionKeyword.getKeywordId());
+
+		if (null != existingTransactionKeyword) {
+
+			// Assign updated values to this existing Transaction Keyword
+			existingTransactionKeyword.setKeywordName(transactionKeyword
+					.getKeywordName());
+			existingTransactionKeyword.setKeywordDescription(transactionKeyword
+					.getKeywordDescription());
+			existingTransactionKeyword.setKeywordCode(transactionKeyword
+					.getKeywordCode());
+			existingTransactionKeyword.setKeywordStepsCount(transactionKeyword
+					.getKeywordStepsCount());
+			existingTransactionKeyword.setKeywordEnabledFlag(transactionKeyword
+					.getKeywordEnabledFlag());
+			try {
+
+				// Save updates
+				currentSession().update(existingTransactionKeyword);
+				currentSession().getTransaction().commit();
+			} catch (Exception e) {
+				currentSession().getTransaction().rollback();
+				e.printStackTrace();
+			}
+		}
+	}
+
+	public void deleteExistingKeywordSteps(Long keywordId) {
+		currentSession().beginTransaction();
+		String hql = "delete from UssdKeywordStep keywordStep "
+				+ "where keywordStep.transactionKeyword.keywordId = :keywordId";
+		Query query = currentSession().createQuery(hql).setParameter(
+				"keywordId", keywordId);
+		query.executeUpdate();
+
+	}
+
+	@SuppressWarnings("unchecked")
+	public List<UssdKeywordStep> listKeywordSteps() {
+		currentSession().beginTransaction();
+		return (List<UssdKeywordStep>) currentSession().createCriteria(
+				UssdKeywordStep.class).list();
+	}
+
+	public void addKeywordStep(UssdKeywordStep ussdKeywordStep) {
+		try {
+			currentSession().beginTransaction();
+			currentSession().saveOrUpdate(ussdKeywordStep);
+			currentSession().getTransaction().commit();
+		} catch (Exception e) {
+			currentSession().getTransaction().rollback();
+			e.printStackTrace();
+		}
+	}
+
+	public void deleteExistingKeywordStep(Long keywordStepId) {
+		try {
+			currentSession().beginTransaction();
+			UssdKeywordStep ussdKeywordStep = (UssdKeywordStep) currentSession()
+					.get(UssdKeywordStep.class, keywordStepId);
+
+			if (null != ussdKeywordStep) {
+				currentSession().delete(ussdKeywordStep);
+				currentSession().getTransaction().commit();
+			}
+		} catch (RuntimeException e) {
+			currentSession().getTransaction().rollback();
+			throw e;
+		}
+	}
+
+	/**
+	 * Edits existing Ussd Transaction Keyword Steps
+	 */
+	public void editKeywordStep(UssdKeywordStep keywordStep) {
+
+		// Retrieve session from Hibernate
+		currentSession().beginTransaction();
+		UssdKeywordStep existingKeywordStep = new UssdKeywordStep();
+		if (keywordStep.getKeywordStepId() != null) {
+			existingKeywordStep = (UssdKeywordStep) currentSession().load(
+					UssdKeywordStep.class, keywordStep.getKeywordStepId());
+
+			// Assign updated values to this existing Keyword Step
+			existingKeywordStep.setStepMenuName(keywordStep.getStepMenuName());
+			existingKeywordStep.setStepMenuNumber(keywordStep
+					.getStepMenuNumber());
+			existingKeywordStep
+					.setKeywordStepId(keywordStep.getKeywordStepId());
+			existingKeywordStep.setUseFixedValueFlag(keywordStep
+					.getUseFixedValueFlag());
+			existingKeywordStep.setFixedValue(keywordStep.getFixedValue());
+			existingKeywordStep.setHasPredefInputFlag(keywordStep
+					.getHasPredefInputFlag());
+			existingKeywordStep.setIsFirstStepFlag(keywordStep
+					.getIsFirstStepFlag());
+			existingKeywordStep.setIsLastStepFlag(keywordStep
+					.getIsLastStepFlag());
+			try {
+
+				// Save updates
+				currentSession().update(existingKeywordStep);
+				currentSession().getTransaction().commit();
+			} catch (Exception e) {
+				currentSession().getTransaction().rollback();
+				e.printStackTrace();
+			}
+		} else {
+
+			try {
+				currentSession().saveOrUpdate(keywordStep);
+				currentSession().getTransaction().commit();
+			} catch (Exception e) {
+				currentSession().getTransaction().rollback();
+				e.printStackTrace();
+			}
+		}
+
+	}
+
+	@SuppressWarnings("unchecked")
+	public List<UssdMenuItem> listMenuItems() {
+		currentSession().beginTransaction();
+		return (List<UssdMenuItem>) currentSession().createCriteria(
+				UssdMenuItem.class).list();
+	}
+
+	public void addMenuItem(UssdMenuItem ussdMenuItem) {
+		try {
+			currentSession().beginTransaction();
+			currentSession().save(ussdMenuItem);
+			currentSession().getTransaction().commit();
+		} catch (Exception e) {
+			currentSession().getTransaction().rollback();
+			e.printStackTrace();
+		}
+	}
+
+	public void deleteMenuItem(Long menuItemId) {
+		try {
+			currentSession().beginTransaction();
+
+			UssdMenuItem ussdMenuItem = (UssdMenuItem) currentSession().get(
+					UssdMenuItem.class, menuItemId);
+			if (null != ussdMenuItem) {
+				currentSession().delete(ussdMenuItem);
+				currentSession().getTransaction().commit();
+			}
+		} catch (RuntimeException e) {
+			currentSession().getTransaction().rollback();
+			throw e;
+		}
+	}
+
+	/**
+	 * Edits existing Ussd Menu Item
+	 */
+	public void editMenuItem(UssdMenuItem menuItem) {
+
+		UssdMenuItem existingMenuItem = new UssdMenuItem();
+		currentSession().beginTransaction();
+		existingMenuItem = (UssdMenuItem) currentSession().load(
+				UssdMenuItem.class, menuItem.getMenuItemId());
+		if (existingMenuItem != null) {
+
+			// Assign updated values to this existing MenuItem
+			existingMenuItem.setMenuItemName(menuItem.getMenuItemName());
+			existingMenuItem.setMenuItemOrder(menuItem.getMenuItemOrder());
+			existingMenuItem.setRootMenuItem(menuItem.getRootMenuItem());
+			existingMenuItem.setMenuItemKeyword(menuItem.getMenuItemKeyword());
+			existingMenuItem.setMenuItemEnabledFlag(menuItem
+					.getMenuItemEnabledFlag());
+
+			try {
+
+				// Save updates
+				currentSession().merge(existingMenuItem);
+				currentSession().getTransaction().commit();
+			} catch (Exception e) {
+				currentSession().getTransaction().rollback();
+				e.printStackTrace();
+			}
+		}
+	}
+
+	public UssdTransactionKeyword getExistingTransactionKeyword(long keywordId) {
+		currentSession().beginTransaction();
+		UssdTransactionKeyword existingTransactionKeyword = (UssdTransactionKeyword) currentSession()
+				.load(UssdTransactionKeyword.class, keywordId);
+		return existingTransactionKeyword;
+	}
+
+	public UssdKeywordStep getExistingKeywordStep(long keywordStepId) {
+		currentSession().beginTransaction();
+		UssdKeywordStep existingKeywordStep = (UssdKeywordStep) currentSession()
+				.load(UssdKeywordStep.class, keywordStepId);
+		return existingKeywordStep;
+	}
+
+	public UssdMenuItem getExistingMenuItem(long menuItemId) {
+		currentSession().beginTransaction();
+		UssdMenuItem existingMenuItem = (UssdMenuItem) currentSession().load(
+				UssdMenuItem.class, menuItemId);
+		return existingMenuItem;
 	}
 
 	@Override
-	public void removeUssdKeywordStep(Integer keywordStepId) {
-		UssdKeywordStep ussdKeywordStep = (UssdKeywordStep) sessionFactory
-				.getCurrentSession().load(UssdKeywordStep.class, keywordStepId);
-		if (null != ussdKeywordStep) {
-			sessionFactory.getCurrentSession().delete(ussdKeywordStep);
+	public void activateExistingMenuItem(Long menuItemId) {
+		Integer onSwitch = 1;
+		currentSession().beginTransaction();
+		UssdMenuItem existingMenuItem = (UssdMenuItem) currentSession().load(
+				UssdMenuItem.class, menuItemId);
+		existingMenuItem.setMenuItemEnabledFlag(onSwitch);
+		try {
+			currentSession().update(existingMenuItem);
+			currentSession().getTransaction().commit();
+		} catch (Exception e) {
+			currentSession().getTransaction().rollback();
+			e.printStackTrace();
+		}
+	}
+
+	@Override
+	public void deactivateExistingMenuItem(Long menuItemId) {
+		Integer offSwitch = 0;
+		currentSession().beginTransaction();
+		UssdMenuItem existingMenuItem = (UssdMenuItem) currentSession().load(
+				UssdMenuItem.class, menuItemId);
+		existingMenuItem.setMenuItemEnabledFlag(offSwitch);
+		try {
+			currentSession().update(existingMenuItem);
+			currentSession().getTransaction().commit();
+		} catch (Exception e) {
+			currentSession().getTransaction().rollback();
+			e.printStackTrace();
+		}
+	}
+
+	@Override
+	public void activateExistingPredefInputItem(Long predefInputItemId) {
+		Integer onSwitch = 1;
+		currentSession().beginTransaction();
+
+		UssdPredefInputItem existingPredefInputItem = (UssdPredefInputItem) currentSession()
+				.load(UssdPredefInputItem.class, predefInputItemId);
+		existingPredefInputItem.setPredefInputItemEnabledFlag(onSwitch);
+		try {
+			currentSession().update(existingPredefInputItem);
+			currentSession().getTransaction().commit();
+		} catch (Exception e) {
+			currentSession().getTransaction().rollback();
+			e.printStackTrace();
+		}
+	}
+
+	@Override
+	public void deactivateExistingPredefInputItem(Long predefInputItemId) {
+		Integer offSwitch = 0;
+		currentSession().beginTransaction();
+		UssdPredefInputItem existingPredefInputItem = (UssdPredefInputItem) currentSession()
+				.load(UssdPredefInputItem.class, predefInputItemId);
+		existingPredefInputItem.setPredefInputItemEnabledFlag(offSwitch);
+		try {
+			currentSession().update(existingPredefInputItem);
+			currentSession().getTransaction().commit();
+		} catch (Exception e) {
+			currentSession().getTransaction().rollback();
+			e.printStackTrace();
+		}
+	}
+
+	@Override
+	public void deactivateExistingKeyword(Long keywordId) {
+		Integer offSwitch = 0;
+		currentSession().beginTransaction();
+
+		UssdTransactionKeyword existingTransactionKeyword = (UssdTransactionKeyword) currentSession()
+				.load(UssdTransactionKeyword.class, keywordId);
+		existingTransactionKeyword.setKeywordEnabledFlag(offSwitch);
+		try {
+			currentSession().update(existingTransactionKeyword);
+			currentSession().getTransaction().commit();
+		} catch (Exception e) {
+			currentSession().getTransaction().rollback();
+			e.printStackTrace();
+		}
+
+	}
+
+	@Override
+	public void activateExistingKeyword(Long keywordId) {
+		Integer onSwitch = 1;
+		currentSession().beginTransaction();
+
+		UssdTransactionKeyword existingTransactionKeyword = (UssdTransactionKeyword) currentSession()
+				.load(UssdTransactionKeyword.class, keywordId);
+		existingTransactionKeyword.setKeywordEnabledFlag(onSwitch);
+		try {
+			currentSession().update(existingTransactionKeyword);
+			currentSession().getTransaction().commit();
+		} catch (Exception e) {
+			currentSession().getTransaction().rollback();
+			e.printStackTrace();
+		}
+	}
+
+	@Override
+	public void deleteExistingPredefInput(Long predefInputId) {
+
+		try {
+			currentSession().beginTransaction();
+
+			@SuppressWarnings("unchecked")
+			List<UssdKeywordStep> keywordStepsList = (List<UssdKeywordStep>) currentSession()
+					.createQuery(
+							"from UssdKeywordStep keywordStep "
+									+ "where keywordStep.predefInput.predefInputId = :predefInputId")
+					.setParameter("predefInputId", predefInputId).list();
+
+			if (!(keywordStepsList.isEmpty())) {
+				for (UssdKeywordStep ussdKeywordStep : keywordStepsList) {
+					currentSession().delete(ussdKeywordStep);
+				}
+			}
+
+			UssdPredefInput ussdPredefInput = (UssdPredefInput) currentSession()
+					.get(UssdPredefInput.class, predefInputId);
+			if (null != ussdPredefInput) {
+				currentSession().delete(ussdPredefInput);
+				currentSession().getTransaction().commit();
+			}
+		} catch (RuntimeException e) {
+			currentSession().getTransaction().rollback();
+			throw e;
+		}
+
+	}
+
+	@Override
+	public void deleteExistingPredefInputItem(Long inputItemId) {
+
+		try {
+			currentSession().beginTransaction();
+			UssdPredefInputItem ussdPredefInputItem = (UssdPredefInputItem) currentSession()
+					.get(UssdPredefInputItem.class, inputItemId);
+			if (null != ussdPredefInputItem) {
+				currentSession().delete(ussdPredefInputItem);
+				currentSession().getTransaction().commit();
+			}
+		} catch (RuntimeException e) {
+			currentSession().getTransaction().rollback();
+			throw e;
+		}
+
+	}
+
+	@Override
+	public UssdPredefInputItem getExistingPredefInputItem(Long predefInputItemId) {
+		currentSession().beginTransaction();
+
+		// Retrieve existing UssdPredefInputItem
+		UssdPredefInputItem existingUssdPredefInputItem = (UssdPredefInputItem) currentSession()
+				.load(UssdPredefInputItem.class, predefInputItemId);
+		return existingUssdPredefInputItem;
+
+	}
+
+	@Override
+	public List<UssdKeywordStep> getKeywordsLinkedToThisPredefInput(
+			Long predefInputId) {
+		@SuppressWarnings("unchecked")
+		List<UssdKeywordStep> keywordStepsList = (List<UssdKeywordStep>) currentSession()
+				.createQuery(
+						"from UssdKeywordStep keywordStep "
+								+ "where keywordStep.predefInput.predefInputId = :predefInputId")
+				.setParameter("predefInputId", predefInputId).list();
+
+		if (!(keywordStepsList.isEmpty())) {
+			return keywordStepsList;
+		} else {
+			return new ArrayList<UssdKeywordStep>();
+		}
+	}
+
+	@Override
+	public List<UssdMenuItem> getChildMenuItemsForParentMenuItem(Long menuItemId) {
+		@SuppressWarnings("unchecked")
+		List<UssdMenuItem> childMenuItemsList = (List<UssdMenuItem>) currentSession()
+				.createQuery(
+						"from UssdMenuItem menuItem "
+								+ "where menuItem.rootMenuItem.menuItemId = :menuItemId")
+				.setParameter("menuItemId", menuItemId).list();
+
+		if (!(childMenuItemsList.isEmpty())) {
+			return childMenuItemsList;
+		} else {
+			return new ArrayList<UssdMenuItem>();
+		}
+	}
+
+	/**
+	 * Validation methods
+	 */
+	@SuppressWarnings("unchecked")
+	@Override
+	public boolean checkIfDuplicateStepMenuNumber(Integer stepMenuNumber,
+			Long keywordId) {
+		currentSession().beginTransaction();
+		List<UssdKeywordStep> keywordSteps = (List<UssdKeywordStep>) currentSession()
+				.createQuery(
+						"from UssdKeywordStep keywordStep "
+								+ "where keywordStep.transactionKeyword.keywordId = :keywordId and keywordStep.stepMenuNumber = :stepMenuNumber")
+				.setParameter("keywordId", keywordId)
+				.setParameter("stepMenuNumber", stepMenuNumber).list();
+		if (keywordSteps.isEmpty()) {
+			return false;
+		} else {
+			return true;
 		}
 	}
 
 	@SuppressWarnings("unchecked")
-	public List<UssdMenuItem> listUssdMenuItems() {
-		return (List<UssdMenuItem>) sessionFactory.getCurrentSession()
-				.createCriteria(UssdMenuItem.class).list();
-	}
-
-	public void addUssdMenuItem(UssdMenuItem ussdMenuItem) {
-		sessionFactory.getCurrentSession().saveOrUpdate(ussdMenuItem);
-	}
-
 	@Override
-	public void removeUssdMenuItem(Integer menuItemId) {
-		UssdMenuItem ussdMenuItem = (UssdMenuItem) sessionFactory
-				.getCurrentSession().load(UssdMenuItem.class, menuItemId);
-		if (null != ussdMenuItem) {
-			sessionFactory.getCurrentSession().delete(ussdMenuItem);
+	public boolean checkIfDuplicateStepMenuName(String stepMenuName,
+			Long keywordId) {
+		currentSession().beginTransaction();
+		List<UssdKeywordStep> keywordSteps = (List<UssdKeywordStep>) currentSession()
+				.createQuery(
+						"from UssdKeywordStep keywordStep "
+								+ "where keywordStep.transactionKeyword.keywordId = :keywordId and keywordStep.stepMenuName = :stepMenuName")
+				.setParameter("keywordId", keywordId)
+				.setParameter("stepMenuName", stepMenuName).list();
+		if (keywordSteps.isEmpty()) {
+			return false;
+		} else {
+			return true;
 		}
 	}
 
 	@SuppressWarnings("unchecked")
-	public List<UssdRequest> listUssdRequests() {
-		return (List<UssdRequest>) sessionFactory.getCurrentSession()
-				.createCriteria(UssdRequest.class).list();
+	@Override
+	public boolean checkIfDuplicateInputItemName(String predefInputItemName,
+			Long predefInputId) {
+		currentSession().beginTransaction();
+		List<UssdPredefInputItem> predefInputItems = (List<UssdPredefInputItem>) currentSession()
+				.createQuery(
+						"from UssdPredefInputItem predefInputItem "
+								+ "where predefInputItem.predefInput.predefInputId = :predefInputId and predefInputItem.predefInputItemName = :predefInputItemName")
+				.setParameter("predefInputId", predefInputId)
+				.setParameter("predefInputItemName", predefInputItemName)
+				.list();
+		if (predefInputItems.isEmpty()) {
+			return false;
+		} else {
+			return true;
+		}
 	}
 
+	@SuppressWarnings("unchecked")
+	@Override
+	public boolean checkIfDuplicateInputItemCode(String predefInputItemCode,
+			Long predefInputId) {
+		currentSession().beginTransaction();
+		List<UssdPredefInputItem> predefInputItems = (List<UssdPredefInputItem>) currentSession()
+				.createQuery(
+						"from UssdPredefInputItem predefInputItem "
+								+ "where predefInputItem.predefInput.predefInputId = :predefInputId and predefInputItem.predefInputItemCode = :predefInputItemCode")
+				.setParameter("predefInputId", predefInputId)
+				.setParameter("predefInputItemCode", predefInputItemCode)
+				.list();
+		if (predefInputItems.isEmpty()) {
+			return false;
+		} else {
+			return true;
+		}
+	}
+
+	@SuppressWarnings("unchecked")
+	@Override
+	public boolean checkIfDuplicateInputItemOrder(Integer predefInputItemOrder,
+			Long predefInputId) {
+		currentSession().beginTransaction();
+		List<UssdPredefInputItem> predefInputItems = (List<UssdPredefInputItem>) currentSession()
+				.createQuery(
+						"from UssdPredefInputItem predefInputItem "
+								+ "where predefInputItem.predefInput.predefInputId = :predefInputId and predefInputItem.predefInputItemOrder = :predefInputItemOrder")
+				.setParameter("predefInputId", predefInputId)
+				.setParameter("predefInputItemOrder", predefInputItemOrder)
+				.list();
+		if (predefInputItems.isEmpty()) {
+			return false;
+		} else {
+			return true;
+		}
+	}
+
+	@SuppressWarnings("unchecked")
+	@Override
+	public boolean checkIfDuplicatePredefInputName(String predefInputName,
+			Long predefInputId) {
+		currentSession().beginTransaction();
+		List<UssdPredefInput> predefInputs = (List<UssdPredefInput>) currentSession()
+				.createQuery(
+						"from UssdPredefInput predefInput "
+								+ "where predefInput.predefInputId = :predefInputId and predefInput.predefInputName = :predefInputName")
+				.setParameter("predefInputId", predefInputId)
+				.setParameter("predefInputName", predefInputName).list();
+		if (predefInputs.isEmpty()) {
+			return false;
+		} else {
+			return true;
+		}
+	}
+
+	@SuppressWarnings("unchecked")
+	@Override
+	public boolean checkIfDuplicateMenuName(String menuItemName, Long menuItemId) {
+		currentSession().beginTransaction();
+		List<UssdMenuItem> menuItems = (List<UssdMenuItem>) currentSession()
+				.createQuery(
+						"from UssdMenuItem menuItem "
+								+ "where menuItem.menuItemId != :menuItemId and menuItem.menuItemName = :menuItemName")
+				.setParameter("menuItemId", menuItemId)
+				.setParameter("menuItemName", menuItemName).list();
+		if (menuItems.isEmpty()) {
+			return false;
+		} else {
+			return true;
+		}
+	}
+
+	@SuppressWarnings("unchecked")
+	@Override
+	public boolean checkIfDuplicateKeywordName(String keywordName,
+			Long keywordId) {
+		currentSession().beginTransaction();
+		List<UssdTransactionKeyword> transactionKeywords = (List<UssdTransactionKeyword>) currentSession()
+				.createQuery(
+						"from UssdTransactionKeyword transactionKeyword "
+								+ "where transactionKeyword.keywordId = :keywordId and transactionKeyword.keywordName = :keywordName")
+				.setParameter("keywordId", keywordId)
+				.setParameter("keywordName", keywordName).list();
+		if (transactionKeywords.isEmpty()) {
+			return false;
+		} else {
+			return true;
+		}
+	}
+
+	@SuppressWarnings("unchecked")
+	@Override
+	public boolean checkIfDuplicateKeywordCode(String keywordCode,
+			Long keywordId) {
+		currentSession().beginTransaction();
+		List<UssdTransactionKeyword> transactionKeywords = (List<UssdTransactionKeyword>) currentSession()
+				.createQuery(
+						"from UssdTransactionKeyword transactionKeyword "
+								+ "where transactionKeyword.keywordId = :keywordId and transactionKeyword.keywordCode = :keywordCode")
+				.setParameter("keywordId", keywordId)
+				.setParameter("keywordCode", keywordCode).list();
+		if (transactionKeywords.isEmpty()) {
+			return false;
+		} else {
+			return true;
+		}
+	}
 }
\ No newline at end of file
diff --git a/src/metomeui/model/AccountType.java b/src/metomeui/model/AccountType.java
new file mode 100644
index 0000000..4d22779
--- /dev/null
+++ b/src/metomeui/model/AccountType.java
@@ -0,0 +1,99 @@
+package metomeui.model;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.Id;
+import javax.persistence.Table;
+import org.hibernate.validator.constraints.NotEmpty;
+
+@Entity
+@Table(name = "account_types")
+public class AccountType {
+
+	@Id
+	@GeneratedValue
+	@Column(name = "account_type_id")
+	private long accountTypeId;
+
+	@NotEmpty
+	@Column(name = "account_type_code", nullable = false, length = 20)
+	private String accountTypeCode;
+
+	@NotEmpty
+	@Column(name = "account_type_name", nullable = false, length = 50)
+	private String accountTypeName;
+
+	@NotEmpty
+	@Column(name = "account_type_bitmap", nullable = false, length = 11)
+	private Integer accountTypeBitMap;
+
+	@Column(name = "sys_account_type_flg", nullable = true, length = 11)
+	private Integer sysAccountTypeFlag;
+
+	@Column(name = "max_book_balance", nullable = false)
+	private Double accountMaximumBookBalance;
+
+	@Column(name = "enabled_flg", nullable = false, length = 11)
+	private Integer enabledFlag;
+
+	public AccountType() {
+
+	}
+
+	public long getAccountTypeId() {
+		return accountTypeId;
+	}
+
+	public void setAccountTypeId(long accountTypeId) {
+		this.accountTypeId = accountTypeId;
+	}
+
+	public String getAccountTypeCode() {
+		return accountTypeCode;
+	}
+
+	public void setAccountTypeCode(String accountTypeCode) {
+		this.accountTypeCode = accountTypeCode;
+	}
+
+	public String getAccountTypeName() {
+		return accountTypeName;
+	}
+
+	public void setAccountTypeName(String accountTypeName) {
+		this.accountTypeName = accountTypeName;
+	}
+
+	public Integer getAccountTypeBitMap() {
+		return accountTypeBitMap;
+	}
+
+	public void setAccountTypeBitMap(Integer accountTypeBitMap) {
+		this.accountTypeBitMap = accountTypeBitMap;
+	}
+
+	public Integer getSysAccountTypeFlag() {
+		return sysAccountTypeFlag;
+	}
+
+	public void setSysAccountTypeFlag(Integer sysAccountTypeFlag) {
+		this.sysAccountTypeFlag = sysAccountTypeFlag;
+	}
+
+	public Double getAccountMaximumBookBalance() {
+		return accountMaximumBookBalance;
+	}
+
+	public void setAccountMaximumBookBalance(Double accountMaximumBookBalance) {
+		this.accountMaximumBookBalance = accountMaximumBookBalance;
+	}
+
+	public Integer getEnabledFlag() {
+		return enabledFlag;
+	}
+
+	public void setEnabledFlag(Integer enabledFlag) {
+		this.enabledFlag = enabledFlag;
+	}
+}
diff --git a/src/metomeui/model/Language.java b/src/metomeui/model/Language.java
new file mode 100644
index 0000000..8e2df36
--- /dev/null
+++ b/src/metomeui/model/Language.java
@@ -0,0 +1,54 @@
+package metomeui.model;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.Id;
+import javax.persistence.Table;
+
+import org.hibernate.validator.constraints.NotEmpty;
+
+@Entity
+@Table(name = "languages")
+public class Language {
+
+	@Id
+	@GeneratedValue
+	@Column(name = "language_id")
+	private long languageId;
+	
+	@NotEmpty
+	@Column(name = "language_name", nullable= false, length= 20, unique=true, columnDefinition = "varchar(20) default null")
+	private String languageName;
+	
+	@Column(name = "is_default", nullable=false, length= 11, columnDefinition = "int(11) default '0'")
+	private Integer isDefault=0;
+	
+	public Language(){
+		
+	}
+
+	public long getLanguageId() {
+		return languageId;
+	}
+
+	public void setLanguageId(long languageId) {
+		this.languageId = languageId;
+	}
+
+	public String getLanguageName() {
+		return languageName;
+	}
+
+	public void setLanguageName(String languageName) {
+		this.languageName = languageName;
+	}
+
+	public Integer getIsDefault() {
+		return isDefault;
+	}
+
+	public void setIsDefault(Integer isDefault) {
+		this.isDefault = isDefault;
+	}
+}
diff --git a/src/metomeui/model/Login.java b/src/metomeui/model/Login.java
new file mode 100644
index 0000000..270acd3
--- /dev/null
+++ b/src/metomeui/model/Login.java
@@ -0,0 +1,61 @@
+package metomeui.model;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.Id;
+import javax.persistence.Table;
+
+import org.hibernate.validator.constraints.NotEmpty;
+
+@Entity
+@Table(name = "users")
+public class Login {
+
+	@Id
+	@GeneratedValue
+	@Column(name = "user_id")
+	private Integer userId;
+
+	@NotEmpty
+	@Column(name = "user_name", nullable = false, length = 20)
+	public String userName;
+
+	@NotEmpty
+	@Column(name = "password", nullable = false, length = 20)
+	public String password;
+
+	public Login() {
+
+	}
+
+	public void setUserName(String userName) {
+		this.userName = userName;
+	}
+
+	public String getUserName() {
+		return userName;
+	}
+
+	public void setPassword(String password) {
+		this.password = password;
+	}
+
+	public String getPassword() {
+		return password;
+	}
+
+	public void clearFields() {
+		this.userName = "";
+		this.password = "";
+
+	}
+
+	public Integer getUserId() {
+		return userId;
+	}
+
+	public void setUserId(Integer userId) {
+		this.userId = userId;
+	}
+}
diff --git a/src/metomeui/model/MemoGroup.java b/src/metomeui/model/MemoGroup.java
new file mode 100644
index 0000000..8bbb140
--- /dev/null
+++ b/src/metomeui/model/MemoGroup.java
@@ -0,0 +1,79 @@
+package metomeui.model;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.Id;
+import javax.persistence.Table;
+
+import org.hibernate.validator.constraints.NotEmpty;
+
+@Entity
+@Table(name = "memo_groups")
+public class MemoGroup {
+	
+	@Id
+	@GeneratedValue
+	@Column(name = "memo_group_id")
+	private long memoGroupId;
+
+	@NotEmpty
+	@Column(name = "memo_group_code", nullable = false, length = 20)
+	private String memoGroupCode;
+
+	@NotEmpty
+	@Column(name = "memo_group_name", nullable = false, length = 50)
+	private String memoGroupName;
+
+	@NotEmpty
+	@Column(name = "memo_group_desc", nullable = false, length = 11)
+	private String memoGroupDescription;
+	
+	public MemoGroup(){
+		
+	}
+
+	public long getMemoGroupId() {
+		return memoGroupId;
+	}
+
+	public void setMemoGroupId(long memoGroupId) {
+		this.memoGroupId = memoGroupId;
+	}
+
+	public String getMemoGroupCode() {
+		return memoGroupCode;
+	}
+
+	public void setMemoGroupCode(String memoGroupCode) {
+		this.memoGroupCode = memoGroupCode;
+	}
+
+	public String getMemoGroupName() {
+		return memoGroupName;
+	}
+
+	public void setMemoGroupName(String memoGroupName) {
+		this.memoGroupName = memoGroupName;
+	}
+
+	public String getMemoGroupDescription() {
+		return memoGroupDescription;
+	}
+
+	public void setMemoGroupDescription(String memoGroupDescription) {
+		this.memoGroupDescription = memoGroupDescription;
+	}
+
+	public Integer getEnabledFlag() {
+		return enabledFlag;
+	}
+
+	public void setEnabledFlag(Integer enabledFlag) {
+		this.enabledFlag = enabledFlag;
+	}
+
+	@Column(name = "enabled_flg", nullable = false, length = 11)
+	private Integer enabledFlag;
+
+}
diff --git a/src/metomeui/model/Message.java b/src/metomeui/model/Message.java
new file mode 100644
index 0000000..db6fcb0
--- /dev/null
+++ b/src/metomeui/model/Message.java
@@ -0,0 +1,86 @@
+package metomeui.model;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.Id;
+import javax.persistence.Table;
+
+@Entity
+@Table(name = "messages")
+public class Message {
+
+
+	@Id
+	@GeneratedValue
+	@Column(name = "message_id")
+	private long messageId;
+	
+	@Column(name = "language_id", nullable= true, length= 11)
+	private Integer languageId;
+	
+	@Column(name = "message_code", nullable=false, length= 11)
+	private Integer messageCode;
+	
+	@Column(name = "message_text", nullable=false, length= 500)
+	private String messageText;
+	
+	@Column(name = "message_desc", nullable=false, length= 500)
+	private String messageDesc;
+	
+	public Message(){
+		
+	}
+
+	public long getMessageId() {
+		return messageId;
+	}
+
+	public void setMessageId(long messageId) {
+		this.messageId = messageId;
+	}
+
+	public Integer getLanguageId() {
+		return languageId;
+	}
+
+	public void setLanguageId(Integer languageId) {
+		this.languageId = languageId;
+	}
+
+	public Integer getMessageCode() {
+		return messageCode;
+	}
+
+	public void setMessageCode(Integer messageCode) {
+		this.messageCode = messageCode;
+	}
+
+	public String getMessageText() {
+		return messageText;
+	}
+
+	public void setMessageText(String messageText) {
+		this.messageText = messageText;
+	}
+
+	public String getMessageDesc() {
+		return messageDesc;
+	}
+
+	public void setMessageDesc(String messageDesc) {
+		this.messageDesc = messageDesc;
+	}
+
+	
+	
+	/*public String toString() {
+		StringBuffer buffer = new StringBuffer();
+		buffer.append("Message Id: " + messageId + ";");
+		buffer.append("Language Id: " + languageId + ";");
+		buffer.append("Message Code: " + messageCode + ";");
+		buffer.append("Message Text: " + messageText + ";");
+		buffer.append("Message Description: " + messageDesc);
+		return buffer.toString();
+	}*/
+}
diff --git a/src/metomeui/model/Messages.java b/src/metomeui/model/Messages.java
deleted file mode 100644
index f9da9c5..0000000
--- a/src/metomeui/model/Messages.java
+++ /dev/null
@@ -1,62 +0,0 @@
-package metomeui.model;
-
-import java.io.Serializable;
-
-public class Messages implements Serializable {
-
-	private int messageId;
-	private int languageId;
-	private int messageCode;
-	private String messageText;
-	private String messageDesc;
-
-	public int getMessageId() {
-		return messageId;
-	}
-
-	public void setMessageId(int messageId) {
-		this.messageId = messageId;
-	}
-	
-	public int getLanguageId() {
-		return languageId;
-	}
-
-	public void setLanguageId(int languageId) {
-		this.languageId = languageId;
-	}
-
-	public int getMessageCode() {
-		return messageCode;
-	}
-
-	public void setMessageCode(int messageCode) {
-		this.messageCode = messageCode;
-	}
-	
-	public String getMessageText() {
-		return messageText;
-	}
-
-	public void setMessageText(String messageText) {
-		this.messageText = messageText;
-	}
-	
-	public String getMessageDesc() {
-		return messageDesc;
-	}
-
-	public void setMessageDesc(String messageDesc) {
-		this.messageDesc = messageDesc;
-	}
-	
-	public String toString() {
-		StringBuffer buffer = new StringBuffer();
-		buffer.append("Message Id: " + messageId + ";");
-		buffer.append("Language Id: " + languageId + ";");
-		buffer.append("Message Code: " + messageCode + ";");
-		buffer.append("Message Text: " + messageText + ";");
-		buffer.append("Message Description: " + messageDesc);
-		return buffer.toString();
-	}
-}
diff --git a/src/metomeui/model/MsisdnSettings.java b/src/metomeui/model/MsisdnSettings.java
index 3885081..cfdf408 100644
--- a/src/metomeui/model/MsisdnSettings.java
+++ b/src/metomeui/model/MsisdnSettings.java
@@ -3,9 +3,11 @@
 import javax.validation.constraints.NotNull;
 
 import org.hibernate.validator.constraints.NotEmpty;
-import org.hibernate.validator.constraints.Range;
+
 
 public class MsisdnSettings {
+	
+	
 	@NotNull(message="Country code is required")
 	private Integer countryCode;
 	@NotEmpty(message="Country Domain is required")
diff --git a/src/metomeui/model/NdcList.java b/src/metomeui/model/NdcList.java
new file mode 100644
index 0000000..9369d0d
--- /dev/null
+++ b/src/metomeui/model/NdcList.java
@@ -0,0 +1,69 @@
+package metomeui.model;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.Id;
+import javax.persistence.SecondaryTable;
+import javax.persistence.Table;
+
+import org.hibernate.validator.constraints.NotEmpty;
+
+@Entity
+@Table(name = "ndc_list_p2p")
+@SecondaryTable(name = "ndc_list_offnet")
+public class NdcList {
+
+	@Id
+	@GeneratedValue
+	@Column(name = "ndc_list_id")
+	private Integer ndcListId;
+	
+	@NotEmpty
+	@Column(name = "ndc", nullable = false, length = 11, unique = true)
+	private Integer ndc;
+	
+	@Column(table="ndc_list_offnet", name = "networkOperator", nullable = false, length = 50)
+	private String networkOperator;
+	
+	@NotEmpty
+	@Column(name = "enabled_flg", nullable = false, length = 11)
+	private Integer enabledFlag;
+	
+	public NdcList(){
+		
+	}
+
+	public Integer getNdcListId() {
+		return ndcListId;
+	}
+
+	public void setNdcListId(Integer ndcListId) {
+		this.ndcListId = ndcListId;
+	}
+
+	public Integer getNdc() {
+		return ndc;
+	}
+
+	public void setNdc(Integer ndc) {
+		this.ndc = ndc;
+	}
+
+	public String getNetworkOperator() {
+		return networkOperator;
+	}
+
+	public void setNetworkOperator(String networkOperator) {
+		this.networkOperator = networkOperator;
+	}
+
+	public Integer getEnabledFlag() {
+		return enabledFlag;
+	}
+
+	public void setEnabledFlag(Integer enabledFlag) {
+		this.enabledFlag = enabledFlag;
+	}
+	
+}
diff --git a/src/metomeui/model/PasswordSettings.java b/src/metomeui/model/PasswordSettings.java
index e551a27..ae80c4f 100644
--- a/src/metomeui/model/PasswordSettings.java
+++ b/src/metomeui/model/PasswordSettings.java
@@ -1,8 +1,6 @@
 package metomeui.model;
 
 import javax.validation.constraints.NotNull;
-import javax.validation.constraints.Size;
-import org.hibernate.validator.constraints.NotEmpty;
 
 public class PasswordSettings {
 
diff --git a/src/metomeui/model/SystemConfiguration.java b/src/metomeui/model/SystemConfiguration.java
new file mode 100644
index 0000000..cbee9f4
--- /dev/null
+++ b/src/metomeui/model/SystemConfiguration.java
@@ -0,0 +1,268 @@
+package metomeui.model;
+
+import javax.validation.constraints.NotNull;
+
+import org.hibernate.validator.constraints.NotEmpty;
+
+public class SystemConfiguration {
+	
+	//@NotEmpty
+    //@Size(min = 1, max = 50)
+	private String name;
+	//@NotNull
+   	private Integer precedence;
+	//@NotNull
+	private Integer minPasswordLength;
+	@NotNull
+	private Integer maxPasswordLength;
+	/*private Boolean enforceMaxPasswordLength;
+	private Boolean enforceMinPasswordLength;*/
+	@NotNull
+	private Integer maxPasswordAge;
+	@NotNull
+	private Integer minPasswordAge;
+	/*private Boolean enforceMaxPasswordAge;
+	private Boolean enforceMinPasswordAge;*/
+	@NotNull
+	private Integer maxFailedLoginCount;
+	@NotNull
+	private Integer failedLoginResetCount;
+	private Boolean enforceLockoutPolicy;
+	private Boolean enforcePasswordComplexityRequirements;
+	private Boolean accountManualUnlock;
+	private Boolean accountUnlock;
+	private Boolean accountTimedUnlock;
+	@NotNull
+	private Integer accountLockDuration;
+	
+	
+	private Boolean failedTransferLock;
+	private Boolean autoCreateTempSub;
+	private String tempRestrictionSettings; 
+	private Integer allowedOperations;
+	@NotEmpty(message="SMS Sender Name/Number is required")
+	private String smsSenderID;
+	private String smsSubscriptionFormat;
+	private String subscriptionMaxDisplayCharacters;
+	private Boolean chargeCollectSetting;
+	private Boolean notifyOnDelayTrans;
+	private String notifyOnDelayMessageID;
+	private Integer notifyOnDelaySeconds;
+	private Boolean maintenanceMode;
+	private String maintenanceModeMessageID;	
+	
+	
+	@NotNull(message="Country code is required")
+	private Integer countryCode;
+	@NotEmpty(message="Country Domain is required")
+	private String countryDomain;
+	@NotEmpty(message="Currency code is required")
+	private String currencyCode; 
+	@NotEmpty(message="Currency ISO Number is required")
+	private String currencyISONumber;
+	@NotNull(message="MSISDN Length is required")
+	private Integer msisdnLength;
+	private Boolean msisdnLeadZero;
+	public String getName() {
+		return name;
+	}
+	public void setName(String name) {
+		this.name = name;
+	}
+	public Integer getPrecedence() {
+		return precedence;
+	}
+	public void setPrecedence(Integer precedence) {
+		this.precedence = precedence;
+	}
+	public Integer getMinPasswordLength() {
+		return minPasswordLength;
+	}
+	public void setMinPasswordLength(Integer minPasswordLength) {
+		this.minPasswordLength = minPasswordLength;
+	}
+	public Integer getMaxPasswordLength() {
+		return maxPasswordLength;
+	}
+	public void setMaxPasswordLength(Integer maxPasswordLength) {
+		this.maxPasswordLength = maxPasswordLength;
+	}
+	public Integer getMaxPasswordAge() {
+		return maxPasswordAge;
+	}
+	public void setMaxPasswordAge(Integer maxPasswordAge) {
+		this.maxPasswordAge = maxPasswordAge;
+	}
+	public Integer getMinPasswordAge() {
+		return minPasswordAge;
+	}
+	public void setMinPasswordAge(Integer minPasswordAge) {
+		this.minPasswordAge = minPasswordAge;
+	}
+	public Integer getMaxFailedLoginCount() {
+		return maxFailedLoginCount;
+	}
+	public void setMaxFailedLoginCount(Integer maxFailedLoginCount) {
+		this.maxFailedLoginCount = maxFailedLoginCount;
+	}
+	public Integer getFailedLoginResetCount() {
+		return failedLoginResetCount;
+	}
+	public void setFailedLoginResetCount(Integer failedLoginResetCount) {
+		this.failedLoginResetCount = failedLoginResetCount;
+	}
+	public Boolean getEnforceLockoutPolicy() {
+		return enforceLockoutPolicy;
+	}
+	public void setEnforceLockoutPolicy(Boolean enforceLockoutPolicy) {
+		this.enforceLockoutPolicy = enforceLockoutPolicy;
+	}
+	public Boolean getEnforcePasswordComplexityRequirements() {
+		return enforcePasswordComplexityRequirements;
+	}
+	public void setEnforcePasswordComplexityRequirements(
+			Boolean enforcePasswordComplexityRequirements) {
+		this.enforcePasswordComplexityRequirements = enforcePasswordComplexityRequirements;
+	}
+	public Boolean getAccountManualUnlock() {
+		return accountManualUnlock;
+	}
+	public void setAccountManualUnlock(Boolean accountManualUnlock) {
+		this.accountManualUnlock = accountManualUnlock;
+	}
+	public Boolean getAccountUnlock() {
+		return accountUnlock;
+	}
+	public void setAccountUnlock(Boolean accountUnlock) {
+		this.accountUnlock = accountUnlock;
+	}
+	public Boolean getAccountTimedUnlock() {
+		return accountTimedUnlock;
+	}
+	public void setAccountTimedUnlock(Boolean accountTimedUnlock) {
+		this.accountTimedUnlock = accountTimedUnlock;
+	}
+	public Integer getAccountLockDuration() {
+		return accountLockDuration;
+	}
+	public void setAccountLockDuration(Integer accountLockDuration) {
+		this.accountLockDuration = accountLockDuration;
+	}
+	public Boolean getFailedTransferLock() {
+		return failedTransferLock;
+	}
+	public void setFailedTransferLock(Boolean failedTransferLock) {
+		this.failedTransferLock = failedTransferLock;
+	}
+	public Boolean getAutoCreateTempSub() {
+		return autoCreateTempSub;
+	}
+	public void setAutoCreateTempSub(Boolean autoCreateTempSub) {
+		this.autoCreateTempSub = autoCreateTempSub;
+	}
+	public String getTempRestrictionSettings() {
+		return tempRestrictionSettings;
+	}
+	public void setTempRestrictionSettings(String tempRestrictionSettings) {
+		this.tempRestrictionSettings = tempRestrictionSettings;
+	}
+	public Integer getAllowedOperations() {
+		return allowedOperations;
+	}
+	public void setAllowedOperations(Integer allowedOperations) {
+		this.allowedOperations = allowedOperations;
+	}
+	public String getSmsSenderID() {
+		return smsSenderID;
+	}
+	public void setSmsSenderID(String smsSenderID) {
+		this.smsSenderID = smsSenderID;
+	}
+	public String getSmsSubscriptionFormat() {
+		return smsSubscriptionFormat;
+	}
+	public void setSmsSubscriptionFormat(String smsSubscriptionFormat) {
+		this.smsSubscriptionFormat = smsSubscriptionFormat;
+	}
+	public String getSubscriptionMaxDisplayCharacters() {
+		return subscriptionMaxDisplayCharacters;
+	}
+	public void setSubscriptionMaxDisplayCharacters(
+			String subscriptionMaxDisplayCharacters) {
+		this.subscriptionMaxDisplayCharacters = subscriptionMaxDisplayCharacters;
+	}
+	public Boolean getChargeCollectSetting() {
+		return chargeCollectSetting;
+	}
+	public void setChargeCollectSetting(Boolean chargeCollectSetting) {
+		this.chargeCollectSetting = chargeCollectSetting;
+	}
+	public Boolean getNotifyOnDelayTrans() {
+		return notifyOnDelayTrans;
+	}
+	public void setNotifyOnDelayTrans(Boolean notifyOnDelayTrans) {
+		this.notifyOnDelayTrans = notifyOnDelayTrans;
+	}
+	public String getNotifyOnDelayMessageID() {
+		return notifyOnDelayMessageID;
+	}
+	public void setNotifyOnDelayMessageID(String notifyOnDelayMessageID) {
+		this.notifyOnDelayMessageID = notifyOnDelayMessageID;
+	}
+	public Integer getNotifyOnDelaySeconds() {
+		return notifyOnDelaySeconds;
+	}
+	public void setNotifyOnDelaySeconds(Integer notifyOnDelaySeconds) {
+		this.notifyOnDelaySeconds = notifyOnDelaySeconds;
+	}
+	public Boolean getMaintenanceMode() {
+		return maintenanceMode;
+	}
+	public void setMaintenanceMode(Boolean maintenanceMode) {
+		this.maintenanceMode = maintenanceMode;
+	}
+	public String getMaintenanceModeMessageID() {
+		return maintenanceModeMessageID;
+	}
+	public void setMaintenanceModeMessageID(String maintenanceModeMessageID) {
+		this.maintenanceModeMessageID = maintenanceModeMessageID;
+	}
+	public Integer getCountryCode() {
+		return countryCode;
+	}
+	public void setCountryCode(Integer countryCode) {
+		this.countryCode = countryCode;
+	}
+	public String getCountryDomain() {
+		return countryDomain;
+	}
+	public void setCountryDomain(String countryDomain) {
+		this.countryDomain = countryDomain;
+	}
+	public String getCurrencyCode() {
+		return currencyCode;
+	}
+	public void setCurrencyCode(String currencyCode) {
+		this.currencyCode = currencyCode;
+	}
+	public String getCurrencyISONumber() {
+		return currencyISONumber;
+	}
+	public void setCurrencyISONumber(String currencyISONumber) {
+		this.currencyISONumber = currencyISONumber;
+	}
+	public Integer getMsisdnLength() {
+		return msisdnLength;
+	}
+	public void setMsisdnLength(Integer msisdnLength) {
+		this.msisdnLength = msisdnLength;
+	}
+	public Boolean getMsisdnLeadZero() {
+		return msisdnLeadZero;
+	}
+	public void setMsisdnLeadZero(Boolean msisdnLeadZero) {
+		this.msisdnLeadZero = msisdnLeadZero;
+	}
+
+
+}
diff --git a/src/metomeui/model/TransactionSettings.java b/src/metomeui/model/TransactionSettings.java
index 781e58b..69db624 100644
--- a/src/metomeui/model/TransactionSettings.java
+++ b/src/metomeui/model/TransactionSettings.java
@@ -1,9 +1,6 @@
 package metomeui.model;
 
-import javax.validation.constraints.NotNull;
-
 import org.hibernate.validator.constraints.NotEmpty;
-import org.hibernate.validator.constraints.Range;
 
 public class TransactionSettings {
 	
diff --git a/src/metomeui/model/User.java b/src/metomeui/model/User.java
index 3c9f3e4..da0d1aa 100644
--- a/src/metomeui/model/User.java
+++ b/src/metomeui/model/User.java
@@ -10,63 +10,55 @@
 import org.hibernate.validator.constraints.Email;
 import org.hibernate.validator.constraints.NotEmpty;
 
-//@Entity
-//@Table(name = "Users")
+@Entity
+@Table(name = "users")
 public class User {
 
-//	@NotEmpty
-//	@Size(min = 8, max = 20)
-//	@NotBlank(applyIf = "password is not blank") 
-//	@Expression(value = "confirmPassword = password", applyIf = "password is not blank") 
-//	private String confirmPassword;
-//
-//	@Id
-//	@GeneratedValue
-//	@Column(name = "user_id")
-//	private Integer userId;
+	@Id
+	@GeneratedValue
+	@Column(name = "user_id")
+	private long userId;
 
 	@NotEmpty
-	//@Size(min = 6, max = 20)
 	@Column(name = "user_name", nullable = false, length = 20)
-	private String userName;
+	public String userName;
 
 	@NotEmpty
-	//@Size(min = 8, max = 20)
 	@Column(name = "password", nullable = false, length = 20)
-	private String password;
+	public String password;
 
-//	@NotEmpty
-//	@Size(min = 2, max = 20)
-//	@Column(name = "first_name", nullable = false, length = 20)
-//	private String firstName;
-//
-//	@NotEmpty
-//	@Size(min = 2, max = 20)
-//	@Column(name = "last_name", nullable = false, length = 20)
-//	private String lastName;
-//
-////	@NotEmpty
-//	@Size(min = 1, max = 20)
-//	@Column(name = "middle_name", nullable = true, length = 20)
-//	private String middleName;
-//
-//	@NotEmpty
-//	@Size(min = 5, max = 20)
-//	@Column(name = "role", nullable = false, length = 20)
-//	private String role;
-//
-//	@NotEmpty
-//	@Email
-//	@Column(name = "email_address", nullable = false, length = 40)
-//	private String email;
-//
-//	@NotEmpty
-//	@Column(name = "telephone", nullable = false, length = 20)
-//	private String telephone;
+	@NotEmpty
+	@Size(min = 2, max = 20)
+	@Column(name = "first_name", nullable = false, length = 20)
+	private String firstName;
+
+	@NotEmpty
+	@Size(min = 2, max = 20)
+	@Column(name = "last_name", nullable = false, length = 20)
+	private String lastName;
+
+	@Size(min = 1, max = 20)
+	@Column(name = "middle_name", nullable = true, length = 20)
+	private String middleName;
+
+	@NotEmpty
+	@Size(min = 5, max = 20)
+	@Column(name = "role", nullable = false, length = 20)
+	private String role;
+
+	@NotEmpty
+	@Email
+	@Column(name = "email_address", nullable = false, length = 40)
+	private String email;
+
+	@NotEmpty
+	@Column(name = "telephone", nullable = false, length = 20)
+	private String telephone;
 
 	public User() {
 
 	}
+
 	public void setUserName(String userName) {
 		this.userName = userName;
 	}
@@ -88,4 +80,60 @@
 		this.password = "";
 
 	}
+
+	public long getUserId() {
+		return userId;
+	}
+
+	public void setUserId(long userId) {
+		this.userId = userId;
+	}
+
+	public String getFirstName() {
+		return firstName;
+	}
+
+	public void setFirstName(String firstName) {
+		this.firstName = firstName;
+	}
+
+	public String getLastName() {
+		return lastName;
+	}
+
+	public void setLastName(String lastName) {
+		this.lastName = lastName;
+	}
+
+	public String getMiddleName() {
+		return middleName;
+	}
+
+	public void setMiddleName(String middleName) {
+		this.middleName = middleName;
+	}
+
+	public String getRole() {
+		return role;
+	}
+
+	public void setRole(String role) {
+		this.role = role;
+	}
+
+	public String getEmail() {
+		return email;
+	}
+
+	public void setEmail(String email) {
+		this.email = email;
+	}
+
+	public String getTelephone() {
+		return telephone;
+	}
+
+	public void setTelephone(String telephone) {
+		this.telephone = telephone;
+	}
 }
diff --git a/src/metomeui/model/UssdKeywordStep.java b/src/metomeui/model/UssdKeywordStep.java
index ef35b2f..ba72dd8 100644
--- a/src/metomeui/model/UssdKeywordStep.java
+++ b/src/metomeui/model/UssdKeywordStep.java
@@ -1,11 +1,13 @@
 package metomeui.model;
 
-import javax.validation.constraints.Size;
 import javax.persistence.Column;
 import javax.persistence.Entity;
 import javax.persistence.GeneratedValue;
 import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
 import javax.persistence.Table;
+import javax.validation.constraints.Size;
 
 import org.hibernate.validator.constraints.NotEmpty;
 
@@ -16,11 +18,11 @@
 	@Id
 	@GeneratedValue
 	@Column(name = "KEYWORD_STEP_ID")
-	private Integer keywordStepId;
+	private Long keywordStepId;
 
-	@Id
-	@Column(name = "KEYWORD_ID")
-	private Integer keywordId;
+	@ManyToOne
+	@JoinColumn(name = "KEYWORD_ID", nullable = false)
+	private UssdTransactionKeyword transactionKeyword;
 
 	@NotEmpty
 	@Size(min = 6, max = 100)
@@ -42,37 +44,41 @@
 	@Column(name = "USE_FIXED_VALUE", nullable = true, length = 11)
 	private Integer useFixedValueFlag;
 
-	@NotEmpty
 	@Size(min = 1, max = 50)
 	@Column(name = "FIXED_VALUE", nullable = true, length = 50)
 	private String fixedValue;
 
-	@NotEmpty
 	@Column(name = "HAS_PREDEF_INPUT", nullable = true, length = 11)
 	private Integer hasPredefInputFlag;
 
-	@Size(min = 1, max = 50)
-	@Column(name = "PREDEF_INPUT_ID", nullable = true, length = 50)
-	private String predefInputId;
+	@ManyToOne
+	@JoinColumn(name = "PREDEF_INPUT_ID", nullable = true)
+	private UssdPredefInput predefInput;
 
 	public UssdKeywordStep() {
 
 	}
 
-	public Integer getKeywordStepId() {
+	public UssdKeywordStep(String stepMenuName, Integer stepMenuNumber,
+			Integer isFirstStepFlag, Integer isLastStepFlag,
+			Integer useFixedValueFlag, String fixedValue,
+			Integer hasPredefInputFlag) {
+		this.stepMenuName = stepMenuName;
+		this.stepMenuNumber = stepMenuNumber;
+		this.isFirstStepFlag = isFirstStepFlag;
+		this.isLastStepFlag = isLastStepFlag;
+		this.useFixedValueFlag = useFixedValueFlag;
+		this.fixedValue = fixedValue;
+		this.hasPredefInputFlag = hasPredefInputFlag;
+		this.predefInput = new UssdPredefInput();
+	}
+
+	public Long getKeywordStepId() {
 		return keywordStepId;
 	}
 
-	public void setKeywordStepId(Integer keywordStepId) {
+	public void setKeywordStepId(Long keywordStepId) {
 		this.keywordStepId = keywordStepId;
-	}
-
-	public Integer getKeywordId() {
-		return keywordId;
-	}
-
-	public void setKeywordId(Integer keywordId) {
-		this.keywordId = keywordId;
 	}
 
 	public String getStepMenuName() {
@@ -96,6 +102,9 @@
 	}
 
 	public void setIsFirstStepFlag(Integer isFirstStepFlag) {
+		if (isFirstStepFlag == null) {
+			isFirstStepFlag = 0;
+		}
 		this.isFirstStepFlag = isFirstStepFlag;
 	}
 
@@ -104,6 +113,9 @@
 	}
 
 	public void setIsLastStepFlag(Integer isLastStepFlag) {
+		if (isLastStepFlag == null) {
+			isLastStepFlag = 0;
+		}
 		this.isLastStepFlag = isLastStepFlag;
 	}
 
@@ -112,6 +124,9 @@
 	}
 
 	public void setUseFixedValueFlag(Integer useFixedValueFlag) {
+		if (useFixedValueFlag == null) {
+			useFixedValueFlag = 0;
+		}
 		this.useFixedValueFlag = useFixedValueFlag;
 	}
 
@@ -123,14 +138,6 @@
 		this.fixedValue = fixedValue;
 	}
 
-	public String getPredefInputId() {
-		return predefInputId;
-	}
-
-	public void setPredefInputId(String predefInputId) {
-		this.predefInputId = predefInputId;
-	}
-
 	public Integer getHasPredefInputFlag() {
 		return hasPredefInputFlag;
 	}
@@ -138,4 +145,20 @@
 	public void setHasPredefInputFlag(Integer hasPredefInputFlag) {
 		this.hasPredefInputFlag = hasPredefInputFlag;
 	}
+
+	public UssdTransactionKeyword getTransactionKeyword() {
+		return transactionKeyword;
+	}
+
+	public void setTransactionKeyword(UssdTransactionKeyword transactionKeyword) {
+		this.transactionKeyword = transactionKeyword;
+	}
+
+	public UssdPredefInput getPredefInput() {
+		return predefInput;
+	}
+
+	public void setPredefInput(UssdPredefInput predefInput) {
+		this.predefInput = predefInput;
+	}
 }
diff --git a/src/metomeui/model/UssdMenuItem.java b/src/metomeui/model/UssdMenuItem.java
index 96a5cfa..81f3c58 100644
--- a/src/metomeui/model/UssdMenuItem.java
+++ b/src/metomeui/model/UssdMenuItem.java
@@ -1,11 +1,19 @@
 package metomeui.model;
 
-import javax.validation.constraints.Size;
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.persistence.CascadeType;
 import javax.persistence.Column;
 import javax.persistence.Entity;
+import javax.persistence.FetchType;
 import javax.persistence.GeneratedValue;
 import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.OneToMany;
 import javax.persistence.Table;
+import javax.validation.constraints.Size;
 
 import org.hibernate.validator.constraints.NotEmpty;
 
@@ -14,51 +22,54 @@
 public class UssdMenuItem {
 
 	@Id
-	@GeneratedValue
+	@GeneratedValue()
 	@Column(name = "MENU_ITEM_ID")
-	private Integer menuItemId;
+	private Long menuItemId;
 
-	@NotEmpty
-	@Size(min = 6, max = 20)
-	@Column(name = "PARENT_MENU_ID", nullable = true, length = 11)
-	private Integer menuItemParentId;
+	@OneToMany(targetEntity = UssdMenuItem.class, mappedBy = "rootMenuItem", fetch = FetchType.LAZY, cascade = { CascadeType.ALL })
+	@JoinColumn(name = "PARENT_MENU_ID", insertable = false, updatable = false, nullable = true)
+	private List<UssdMenuItem> menuItems;
 
-	@NotEmpty
-	@Size(min = 1, max = 11)
-	@Column(name = "KEYWORD_ID", nullable = true, length = 11)
-	private Integer menuItemKeywordId;
+	@ManyToOne
+	@JoinColumn(name = "PARENT_MENU_ID", nullable = true)
+	private UssdMenuItem rootMenuItem;
+
+	@ManyToOne
+	@JoinColumn(name = "KEYWORD_ID", nullable = true)
+	private UssdTransactionKeyword menuItemKeyword;
 
 	@NotEmpty
 	@Size(min = 1, max = 11)
 	@Column(name = "MENU_ITEM_ORDER", nullable = true, length = 11)
 	private Integer menuItemOrder;
-	
+
 	@NotEmpty
 	@Size(min = 8, max = 20)
 	@Column(name = "MENU_ITEM_NAME", nullable = true, length = 100)
 	private String menuItemName;
-	
+
 	@Column(name = "ENABLED_FLG", nullable = true)
 	private Integer menuItemEnabledFlag;
-	
-	public UssdMenuItem(){
-		
+
+	public UssdMenuItem() {
+
 	}
 
-	public Integer getMenuItemId() {
+	public UssdMenuItem(String menuItemName, Integer menuItemOrder,
+			Integer menuItemEnabledFlag) {
+		this.menuItemName = menuItemName;
+		this.menuItemOrder = menuItemOrder;
+		this.menuItemKeyword = new UssdTransactionKeyword();
+		this.rootMenuItem = new UssdMenuItem();
+		//this.menuItems = new ArrayList<UssdMenuItem>();
+	}
+
+	public Long getMenuItemId() {
 		return menuItemId;
 	}
 
-	public void setMenuItemId(Integer menuItemId) {
+	public void setMenuItemId(Long menuItemId) {
 		this.menuItemId = menuItemId;
-	}
-
-	public Integer getMenuItemKeywordId() {
-		return menuItemKeywordId;
-	}
-
-	public void setMenuItemKeywordId(Integer menuItemKeywordId) {
-		this.menuItemKeywordId = menuItemKeywordId;
 	}
 
 	public Integer getMenuItemOrder() {
@@ -77,14 +88,6 @@
 		this.menuItemName = menuItemName;
 	}
 
-	public Integer getMenuItemParentId() {
-		return menuItemParentId;
-	}
-
-	public void setMenuItemParentId(Integer menuItemParentId) {
-		this.menuItemParentId = menuItemParentId;
-	}
-
 	public Integer getMenuItemEnabledFlag() {
 		return menuItemEnabledFlag;
 	}
@@ -93,5 +96,28 @@
 		this.menuItemEnabledFlag = menuItemEnabledFlag;
 	}
 
-	
+	public UssdMenuItem getRootMenuItem() {
+		return rootMenuItem;
+	}
+
+	public void setRootMenuItem(UssdMenuItem rootMenuItem) {
+		this.rootMenuItem = rootMenuItem;
+	}
+
+	public UssdTransactionKeyword getMenuItemKeyword() {
+		return menuItemKeyword;
+	}
+
+	public void setMenuItemKeyword(UssdTransactionKeyword menuItemKeyword) {
+		this.menuItemKeyword = menuItemKeyword;
+	}
+
+	public List<UssdMenuItem> getMenuItems() {
+		return menuItems;
+	}
+
+	public void setMenuItems(List<UssdMenuItem> menuItems) {
+		this.menuItems = menuItems;
+	}
+
 }
diff --git a/src/metomeui/model/UssdPredefInput.java b/src/metomeui/model/UssdPredefInput.java
index cbdcc62..c6eb95d 100644
--- a/src/metomeui/model/UssdPredefInput.java
+++ b/src/metomeui/model/UssdPredefInput.java
@@ -1,11 +1,19 @@
 package metomeui.model;
 
-import javax.validation.constraints.Size;
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.persistence.CascadeType;
 import javax.persistence.Column;
 import javax.persistence.Entity;
+import javax.persistence.FetchType;
 import javax.persistence.GeneratedValue;
+import javax.persistence.GenerationType;
 import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.OneToMany;
 import javax.persistence.Table;
+import javax.validation.constraints.Size;
 
 import org.hibernate.validator.constraints.NotEmpty;
 
@@ -14,9 +22,9 @@
 public class UssdPredefInput {
 
 	@Id
-	@GeneratedValue
+	@GeneratedValue(strategy = GenerationType.IDENTITY)
 	@Column(name = "PREDEF_INPUT_ID")
-	private Integer predefInputId;
+	private Long predefInputId;
 
 	@NotEmpty
 	@Size(min = 6, max = 20)
@@ -27,16 +35,42 @@
 	@Size(min = 8, max = 160)
 	@Column(name = "PREDEF_INPUT_DESC", nullable = false, length = 20)
 	private String predefInputDescription;
-	
-	public UssdPredefInput() {
 
+	@OneToMany(targetEntity = UssdPredefInputItem.class, mappedBy = "predefInput", fetch = FetchType.LAZY, cascade = { CascadeType.ALL })
+	// @Cascade(value = org.hibernate.annotations.CascadeType.DELETE_ORPHAN)
+	@JoinColumn(name = "PREDEF_INPUT_ID", insertable = false, updatable = false)
+	// @PrimaryKeyJoinColumn
+	private List<UssdPredefInputItem> predefInputItems;
+
+	@OneToMany(targetEntity = UssdKeywordStep.class, mappedBy = "predefInput", fetch = FetchType.LAZY, cascade = { CascadeType.ALL })
+	@JoinColumn(name = "KEYWORD_STEP_ID", insertable = false, updatable = false)
+	private List<UssdKeywordStep> keywordSteps;
+
+	public UssdPredefInput() {
+		this.predefInputItems = new ArrayList<UssdPredefInputItem>();
+		this.keywordSteps = new ArrayList<UssdKeywordStep>();
 	}
 
-	public Integer getPredefInputId() {
+	public UssdPredefInput(String predefInputName, String predefInputDescription) {
+		this.predefInputName = predefInputName;
+		this.predefInputDescription = predefInputDescription;
+		this.predefInputItems = new ArrayList<UssdPredefInputItem>();
+		this.keywordSteps = new ArrayList<UssdKeywordStep>();
+	}
+
+	public List<UssdPredefInputItem> getPredefInputItems() {
+		return predefInputItems;
+	}
+
+	public void setPredefInputItems(List<UssdPredefInputItem> predefInputItems) {
+		this.predefInputItems = predefInputItems;
+	}
+
+	public Long getPredefInputId() {
 		return predefInputId;
 	}
 
-	public void setPredefInputId(Integer predefInputId) {
+	public void setPredefInputId(Long predefInputId) {
 		this.predefInputId = predefInputId;
 	}
 
@@ -56,5 +90,11 @@
 		this.predefInputDescription = predefInputDescription;
 	}
 
-	
-}
+	public List<UssdKeywordStep> getKeywordSteps() {
+		return keywordSteps;
+	}
+
+	public void setKeywordSteps(List<UssdKeywordStep> keywordSteps) {
+		this.keywordSteps = keywordSteps;
+	}
+}
\ No newline at end of file
diff --git a/src/metomeui/model/UssdPredefInputItem.java b/src/metomeui/model/UssdPredefInputItem.java
index c324a39..90399dc 100644
--- a/src/metomeui/model/UssdPredefInputItem.java
+++ b/src/metomeui/model/UssdPredefInputItem.java
@@ -3,7 +3,10 @@
 import javax.persistence.Column;
 import javax.persistence.Entity;
 import javax.persistence.GeneratedValue;
+import javax.persistence.GenerationType;
 import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
 import javax.persistence.Table;
 import javax.validation.constraints.Size;
 
@@ -14,50 +17,50 @@
 public class UssdPredefInputItem {
 
 	@Id
-	@GeneratedValue
+	@GeneratedValue(strategy = GenerationType.IDENTITY)
 	@Column(name = "INPUT_ITEM_ID")
-	private Integer inputItemId;
-	
-	@Column(name = "PREDEF_INPUT_ID")
-	private Integer predefInputId;
+	private Long inputItemId;
+
+	@ManyToOne
+	@JoinColumn(name = "PREDEF_INPUT_ID", nullable = false)
+	private UssdPredefInput predefInput;
 
 	@NotEmpty
 	@Size(min = 6, max = 100)
-	@Column(name = "INPUT_ITEM_NAME", nullable = false, length = 100)
+	@Column(name = "INPUT_ITEM_NAME", unique = true, nullable = false, length = 100)
 	private String predefInputItemName;
 
 	@NotEmpty
 	@Size(min = 6, max = 100)
-	@Column(name = "INPUT_ITEM_CODE", nullable = false, length = 100)
+	@Column(name = "INPUT_ITEM_CODE", unique = true, nullable = false, length = 100)
 	private String predefInputItemCode;
 
 	@NotEmpty
 	@Size(min = 1, max = 11)
 	@Column(name = "INPUT_ITEM_ORDER", nullable = false, length = 11)
 	private Integer predefInputItemOrder;
-	
+
 	@Column(name = "ENABLED_FLG", nullable = true)
-	private Integer predefInputItemEnabledFlag;
+	private Integer predefInputItemEnabledFlag = 0;
 
 	public UssdPredefInputItem() {
-
 	}
 
-	
-	public Integer getInputItemId() {
-		return inputItemId;
+	public UssdPredefInputItem(String predefInputItemCode,
+			String predefInputItemName, Integer predefInputItemOrder,
+			Integer predefInputItemEnabledFlag) {
+		this.predefInputItemCode = predefInputItemCode;
+		this.predefInputItemName = predefInputItemName;
+		this.predefInputItemOrder = predefInputItemOrder;
+		this.predefInputItemEnabledFlag = predefInputItemEnabledFlag;
 	}
 
-	public void setInputItemId(Integer inputItemId) {
-		this.inputItemId = inputItemId;
+	public String getPredefInputItemName() {
+		return predefInputItemName;
 	}
 
-	public Integer getPredefInputId() {
-		return predefInputId;
-	}
-
-	public void setPredefInputId(Integer predefInputId) {
-		this.predefInputId = predefInputId;
+	public void setPredefInputItemName(String predefInputItemName) {
+		this.predefInputItemName = predefInputItemName;
 	}
 
 	public String getPredefInputItemCode() {
@@ -84,13 +87,19 @@
 		this.predefInputItemEnabledFlag = predefInputItemEnabledFlag;
 	}
 
-	public String getPredefInputItemName() {
-		return predefInputItemName;
+	public Long getInputItemId() {
+		return inputItemId;
 	}
 
-	public void setPredefInputItemName(String predefInputItemName) {
-		this.predefInputItemName = predefInputItemName;
+	public void setInputItemId(Long inputItemId) {
+		this.inputItemId = inputItemId;
 	}
 
-	
-}
+	public UssdPredefInput getPredefInput() {
+		return predefInput;
+	}
+
+	public void setPredefInput(UssdPredefInput predefInput) {
+		this.predefInput = predefInput;
+	}
+}
\ No newline at end of file
diff --git a/src/metomeui/model/UssdTransactionKeyword.java b/src/metomeui/model/UssdTransactionKeyword.java
index 6612ef2..07b876f 100644
--- a/src/metomeui/model/UssdTransactionKeyword.java
+++ b/src/metomeui/model/UssdTransactionKeyword.java
@@ -1,11 +1,19 @@
 package metomeui.model;
 
-import javax.validation.constraints.Size;
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.persistence.CascadeType;
 import javax.persistence.Column;
 import javax.persistence.Entity;
+import javax.persistence.FetchType;
 import javax.persistence.GeneratedValue;
+import javax.persistence.GenerationType;
 import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.OneToMany;
 import javax.persistence.Table;
+import javax.validation.constraints.Size;
 
 import org.hibernate.validator.constraints.NotEmpty;
 
@@ -14,9 +22,9 @@
 public class UssdTransactionKeyword {
 
 	@Id
-	@GeneratedValue
+	@GeneratedValue(strategy = GenerationType.IDENTITY)
 	@Column(name = "KEYWORD_ID")
-	private Integer keywordId;
+	private Long keywordId;
 
 	@NotEmpty
 	@Size(min = 6, max = 100)
@@ -39,15 +47,34 @@
 	@Column(name = "ENABLED_FLG", nullable = true)
 	private Integer keywordEnabledFlag;
 
+	@OneToMany(targetEntity = UssdKeywordStep.class, mappedBy = "transactionKeyword", fetch = FetchType.LAZY, cascade = CascadeType.ALL)
+	@JoinColumn(name = "KEYWORD_ID", insertable = false, updatable = false)
+	private List<UssdKeywordStep> keywordSteps;
+
+	//@OneToMany(targetEntity = UssdMenuItem.class, mappedBy = "menuItemKeyword", fetch = FetchType.LAZY, cascade = CascadeType.ALL)
+	//@JoinColumn(name = "KEYWORD_ID", insertable = false, updatable = false)
+	//private List<UssdMenuItem> menuItems;
+
 	public UssdTransactionKeyword() {
 
 	}
 
-	public Integer getKeywordId() {
+	public UssdTransactionKeyword(String keywordName, String keywordCode,
+			String keywordDescription, Integer keywordStepsCount,
+			Integer keywordEnabledFlag) {
+		this.keywordName = keywordName;
+		this.keywordCode = keywordCode;
+		this.keywordDescription = keywordDescription;
+		this.keywordStepsCount = keywordStepsCount;
+		this.keywordEnabledFlag = keywordEnabledFlag;
+		this.keywordSteps = new ArrayList<UssdKeywordStep>();
+	}
+
+	public Long getKeywordId() {
 		return keywordId;
 	}
 
-	public void setKeywordId(Integer keywordId) {
+	public void setKeywordId(Long keywordId) {
 		this.keywordId = keywordId;
 	}
 
@@ -90,4 +117,12 @@
 	public void setKeywordEnabledFlag(Integer keywordEnabledFlag) {
 		this.keywordEnabledFlag = keywordEnabledFlag;
 	}
-}
+
+	public List<UssdKeywordStep> getKeywordSteps() {
+		return keywordSteps;
+	}
+
+	public void setKeywordSteps(List<UssdKeywordStep> keywordSteps) {
+		this.keywordSteps = keywordSteps;
+	}
+}
\ No newline at end of file
diff --git a/src/metomeui/service/SystemSettingsService.java b/src/metomeui/service/SystemSettingsService.java
new file mode 100644
index 0000000..05e44d4
--- /dev/null
+++ b/src/metomeui/service/SystemSettingsService.java
@@ -0,0 +1,111 @@
+package metomeui.service;
+
+import java.util.List;
+
+import metomeui.model.AccountType;
+import metomeui.model.ContactForm;
+import metomeui.model.Language;
+import metomeui.model.MemoGroup;
+import metomeui.model.Message;
+import metomeui.model.SystemConfiguration;
+import metomeui.model.User;
+import metomeui.model.UssdPredefInputItem;
+
+public interface SystemSettingsService {
+
+	/**
+	 * AccountTypes Management functions
+	 *
+	 */
+	public List<AccountType> listAccountTypes();
+
+	public void addAccountType(AccountType accountType);
+	
+	public void removeAccountType(Integer accountTypeId);
+	
+	
+	/**
+	 * User Management functions
+	 *
+	 */
+	public List<User> listUsers();
+	
+	public void addUser(User user);
+	
+	public void removeUser(Integer userId);
+	
+	public User getUserByName(String username, String password);
+	
+	
+	/**
+	 * Message Management functions
+	 *
+	 */
+	public List<Message> listMessages();
+
+	public void addMessage(Message message);
+	
+	public void removeMessage(Integer messageId);
+	
+	/**
+	 * Language Management functions
+	 *
+	 */
+	public List<Language> listLanguages();
+	
+	public void addLanguage(Language language);
+
+	public void removeLanguage(Integer languageId);
+	
+	/**
+	 * MemoGroup Management functions
+	 *
+	 */
+	public List<MemoGroup> listMemoGroups();
+
+	public void addMemoGroup(MemoGroup memoGroup);
+	
+	public void removeMemoGroup(Integer memoGroupId);
+	
+	/**
+	 * System Config functions
+	 *
+	 */
+	public List<SystemConfiguration> listSystemConfiguration();
+
+	public void addSystemConfiguration(SystemConfiguration sysConfiguration);
+	
+	public void removeSystemConfiguration(Integer SystemConfigurationId);
+	
+	public void addContact(UssdPredefInputItem contact);
+	
+	public void addContact(ContactForm contactForm);
+
+	public void updateContact(ContactForm contactForm);
+
+	public void updateContact(UssdPredefInputItem contact);
+
+	public User getExistingUser(long userId);
+
+	public void editExistingUser(User user);
+
+	public void editExistingMessage(Message message);
+	
+	public Message getExistingMessage(long messageId);
+
+	public Language getExistingLanguage(long languageId);
+
+	public void editExistingLanguage(Language language);
+
+	public AccountType getExistingAccountType(long messageId);
+
+	public void editExistingAccountType(AccountType accountType);
+
+	public MemoGroup getExistingMemoGroup(long memoGroupId);
+
+	public void editExistingMemoGroup(MemoGroup memoGroup);
+
+	
+
+	
+}
diff --git a/src/metomeui/service/SystemSettingsServiceImplementation.java b/src/metomeui/service/SystemSettingsServiceImplementation.java
new file mode 100644
index 0000000..00a8b27
--- /dev/null
+++ b/src/metomeui/service/SystemSettingsServiceImplementation.java
@@ -0,0 +1,257 @@
+package metomeui.service;
+
+import java.util.List;
+
+import metomeui.dao.SystemSettingsDao;
+import metomeui.dao.SystemSettingsDaoImplementation;
+import metomeui.model.AccountType;
+import metomeui.model.ContactForm;
+import metomeui.model.Language;
+import metomeui.model.MemoGroup;
+import metomeui.model.Message;
+import metomeui.model.SystemConfiguration;
+import metomeui.model.User;
+import metomeui.model.UssdPredefInputItem;
+
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Propagation;
+import org.springframework.transaction.annotation.Transactional;
+
+@Service("chargeSetupService")
+@Transactional(propagation = Propagation.SUPPORTS, readOnly = true)
+public class SystemSettingsServiceImplementation implements SystemSettingsService {
+
+	@Autowired
+	private SystemSettingsDao systemSettingsDao = new SystemSettingsDaoImplementation();
+	
+	public SystemSettingsServiceImplementation() {
+		
+	}
+
+	/**
+	 * AccountTypes Management functions
+	 *
+	 */
+	@Transactional
+	public List<AccountType> listAccountTypes() {
+		return systemSettingsDao.listAccountTypes();
+	}
+
+	@Transactional
+	public void removeAccountType(long accountTypeId) {
+		systemSettingsDao.removeAccountType(accountTypeId);
+	}
+	
+	@Transactional(propagation = Propagation.REQUIRED, readOnly = false)
+	public void addAccountType(AccountType accountType) {
+		systemSettingsDao.addAccountType(accountType);
+	}
+	
+	@Transactional
+	public AccountType getExistingAccountType(long accountTypeId) {
+		return systemSettingsDao.getExistingAccountType(accountTypeId);
+	}
+	
+	@Transactional
+	public void editExistingAccountType(AccountType accountType) {
+		systemSettingsDao.editExistingAccountType(accountType);
+	}
+	
+	/**
+	 * User Management functions
+	 *
+	 */
+	@Transactional(propagation = Propagation.REQUIRED, readOnly = false)
+	public void addUser(User user) {
+		systemSettingsDao.addUser(user);
+	}
+
+	@Transactional
+	public List<User> listUsers() {
+		return systemSettingsDao.listUsers();
+	}
+
+	@Transactional
+	public void removeUser(long id) {
+		systemSettingsDao.removeUser(id);
+	}
+	
+	@Transactional
+	public User getUserByName(String userName, String password) {
+		return systemSettingsDao.getUserByName(userName, password);
+	}
+	
+	@Transactional
+	public User getExistingUser(long userId) {
+		return systemSettingsDao.getExistingUser(userId);
+	}
+	
+	@Transactional
+	public void editExistingUser(User user) {
+		systemSettingsDao.editExistingUser(user);
+	}
+	
+	/**
+	 * Language Management functions
+	 *
+	 */
+	@Transactional
+	public List<Language> listLanguages() {
+		return systemSettingsDao.listLanguages();
+	}
+	
+	@Transactional(propagation = Propagation.REQUIRED, readOnly = false)
+	public void addLanguage(Language language) {
+		systemSettingsDao.addLanguage(language);
+	}
+
+	@Transactional
+	public void removeLanguage(Integer languageId) {
+		systemSettingsDao.removeLanguage(languageId);
+	}
+	
+	@Transactional
+	public Language getExistingLanguage(long languageId) {
+		return systemSettingsDao.getExistingLanguage(languageId);
+	}
+	
+	@Transactional
+	public void editExistingLanguage(Language language) {
+		systemSettingsDao.editExistingLanguage(language);
+	}
+	
+	
+	/**
+	 * Message Management functions
+	 *
+	 */
+	@Transactional(propagation = Propagation.REQUIRED, readOnly = false)
+	public void addMessage(Message message) {
+		systemSettingsDao.addMessage(message);
+	}
+
+	@Transactional
+	public List<Message> listMessages() {
+		return systemSettingsDao.listMessages();
+	}
+
+	@Transactional
+	public void removeMessage(Integer messageId) {
+		systemSettingsDao.removeMessage(messageId);
+	}
+	
+	@Transactional
+	public Message getExistingMessage(long messageId) {
+		return systemSettingsDao.getExistingMessage(messageId);
+	}
+	
+	@Transactional
+	public void editExistingMessage(Message message) {
+		systemSettingsDao.editExistingMessage(message);
+	}
+	
+	
+	/**
+	 * MemoGroup Management functions
+	 *
+	 */
+	@Transactional
+	public List<MemoGroup> listMemoGroups() {
+		return systemSettingsDao.listMemoGroups();
+	}
+
+	@Transactional
+	public void removeMemoGroup(Integer memoGroupId) {
+		systemSettingsDao.removeMemoGroup(memoGroupId);
+	}
+	
+	@Transactional(propagation = Propagation.REQUIRED, readOnly = false)
+	public void addMemoGroup(MemoGroup memoGroup) {
+		systemSettingsDao.addMemoGroup(memoGroup);
+	}
+	
+	@Transactional
+	public MemoGroup getExistingMemoGroup(long memoGroupId) {
+		return systemSettingsDao.getExistingMemoGroup(memoGroupId);
+	}
+	
+	@Transactional
+	public void editExistingMemoGroup(MemoGroup memoGroup) {
+		systemSettingsDao.editExistingMemoGroup(memoGroup);
+	}
+	
+	/**
+	 * System Configuration functions
+	 *
+	 */
+	@Transactional(propagation = Propagation.REQUIRED, readOnly = false)
+	public void addSystemConfiguration(SystemConfiguration systemConfiguration) {
+		systemSettingsDao.addSystemConfiguration(systemConfiguration);
+	}
+
+	@Transactional
+	public List<SystemConfiguration> listSystemConfiguration() {
+		return systemSettingsDao.listSystemConfiguration();
+	}
+
+	@Transactional
+	public void removeSystemConfiguration(Integer systemConfigurationId) {
+		systemSettingsDao.removeSystemConfiguration(systemConfigurationId);
+	}	
+	
+	/**
+	 * Object Management functions
+	 *
+	 */
+	@Transactional(propagation = Propagation.REQUIRED, readOnly = false)
+	public void addItem(Object object) {
+		systemSettingsDao.addObject(object);
+	}
+
+	@Transactional
+	public List<Object> listObject() {
+		return systemSettingsDao.listObject();
+	}
+
+	@Transactional
+	public void removeObject(Integer id) {
+		systemSettingsDao.removeObject(id);
+	}
+
+	@Override
+	public void removeAccountType(Integer accountTypeId) {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public void removeUser(Integer userId) {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public void addContact(UssdPredefInputItem contact) {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public void addContact(ContactForm contactForm) {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public void updateContact(ContactForm contactForm) {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public void updateContact(UssdPredefInputItem contact) {
+		// TODO Auto-generated method stub
+		
+	}
+}
diff --git a/src/metomeui/service/UserService.java b/src/metomeui/service/UserService.java
deleted file mode 100644
index 375d712..0000000
--- a/src/metomeui/service/UserService.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package metomeui.service;
-/**
- * This is the interface which declares methods which will be used in controller class.
- */
-import java.util.List;
-
-import metomeui.model.User;
-
-public interface UserService {
-
-	public void addUser(User user);
-
-	public List<User> listUsers();
-	
-	public void removeUser(Integer id);
-}
\ No newline at end of file
diff --git a/src/metomeui/service/UserServiceImplementation.java b/src/metomeui/service/UserServiceImplementation.java
deleted file mode 100644
index 7530b43..0000000
--- a/src/metomeui/service/UserServiceImplementation.java
+++ /dev/null
@@ -1,47 +0,0 @@
-package metomeui.service;
-
-/**
- * This is the implementation class of ArticleService Interface. 
- * It defines all the methods declared in ArticleService interface. 
- * These methods uses Dao classes to interact with the database.
- * @Service("articleService") annotation is used to declare it as service bean 
- * and its name articleService will be used to auto wire its instance in controller class.
- * @Transactional annotation is used to declare the method transactional. 
- * You can also use this at the class level to declare all methods transactional.
- */
-import java.util.List;
-
-import metomeui.model.User;
-import metomeui.dao.UserDao;
-
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.stereotype.Service;
-import org.springframework.transaction.annotation.Propagation;
-import org.springframework.transaction.annotation.Transactional;
-
-@Service("userService")
-@Transactional(propagation = Propagation.SUPPORTS, readOnly = true)
-public class UserServiceImplementation implements UserService {
-
-	@Autowired
-	private UserDao userDao;
-
-	public UserServiceImplementation() {
-	}
-
-	@Transactional(propagation = Propagation.REQUIRED, readOnly = false)
-	public void addUser(User user) {
-		userDao.addUser(user);
-	}
-
-	@Transactional
-	public List<User> listUsers() {
-		return userDao.listUsers();
-	}
-
-	@Transactional
-	public void removeUser(Integer id) {
-		userDao.removeUser(id);
-	}
-
-}
\ No newline at end of file
diff --git a/src/metomeui/service/UssdMenuService.java b/src/metomeui/service/UssdMenuService.java
index 102ce5b..1631234 100644
--- a/src/metomeui/service/UssdMenuService.java
+++ b/src/metomeui/service/UssdMenuService.java
@@ -8,53 +8,87 @@
 import metomeui.model.UssdMenuItem;
 import metomeui.model.UssdPredefInput;
 import metomeui.model.UssdPredefInputItem;
-import metomeui.model.UssdRequest;
 import metomeui.model.UssdTransactionKeyword;
 
 public interface UssdMenuService {
-
-	public void addUssdPredefInputItem(UssdPredefInputItem ussdPredefInputItem);
-
-	public List<UssdPredefInputItem> listUssdPredefInputItems();
 	
-	public void removeUssdPredefInputItem(Integer inputItemId);
+	public List<UssdTransactionKeyword> listTransactionKeywords();
+
+	public void addTransactionKeyword(
+			UssdTransactionKeyword transactionKeyword);
+
+	public void deleteTransactionKeyword(Long keywordId);
+
+	public void editExistingTransactionKeyword(UssdTransactionKeyword transactionKeyword);
 	
-	public void addUssdPredefInput(UssdPredefInput ussdPredefInput);
+	public List<UssdKeywordStep> listKeywordSteps();
 
-	public List<UssdPredefInput> listUssdPredefInputs();
+	public void addKeywordStep(UssdKeywordStep ussdKeywordStep);
+
+	public void deleteExistingKeywordStep(Long keywordStepId);
 	
-	public UssdPredefInput retrieveSinglePredefInputEntry(Integer predefInputId);
-
-	public void updatePredefInput(UssdPredefInput ussdPredefInput, Integer predefInputId);
+	public void editExistingKeywordStep(UssdKeywordStep keywordStep);
 	
-	public void removeUssdPredefInput(Integer predefInputId);
+	public List<UssdMenuItem> listMenuItems();
 
-	public void addUssdTransactionKeyword(
-			UssdTransactionKeyword ussdTransactionKeyword);
+	public void addMenuItem(UssdMenuItem ussdMenuItem);
+
+	public void deleteMenuItem(Long menuItemId);
+	public void editExistingMenuItem(UssdMenuItem menuItem);
+
+	public void addPredefInput(UssdPredefInput predefInput);
+
+	public List<UssdPredefInput> listPredefInputs();
+	public List<UssdPredefInputItem> listPredefInputItemsByPredefInputId(long predefInputId);
+
+	public void editPredefInput(UssdPredefInput predefInput);
+
+	public UssdPredefInput getExistingPredefInput(Long predefInputId);
 	
-	public List<UssdTransactionKeyword> listUssdTransactionKeywords();
+	public void deleteExistingPredefInput(Long predefInputId);
 
-	public void removeUssdTransactionKeyword(Integer keywordId);
+	public UssdTransactionKeyword getExistingTransactionKeyword(Long keywordId);
 
-	public void addUssdKeywordStep(UssdKeywordStep ussdKeywordStep);
+	public UssdKeywordStep getExistingKeywordStep(Long keywordStepId);
+
+	public UssdMenuItem getExistingMenuItem(Long menuItemId);
+
+	public List<UssdKeywordStep> listKeywordStepByKeywordId(Long keywordId);
+
+	public void activateExistingMenuItem(Long menuItemId);
+
+	public void deactivateExistingMenuItem(Long menuItemId);
+
+	public void activateExistingKeyword(Long keywordId);
+
+	public void deactivateExistingKeyword(Long keywordId);
 	
-	public List<UssdKeywordStep> listUssdKeywordSteps();
+	public void activateExistingPredefInputItem(Long predefInputItemId);
 
-	public void removeUssdKeywordStep(Integer keywordStepId);
+	public void deactivateExistingPredefInputItem(Long predefInputItemId);
 
-	public List<UssdMenuItem> listUssdMenuItems();
+	public void deleteExistingPredefInputItem(Long inputItemId);
 
-	public void addUssdMenuItem(UssdMenuItem ussdMenuItem);
+	public UssdPredefInputItem getExistingPredefInputItem(Long predefInputItemId);
 
-	public void removeUssdMenuItem(Integer menuItemId);
+	public List<UssdMenuItem> getChildMenuItemsForParentMenuItem(Long menuItemId);
 
-	public List<UssdRequest> listUssdRequests();
+	public boolean checkIfDuplicateStepMenuName(String stepMenuName, Long keywordId);
+
+	public boolean checkIfDuplicateInputItemName(String predefInputItemName,
+			Long predefInputId);
 	
-	
+	boolean checkIfDuplicateMenuName(String menuItemName, Long menuItemId);
 
-	
+	boolean checkIfDuplicateKeywordName(String keywordName, Long keywordId);
 
-	
+	boolean checkIfDuplicateKeywordCode(String keywordCode, Long keywordId);
 
-	
+	public boolean checkIfDuplicateInputItemCode(String predefInputItemCode,
+			Long predefInputId);
+
+	public boolean checkIfDuplicateInputItemOrder(Integer predefInputItemOrder,
+			Long predefInputId);
+
+	boolean checkIfDuplicatePredefInputName(String predefInputName, Long predefInputId);
 }
\ No newline at end of file
diff --git a/src/metomeui/service/UssdMenuServiceImplementation.java b/src/metomeui/service/UssdMenuServiceImplementation.java
index 051f74f..d3fa249 100644
--- a/src/metomeui/service/UssdMenuServiceImplementation.java
+++ b/src/metomeui/service/UssdMenuServiceImplementation.java
@@ -16,7 +16,6 @@
 import metomeui.model.UssdMenuItem;
 import metomeui.model.UssdPredefInput;
 import metomeui.model.UssdPredefInputItem;
-import metomeui.model.UssdRequest;
 import metomeui.model.UssdTransactionKeyword;
 
 import org.springframework.beans.factory.annotation.Autowired;
@@ -32,98 +31,225 @@
 	private UssdMenuDao ussdMenuDao;
 
 	public UssdMenuServiceImplementation() {
+
 	}
 
 	@Transactional(propagation = Propagation.REQUIRED, readOnly = false)
-	public void addUssdPredefInputItem(UssdPredefInputItem ussdPredefInputItem) {
-		ussdMenuDao.addUssdPredefInputItem(ussdPredefInputItem);
-	}
-
-	@Transactional
-	public List<UssdPredefInputItem> listUssdPredefInputItems() {
-		return ussdMenuDao.listUssdPredefInputItems();
-	}
-
-	@Transactional(propagation = Propagation.REQUIRED, readOnly = false)
-	public void removeUssdPredefInputItem(Integer inputItemId) {
-		ussdMenuDao.removeUssdPredefInputItem(inputItemId);
-	}
-
-	@Transactional(propagation = Propagation.REQUIRED, readOnly = false)
-	public void addUssdPredefInput(UssdPredefInput ussdPredefInput) {
-		ussdMenuDao.addUssdPredefInput(ussdPredefInput);
-	}
-
-	@Transactional
-	public List<UssdPredefInput> listUssdPredefInputs() {
-		return ussdMenuDao.listUssdPredefInputs();
-	}
-
-	@Transactional
-	public UssdPredefInput retrieveSinglePredefInputEntry(Integer predefInputId) {
-		return ussdMenuDao.retrieveSinglePredefInputEntry(predefInputId);
-	}
-
-	@Transactional
-	public void updatePredefInput(UssdPredefInput ussdPredefInput,
-			Integer predefInputId) {
-		ussdMenuDao.updatePredefInput(ussdPredefInput, predefInputId);
-	}
-
-	@Transactional
-	public void removeUssdPredefInput(Integer predefInputId) {
-		ussdMenuDao.removeUssdPredefInput(predefInputId);
-	}
-
-	@Transactional(propagation = Propagation.REQUIRED, readOnly = false)
-	public void addUssdTransactionKeyword(
+	public void addTransactionKeyword(
 			UssdTransactionKeyword ussdTransactionKeyword) {
-		ussdMenuDao.addUssdTransactionKeyword(ussdTransactionKeyword);
+		ussdMenuDao.addTransactionKeyword(ussdTransactionKeyword);
 	}
 
 	@Transactional
-	public List<UssdTransactionKeyword> listUssdTransactionKeywords() {
-		return ussdMenuDao.listUssdTransactionKeywords();
+	public List<UssdTransactionKeyword> listTransactionKeywords() {
+		return ussdMenuDao.listTransactionKeywords();
 	}
 
 	@Transactional
-	public void removeUssdTransactionKeyword(Integer keywordId) {
-		ussdMenuDao.removeUssdTransactionKeyword(keywordId);
+	public void deleteTransactionKeyword(Long keywordId) {
+		ussdMenuDao.deleteTransactionKeyword(keywordId);
+	}
+
+	@Transactional
+	public void editExistingTransactionKeyword(
+			UssdTransactionKeyword transactionKeyword) {
+		ussdMenuDao.editTransactionKeyword(transactionKeyword);
+	}
+
+	@Transactional
+	public UssdTransactionKeyword getExistingTransactionKeyword(Long keywordId) {
+		return ussdMenuDao.getExistingTransactionKeyword(keywordId);
 	}
 
 	@Transactional(propagation = Propagation.REQUIRED, readOnly = false)
-	public void addUssdKeywordStep(UssdKeywordStep ussdKeywordStep) {
-		ussdMenuDao.addUssdKeywordStep(ussdKeywordStep);
+	public void addKeywordStep(UssdKeywordStep ussdKeywordStep) {
+		ussdMenuDao.addKeywordStep(ussdKeywordStep);
 	}
 
 	@Transactional
-	public List<UssdKeywordStep> listUssdKeywordSteps() {
-		return ussdMenuDao.listUssdKeywordSteps();
+	public List<UssdKeywordStep> listKeywordSteps() {
+		return ussdMenuDao.listKeywordSteps();
 	}
 
 	@Transactional
-	public void removeUssdKeywordStep(Integer keywordStepId) {
-		ussdMenuDao.removeUssdKeywordStep(keywordStepId);
+	public void deleteExistingKeywordStep(Long keywordStepId) {
+		ussdMenuDao.deleteExistingKeywordStep(keywordStepId);
 	}
 
 	@Transactional
-	public List<UssdMenuItem> listUssdMenuItems() {
-		return ussdMenuDao.listUssdMenuItems();
+	public void editExistingKeywordStep(UssdKeywordStep keywordStep) {
+		ussdMenuDao.editKeywordStep(keywordStep);
+	}
+
+	@Transactional
+	public UssdKeywordStep getExistingKeywordStep(Long keywordStepId) {
+		return ussdMenuDao.getExistingKeywordStep(keywordStepId);
+	}
+
+	@Transactional
+	public List<UssdMenuItem> listMenuItems() {
+		return ussdMenuDao.listMenuItems();
 	}
 
 	@Transactional(propagation = Propagation.REQUIRED, readOnly = false)
-	public void addUssdMenuItem(UssdMenuItem ussdMenuItem) {
-		ussdMenuDao.addUssdMenuItem(ussdMenuItem);
+	public void addMenuItem(UssdMenuItem ussdMenuItem) {
+		ussdMenuDao.addMenuItem(ussdMenuItem);
 	}
 
 	@Transactional
-	public void removeUssdMenuItem(Integer menuItemId) {
-		ussdMenuDao.removeUssdMenuItem(menuItemId);
+	public void deleteMenuItem(Long menuItemId) {
+		ussdMenuDao.deleteMenuItem(menuItemId);
 	}
 
 	@Transactional
-	public List<UssdRequest> listUssdRequests() {
-		return ussdMenuDao.listUssdRequests();
+	public void editExistingMenuItem(UssdMenuItem menuItem) {
+		ussdMenuDao.editMenuItem(menuItem);
 	}
 
+	@Transactional
+	public UssdMenuItem getExistingMenuItem(Long menuItemId) {
+		return ussdMenuDao.getExistingMenuItem(menuItemId);
+	}
+
+	@Transactional(propagation = Propagation.REQUIRED, readOnly = false)
+	public void addPredefInput(UssdPredefInput predefInput) {
+		ussdMenuDao.addPredefInput(predefInput);
+	}
+
+	@Transactional
+	public List<UssdPredefInput> listPredefInputs() {
+		return ussdMenuDao.listPredefInputs();
+	}
+
+	@Transactional
+	public List<UssdPredefInputItem> listPredefInputItemsByPredefInputId(
+			long predefInputId) {
+		return ussdMenuDao.listPredefInputItemsByPredefInputId(predefInputId);
+	}
+
+	@Transactional
+	public void editPredefInput(UssdPredefInput predefInput) {
+		ussdMenuDao.editPredefInput(predefInput);
+	}
+
+	@Transactional
+	public UssdPredefInput getExistingPredefInput(Long predefInputId) {
+		return ussdMenuDao.getExistingPredefInput(predefInputId);
+	}
+
+	@Transactional
+	// (propagation = Propagation.REQUIRED, readOnly = false)
+	public void deleteExistingPredefInput(Long predefInputId) {
+		ussdMenuDao.deleteExistingPredefInput(predefInputId);
+
+	}
+
+	@Transactional
+	public List<UssdKeywordStep> listKeywordStepByKeywordId(Long keywordId) {
+		return ussdMenuDao.listKeywordStepByKeywordId(keywordId);
+	}
+
+	@Transactional
+	public void activateExistingMenuItem(Long menuItemId) {
+		ussdMenuDao.activateExistingMenuItem(menuItemId);
+
+	}
+
+	@Transactional
+	public void deactivateExistingMenuItem(Long menuItemId) {
+		ussdMenuDao.deactivateExistingMenuItem(menuItemId);
+
+	}
+
+	@Transactional
+	public void activateExistingKeyword(Long keywordId) {
+		ussdMenuDao.activateExistingKeyword(keywordId);
+
+	}
+
+	@Transactional
+	public void deactivateExistingKeyword(Long keywordId) {
+		ussdMenuDao.deactivateExistingKeyword(keywordId);
+
+	}
+
+	@Transactional
+	public void activateExistingPredefInputItem(Long predefInputItemId) {
+		ussdMenuDao.activateExistingPredefInputItem(predefInputItemId);
+
+	}
+
+	@Transactional
+	public void deactivateExistingPredefInputItem(Long predefInputItemId) {
+		ussdMenuDao.deactivateExistingPredefInputItem(predefInputItemId);
+
+	}
+
+	@Override
+	public void deleteExistingPredefInputItem(Long inputItemId) {
+		ussdMenuDao.deleteExistingPredefInputItem(inputItemId);
+
+	}
+
+	@Override
+	public UssdPredefInputItem getExistingPredefInputItem(Long predefInputItemId) {
+		return ussdMenuDao.getExistingPredefInputItem(predefInputItemId);
+	}
+
+	@Override
+	public List<UssdMenuItem> getChildMenuItemsForParentMenuItem(Long menuItemId) {
+		return ussdMenuDao.getChildMenuItemsForParentMenuItem(menuItemId);
+	}
+
+	@Override
+	public boolean checkIfDuplicateStepMenuName(String stepMenuName,
+			Long keywordId) {
+		return ussdMenuDao
+				.checkIfDuplicateStepMenuName(stepMenuName, keywordId);
+	}
+
+	@Override
+	public boolean checkIfDuplicateInputItemName(String predefInputItemName,
+			Long predefInputId) {
+		return ussdMenuDao.checkIfDuplicateInputItemName(predefInputItemName,
+				predefInputId);
+	}
+
+	@Override
+	public boolean checkIfDuplicateInputItemCode(String predefInputItemCode,
+			Long predefInputId) {
+		return ussdMenuDao.checkIfDuplicateInputItemCode(predefInputItemCode,
+				predefInputId);
+	}
+
+	@Override
+	public boolean checkIfDuplicateInputItemOrder(Integer predefInputItemOrder,
+			Long predefInputId) {
+		return ussdMenuDao.checkIfDuplicateInputItemOrder(predefInputItemOrder,
+				predefInputId);
+	}
+
+	@Override
+	public boolean checkIfDuplicatePredefInputName(String predefInputName,
+			Long predefInputId) {
+		return ussdMenuDao.checkIfDuplicatePredefInputName(predefInputName,
+				predefInputId);
+	}
+
+	@Override
+	public boolean checkIfDuplicateMenuName(String menuItemName, Long menuItemId) {
+		return ussdMenuDao.checkIfDuplicateMenuName(menuItemName, menuItemId);
+	}
+
+	@Override
+	public boolean checkIfDuplicateKeywordName(String keywordName,
+			Long keywordId) {
+		return ussdMenuDao.checkIfDuplicateKeywordName(keywordName, keywordId);
+	}
+
+	@Override
+	public boolean checkIfDuplicateKeywordCode(String keywordCode,
+			Long keywordId) {
+		return ussdMenuDao.checkIfDuplicateKeywordName(keywordCode, keywordId);
+	}
 }
\ No newline at end of file
diff --git a/src/metomeui/validator/MsisdnSettingsValidator.java b/src/metomeui/validator/MsisdnSettingsValidator.java
index 3963ec2..1ffa468 100644
--- a/src/metomeui/validator/MsisdnSettingsValidator.java
+++ b/src/metomeui/validator/MsisdnSettingsValidator.java
@@ -5,7 +5,6 @@
 import org.springframework.stereotype.Component;
 import org.springframework.validation.Validator;
 import org.springframework.validation.Errors;
-import org.springframework.validation.ValidationUtils;
 
 @Component("msisdnSettingsValidator")
 public class MsisdnSettingsValidator implements Validator {
diff --git a/src/metomeui/validator/UssdKeywordStepValidator.java b/src/metomeui/validator/UssdKeywordStepValidator.java
index 975780e..542ffb0 100644
--- a/src/metomeui/validator/UssdKeywordStepValidator.java
+++ b/src/metomeui/validator/UssdKeywordStepValidator.java
@@ -1,10 +1,11 @@
 package metomeui.validator;
 
+import metomeui.dao.UssdMenuDao;
+import metomeui.dao.UssdMenuDaoImplementation;
 import metomeui.model.UssdKeywordStep;
-import metomeui.model.UssdMenuItem;
-import metomeui.web.HelloController;
-
-import org.apache.log4j.Logger;
+import metomeui.service.UssdMenuService;
+import metomeui.service.UssdMenuServiceImplementation;
+import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
 import org.springframework.validation.Validator;
 import org.springframework.validation.Errors;
@@ -13,36 +14,48 @@
 @Component("ussdKeywordStepValidator")
 public class UssdKeywordStepValidator implements Validator {
 
-	private static Logger logger = Logger
-			.getLogger(UssdKeywordStepValidator.class);
+	@Autowired
+	UssdMenuService ussdMenuService = new UssdMenuServiceImplementation();
+	@Autowired
+	UssdMenuDao ussdMenuDao = new UssdMenuDaoImplementation();
 
 	@Override
 	public boolean supports(Class<?> clazz) {
 		return UssdKeywordStep.class.isAssignableFrom(clazz);
 	}
 
-	@Override
-	public void validate(Object target, Errors errors) {
+	public void validate(Object target, Errors errors, Long keywordId) {
 
 		UssdKeywordStep ussdKeywordStep = (UssdKeywordStep) target;
 
 		ValidationUtils.rejectIfEmptyOrWhitespace(errors, "stepMenuName",
 				"stepMenuName.required");
-		ValidationUtils.rejectIfEmptyOrWhitespace(errors, "stepMenuNumber",
-				"stepMenuNumber.required");
 
-		if (!(ussdKeywordStep.getStepMenuNumber() == null)) {
-			if (UssdMenuValidator.check(ussdKeywordStep
-					.getStepMenuNumber().toString())) {
-				errors.rejectValue("stepMenuNumber",
-						"stepMenuNumber.wrongformat");
+		if (keywordId != null) {
+			if ((ussdKeywordStep.getStepMenuName() != null)
+					|| (ussdKeywordStep.getStepMenuName() != "")) {
+				if ((ussdMenuService.checkIfDuplicateStepMenuName(
+						ussdKeywordStep.getStepMenuName(), keywordId)) == true) {
+					errors.rejectValue("stepMenuName", "stepMenuName.duplicate");
+				}
+			}
+
+			if (null == ussdKeywordStep.getStepMenuNumber()) {
+				ValidationUtils.rejectIfEmptyOrWhitespace(errors,
+						"stepMenuNumber", "stepMenuNumber.required");
+			} else if ((null != ussdKeywordStep.getStepMenuNumber())
+					|| (ussdKeywordStep.getStepMenuNumber().toString() != "")) {
+				if ((ussdMenuDao.checkIfDuplicateStepMenuNumber(
+						ussdKeywordStep.getStepMenuNumber(), keywordId)) == true) {
+					errors.rejectValue("stepMenuNumber",
+							"stepMenuNumber.duplicate");
+				}	
+				/**
+				 * TODO: Add code to check if the user input is a number
+				 *  
+				 */
 			}
 		}
-
-		if (ussdKeywordStep.getKeywordId() == 0) {
-			errors.rejectValue("keywordId", "keywordId.required");
-		}
-
 		if (ussdKeywordStep.getUseFixedValueFlag() == null) {
 			ussdKeywordStep.setUseFixedValueFlag(0);
 		}
@@ -57,22 +70,22 @@
 
 		if (ussdKeywordStep.getHasPredefInputFlag() == null) {
 			ussdKeywordStep.setHasPredefInputFlag(0);
-			ussdKeywordStep.setPredefInputId(null);
 		}
 
 		if (ussdKeywordStep.getUseFixedValueFlag() == 1) {
 			ValidationUtils.rejectIfEmptyOrWhitespace(errors, "fixedValue",
 					"fixedValue.required");
 		}
-		if (ussdKeywordStep.getHasPredefInputFlag() == 1) {
-			if (ussdKeywordStep.getPredefInputId().equalsIgnoreCase(null)) {
-				errors.rejectValue("predefInputId", "predefInputId.required");
-			}
-		}
 
 		if ((ussdKeywordStep.getIsFirstStepFlag() == 1)
 				&& (ussdKeywordStep.getIsLastStepFlag() == 1)) {
 			errors.reject("stepPosition.required");
 		}
 	}
+
+	@Override
+	public void validate(Object target, Errors errors) {
+		validate(target, errors, null);
+
+	}
 }
diff --git a/src/metomeui/validator/UssdMenuItemValidator.java b/src/metomeui/validator/UssdMenuItemValidator.java
index 5127b1c..279483b 100644
--- a/src/metomeui/validator/UssdMenuItemValidator.java
+++ b/src/metomeui/validator/UssdMenuItemValidator.java
@@ -1,7 +1,12 @@
 package metomeui.validator;
 
+import metomeui.dao.UssdMenuDao;
+import metomeui.dao.UssdMenuDaoImplementation;
 import metomeui.model.UssdMenuItem;
+import metomeui.service.UssdMenuService;
+import metomeui.service.UssdMenuServiceImplementation;
 
+import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
 import org.springframework.validation.Validator;
 import org.springframework.validation.Errors;
@@ -10,31 +15,38 @@
 @Component("ussdMenuItemValidator")
 public class UssdMenuItemValidator implements Validator {
 
+	@Autowired
+	UssdMenuService ussdMenuService = new UssdMenuServiceImplementation();
+	@Autowired
+	UssdMenuDao ussdMenuDao = new UssdMenuDaoImplementation();
+
 	@Override
 	public boolean supports(Class<?> clazz) {
 		return UssdMenuItem.class.isAssignableFrom(clazz);
 	}
 
-	@Override
-	public void validate(Object target, Errors errors) {
+	public void validate(Object target, Errors errors, Long menuItemId) {
 
 		UssdMenuItem ussdMenuItem = (UssdMenuItem) target;
-		
+
 		ValidationUtils.rejectIfEmptyOrWhitespace(errors, "menuItemName",
 				"menuItemName.required");
 		ValidationUtils.rejectIfEmptyOrWhitespace(errors, "menuItemOrder",
 				"menuItemOrder.required");
-		if (ussdMenuItem.getMenuItemParentId() == 0) {
-			errors.rejectValue("menuItemParentId", "menuItemParentId.required");
+
+		if (menuItemId != null) {
+			if ((ussdMenuItem.getMenuItemName() != null)
+					|| (ussdMenuItem.getMenuItemName() != "")) {
+				if ((ussdMenuService.checkIfDuplicateMenuName(
+						ussdMenuItem.getMenuItemName(), menuItemId)) == true) {
+					errors.rejectValue("menuItemName", "menuItemName.duplicate");
+				}
+			}
 		}
-		if (ussdMenuItem.getMenuItemKeywordId() == 0) {
-			errors.rejectValue("menuItemKeywordId", "menuItemKeywordId.required");
-		}
-//		if (ussdMenuItem.getMenuItemName().equalsIgnoreCase(null)) {
-//			errors.rejectValue("menuItemName", "menuItemName.wrongformat");
-//		}
-//		if (ussdMenuItem.getMenuItemOrder().(null)) {
-//			errors.rejectValue("menuItemName", "menuItemName.wrongformat");
-//		}
+	}
+
+	@Override
+	public void validate(Object target, Errors errors) {
+		validate(target, errors, null);
 	}
 }
diff --git a/src/metomeui/validator/UssdPredefInputItemValidator.java b/src/metomeui/validator/UssdPredefInputItemValidator.java
index 927eeba..474b8cf 100644
--- a/src/metomeui/validator/UssdPredefInputItemValidator.java
+++ b/src/metomeui/validator/UssdPredefInputItemValidator.java
@@ -1,7 +1,12 @@
 package metomeui.validator;
 
+import metomeui.dao.UssdMenuDao;
+import metomeui.dao.UssdMenuDaoImplementation;
 import metomeui.model.UssdPredefInputItem;
+import metomeui.service.UssdMenuService;
+import metomeui.service.UssdMenuServiceImplementation;
 
+import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
 import org.springframework.validation.Validator;
 import org.springframework.validation.Errors;
@@ -10,13 +15,17 @@
 @Component("ussdPredefInputItemValidator")
 public class UssdPredefInputItemValidator implements Validator {
 
+	@Autowired
+	UssdMenuService ussdMenuService = new UssdMenuServiceImplementation();
+	@Autowired
+	UssdMenuDao ussdMenuDao = new UssdMenuDaoImplementation();
+
 	@Override
 	public boolean supports(Class<?> clazz) {
 		return UssdPredefInputItem.class.isAssignableFrom(clazz);
 	}
 
-	@Override
-	public void validate(Object target, Errors errors) {
+	public void validate(Object target, Errors errors, Long predefInputId) {
 
 		UssdPredefInputItem ussdPredefInputItem = (UssdPredefInputItem) target;
 
@@ -24,13 +33,57 @@
 				"predefInputItemName", "predefInputItemName.required");
 		ValidationUtils.rejectIfEmptyOrWhitespace(errors,
 				"predefInputItemCode", "predefInputItemCode.required");
-		ValidationUtils.rejectIfEmptyOrWhitespace(errors,
-				"predefInputItemOrder", "predefInputItemOrder.required");
-		if (ussdPredefInputItem.getPredefInputId() == 0) {
-			errors.rejectValue("predefInputId", "predefInputId.required");
+
+		if (ussdPredefInputItem.getPredefInputItemCode().length() > 10) {
+			errors.rejectValue("predefInputItemCode",
+					"predefInputItemCode.lengthLimit");
 		}
-		if (ussdPredefInputItem.getPredefInputItemEnabledFlag()==null) {
+
+		if (null == ussdPredefInputItem.getPredefInputItemOrder()) {
+			ValidationUtils.rejectIfEmptyOrWhitespace(errors,
+					"predefInputItemOrder", "predefInputItemOrder.required");
+		}
+
+		if (predefInputId != null) {
+			if ((ussdPredefInputItem.getPredefInputItemName() != null)
+					|| (ussdPredefInputItem.getPredefInputItemName() != "")) {
+				if ((ussdMenuService.checkIfDuplicateInputItemName(
+						ussdPredefInputItem.getPredefInputItemName(),
+						predefInputId)) == true) {
+					errors.rejectValue("predefInputItemName",
+							"predefInputItemName.duplicate");
+				}
+			}
+			if ((ussdPredefInputItem.getPredefInputItemCode() != null)
+					|| (ussdPredefInputItem.getPredefInputItemCode() != "")) {
+				if ((ussdMenuService.checkIfDuplicateInputItemCode(
+						ussdPredefInputItem.getPredefInputItemCode(),
+						predefInputId)) == true) {
+					errors.rejectValue("predefInputItemCode",
+							"predefInputItemCode.duplicate");
+				}
+			}
+			if ((ussdPredefInputItem.getPredefInputItemOrder() != null)
+					|| (ussdPredefInputItem.getPredefInputItemOrder()
+							.toString() != "")) {
+				if ((ussdMenuService.checkIfDuplicateInputItemOrder(
+						ussdPredefInputItem.getPredefInputItemOrder(),
+						predefInputId)) == true) {
+					errors.rejectValue("predefInputItemOrder",
+							"predefInputItemOrder.duplicate");
+				}
+			}
+
+		}
+
+		if (ussdPredefInputItem.getPredefInputItemEnabledFlag() == null) {
 			ussdPredefInputItem.setPredefInputItemEnabledFlag(0);
-		}	
+		}
+	}
+
+	@Override
+	public void validate(Object target, Errors errors) {
+		validate(target, errors, null);
+
 	}
 }
diff --git a/src/metomeui/validator/UssdPredefInputValidator.java b/src/metomeui/validator/UssdPredefInputValidator.java
index 2182a75..1faa89d 100644
--- a/src/metomeui/validator/UssdPredefInputValidator.java
+++ b/src/metomeui/validator/UssdPredefInputValidator.java
@@ -15,10 +15,15 @@
 		return UssdPredefInput.class.isAssignableFrom(clazz);
 	}
 
-	@Override
-	public void validate(Object target, Errors errors) {
+	public void validate(Object target, Errors errors, Long menuId) {
 
 		ValidationUtils.rejectIfEmptyOrWhitespace(errors, "predefInputName",
 				"predefInputName.required");
 	}
+	
+	@Override
+	public void validate(Object target, Errors errors) {
+		validate(target, errors, null);
+
+	}
 }
diff --git a/src/metomeui/validator/UssdTransactionKeywordValidator.java b/src/metomeui/validator/UssdTransactionKeywordValidator.java
index 3b7f36e..dc99423 100644
--- a/src/metomeui/validator/UssdTransactionKeywordValidator.java
+++ b/src/metomeui/validator/UssdTransactionKeywordValidator.java
@@ -30,9 +30,14 @@
 			ussdTransactionKeyword.setKeywordEnabledFlag(0);
 		}
 		
-		if (ussdTransactionKeyword.getKeywordId() == 0) {
+		if (ussdTransactionKeyword.getKeywordCode().length()>10){
+			errors.rejectValue("keywordName",
+					"keywordCode.lengthLimit");
+			
+		}
+		/*if (ussdTransactionKeyword.getKeywordId() == 0) {
 			errors.rejectValue("keywordName",
 					"keywordName.required");
-		}
+		}*/
 	}
 }
diff --git a/src/metomeui/web/ChargeSetupController.java b/src/metomeui/web/ChargeSetupController.java
new file mode 100644
index 0000000..fb7e28f
--- /dev/null
+++ b/src/metomeui/web/ChargeSetupController.java
@@ -0,0 +1,59 @@
+package metomeui.web;
+
+import java.util.List;
+import java.util.Map;
+
+import metomeui.model.AccountType;
+import metomeui.model.Customer;
+import metomeui.model.UssdPredefInput;
+import metomeui.service.SystemSettingsService;
+
+import org.apache.log4j.Logger;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Controller;
+import org.springframework.validation.BindingResult;
+import org.springframework.web.bind.annotation.ModelAttribute;
+import org.springframework.web.bind.annotation.PathVariable;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestMethod;
+
+public class ChargeSetupController {
+
+/*
+	@Autowired
+	private SystemSettingsService chargeSetupService;
+	
+	@RequestMapping("/accounttypes")
+	public String listAccountType(Map<String, Object> map) {
+		map.put("accountTypes", new AccountType());
+		map.put("accountTypesList", chargeSetupService.listAccountTypes());
+		return "accounttypes";
+	}
+	
+	@RequestMapping(value = "/addaccounttypes", method = RequestMethod.GET)
+	public String addAccountType(Map<String, Object> map) {
+		map.put("accounttype", new AccountType());
+		return "addaccounttypes";
+	}
+
+	@RequestMapping(value = "/addaccounttypes", method = RequestMethod.POST)
+	public String addAccountType(@ModelAttribute("accountType") AccountType accountType,
+			BindingResult result) {
+		chargeSetupService.addAccountType(accountType);
+		return "redirect:/accounttypes.html";
+	}
+
+	@RequestMapping("/removeaccounttype/{accountTypeId}")
+	public String deleteAccountType(@PathVariable("accountTypeId") Integer accountTypeId) {
+		chargeSetupService.removeAccountType(accountTypeId);
+		logger.info("Returning hello view");
+		return "redirect:/accounttypes.html";
+	}
+
+	// Create model attributes for linking across models
+	@ModelAttribute("accountTypeList")
+	public List<AccountType> populateAccountTypeList() {
+		return chargeSetupService.listAccountTypes();*/
+	//}
+
+}
diff --git a/src/metomeui/web/MsisdnSettingsController.java b/src/metomeui/web/MsisdnSettingsController.java
deleted file mode 100644
index d557510..0000000
--- a/src/metomeui/web/MsisdnSettingsController.java
+++ /dev/null
@@ -1,55 +0,0 @@
-package metomeui.web;
-
-import java.util.Map;
-
-import javax.validation.Valid;
-
-import metomeui.model.MsisdnSettings;
-import metomeui.model.PasswordSettings;
-import metomeui.validator.MsisdnSettingsValidator;
-import metomeui.validator.PasswordSettingsValidator;
-
-import org.apache.log4j.Logger;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.stereotype.Controller;
-import org.springframework.validation.BindingResult;
-import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.bind.annotation.RequestMethod;
-
-@Controller
-@RequestMapping("/auimsisdnsettings.html")
-public class MsisdnSettingsController {
-	
-	private static Logger logger = Logger
-			.getLogger(MsisdnSettingsController.class);
-
-	@Autowired
-    private MsisdnSettingsValidator msisdnSettingsValidator;
-
-    public void setMsisdnSettingsValidator(
-    		MsisdnSettingsValidator msisdnSettingsValidator) {
-            this.msisdnSettingsValidator = msisdnSettingsValidator;
-    }
-
-	@RequestMapping(method = RequestMethod.GET)
-	public String showForm(Map<String, MsisdnSettings> model) {
-		MsisdnSettings msisdnSettings = new MsisdnSettings();
-		model.put("msisdnSettings", msisdnSettings);
-		return "auimsisdnsettings";
-	}
-
-	@RequestMapping(method = RequestMethod.POST)
-		public String processForm(@Valid MsisdnSettings msisdnSettings, BindingResult results, Map<String, MsisdnSettings> model) {
-				msisdnSettingsValidator.validate(msisdnSettings, results);
-			//passwordSettings = (PasswordSettings) model.get("passwordSettings");
-			if (results.hasErrors()) {
-				return "auimsisdnsettings";
-			}
-		
-				model.put("msisdnSettings", msisdnSettings);
-				logger.info("Successful Login!! Now onto landing Page!!");
-				return "loginsuccess";
-		}
-
-
-}
diff --git a/src/metomeui/web/SystemConfigurationsController.java b/src/metomeui/web/SystemConfigurationsController.java
new file mode 100644
index 0000000..988c281
--- /dev/null
+++ b/src/metomeui/web/SystemConfigurationsController.java
@@ -0,0 +1,342 @@
+package metomeui.web;
+
+import java.util.List;
+import java.util.Map;
+
+import javax.validation.Valid;
+
+import metomeui.model.AccountType;
+import metomeui.model.Language;
+import metomeui.model.MemoGroup;
+import metomeui.model.Message;
+import metomeui.model.MsisdnSettings;
+import metomeui.model.User;
+import metomeui.service.SystemSettingsService;
+import metomeui.service.SystemSettingsServiceImplementation;
+import metomeui.validator.MsisdnSettingsValidator;
+
+import org.apache.log4j.Logger;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Controller;
+import org.springframework.validation.BindingResult;
+import org.springframework.web.bind.annotation.ModelAttribute;
+import org.springframework.web.bind.annotation.PathVariable;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestMethod;
+
+@Controller
+public class SystemConfigurationsController {
+
+	private static Logger logger = Logger
+			.getLogger(SystemConfigurationsController.class);
+
+	@Autowired
+	private MsisdnSettingsValidator msisdnSettingsValidator;
+	@Autowired
+	SystemSettingsService systemSettingsService = new SystemSettingsServiceImplementation();
+
+	public void setMsisdnSettingsValidator(
+			MsisdnSettingsValidator msisdnSettingsValidator) {
+		this.msisdnSettingsValidator = msisdnSettingsValidator;
+	}
+
+	@RequestMapping("/users")
+	public String listUser(Map<String, Object> map) {
+		map.put("user", new User());
+		map.put("userList", systemSettingsService.listUsers());
+		return "users";
+	}
+
+	@RequestMapping(value = "/adduser", method = RequestMethod.GET)
+	public String addUserLink(Map<String, Object> map) {
+		map.put("user", new User());
+		return "adduser";
+	}
+
+	@RequestMapping(value = "/adduser", method = RequestMethod.POST)
+	public String addUser(@ModelAttribute("user") User user,
+			BindingResult result) {
+		systemSettingsService.addUser(user);
+		return "redirect:/users.html";
+	}
+	
+	@RequestMapping(value = "/edituser/{userId}", method = RequestMethod.GET)
+	public String editUserLink(@PathVariable long userId,
+			Map<String, Object> map) {
+		User existingUser = systemSettingsService
+				.getExistingUser(userId);
+
+		map.put("user", existingUser);
+		return "edituser";
+	}
+
+	@RequestMapping(value = "/edituser/{userId}", method = RequestMethod.POST)
+	public String postChangesToMessage(@PathVariable long userId,
+			@ModelAttribute("user") User user, BindingResult result) {
+		// Assign id
+		user.setUserId(userId);
+		systemSettingsService.editExistingUser(user);
+		return "redirect:/users.html";
+	}
+
+	@RequestMapping("/removeUser/{userId}")
+	public String deleteUser(@PathVariable("userId") Integer userId) {
+		systemSettingsService.removeUser(userId);
+		logger.info("Returning hello view");
+		return "redirect:/users.html";
+	}
+
+	@RequestMapping("/listmessages")
+	public String listMessages(Map<String, Object> map) {
+		map.put("message", new Message());
+		map.put("messagesList", systemSettingsService.listMessages());
+		return "listmessages";
+	}
+
+	@RequestMapping(value = "/addmessage", method = RequestMethod.GET)
+	public String addMessageLink(Map<String, Object> map) {
+		map.put("message", new Message());
+		return "addmessage";
+	}
+
+	@RequestMapping(value = "/addmessage", method = RequestMethod.POST)
+	public String addMessage(@ModelAttribute("message") Message message,
+			BindingResult result) {
+
+		systemSettingsService.addMessage(message);
+		return "redirect:/listmessages.html";
+	}
+
+	@RequestMapping(value = "/editmessage/{messageId}", method = RequestMethod.GET)
+	public String editMessageLink(@PathVariable long messageId,
+			Map<String, Object> map) {
+		Message existingMessage = systemSettingsService
+				.getExistingMessage(messageId);
+
+		map.put("message", existingMessage);
+		return "editmessage";
+	}
+
+	@RequestMapping(value = "/editmessage/{messageId}", method = RequestMethod.POST)
+	public String postChangesToMessage(@PathVariable long messageId,
+			@ModelAttribute("message") Message message, BindingResult result) {
+		// Assign id
+		message.setMessageId(messageId);
+		systemSettingsService.editExistingMessage(message);
+		return "redirect:/listmessages.html";
+	}
+	
+	@RequestMapping("/removemessage/{messageId}")
+	public String deleteMessage(@PathVariable("messageId") Integer messageId) {
+		systemSettingsService.removeMessage(messageId);
+		return "redirect:/messages.html";
+	}
+
+	@RequestMapping("/listlanguages")
+	public String listLanguages(Map<String, Object> map) {
+		map.put("language", new Language());
+		map.put("languagesList", systemSettingsService.listLanguages());
+		return "listlanguages";
+	}
+
+	@RequestMapping(value = "/addlanguage", method = RequestMethod.GET)
+	public String addLanguageLink(Map<String, Object> map) {
+		map.put("language", new Language());
+		return "addlanguages";
+	}
+
+	@RequestMapping(value = "/addlanguage", method = RequestMethod.POST)
+	public String addLanguage(@ModelAttribute("language") Language language,
+			BindingResult result) {
+
+		/*
+		 * systemSettingsService.validate(language, result); if
+		 * (result.hasErrors()) { return "addlanguages"; }
+		 */
+
+		systemSettingsService.addLanguage(language);
+		return "redirect:/listlanguages.html";
+	}
+
+	@RequestMapping(value = "/editlanguage/{languageId}", method = RequestMethod.GET)
+	public String editLanguageLink(@PathVariable long languageId,
+			Map<String, Object> map) {
+		Language existingLanguage = systemSettingsService
+				.getExistingLanguage(languageId);
+
+		map.put("language", existingLanguage);
+		return "editlanguage";
+	}
+
+	
+	@RequestMapping(value = "/editlanguage/{languageId}", method = RequestMethod.POST)
+	public String postChangesToLanguage(@PathVariable long languageId,
+			@ModelAttribute("language") Language language, BindingResult result) {
+		// Assign id
+		language.setLanguageId(languageId);
+		systemSettingsService.editExistingLanguage(language);
+		return "redirect:/listlanguages.html";
+	}
+	
+	@RequestMapping("/removelanguage/{languageId}")
+	public String deleteLanguage(@PathVariable("languageId") Integer languageId) {
+		systemSettingsService.removeLanguage(languageId);
+		return "redirect:/languages.html";
+	}
+
+	@RequestMapping("/listaccounttypes")
+	public String listAccountTypes(Map<String, Object> map) {
+		map.put("accountType", new AccountType());
+		map.put("accountTypesList", systemSettingsService.listAccountTypes());
+		return "listaccounttypes";
+	}
+
+	@RequestMapping(value = "/addaccounttype", method = RequestMethod.GET)
+	public String addAccountTypeLink(Map<String, Object> map) {
+		map.put("accountType", new AccountType());
+		return "addaccounttype";
+	}
+
+	@RequestMapping(value = "/addaccounttype", method = RequestMethod.POST)
+	public String addAccountType(
+			@ModelAttribute("accountType") AccountType accountType,
+			BindingResult result) {
+
+		/*
+		 * systemSettingsService.validate(accountType, result); if
+		 * (result.hasErrors()) { return "addaccounttypes"; }
+		 */
+
+		systemSettingsService.addAccountType(accountType);
+		return "redirect:/listaccounttype.html";
+	}
+
+	@RequestMapping(value = "/editaccounttype/{accountTypeId}", method = RequestMethod.GET)
+	public String editAccountTypeLink(@PathVariable long accountTypeId,
+			Map<String, Object> map) {
+		AccountType existingAccountType = systemSettingsService
+				.getExistingAccountType(accountTypeId);
+
+		map.put("accountType", existingAccountType);
+		return "editaccounttype";
+	}
+
+	@RequestMapping(value = "/editaccounttype/{accountTypeId}", method = RequestMethod.POST)
+	public String postChangesToAccountType(@PathVariable long accountTypeId,
+			@ModelAttribute("accountType") AccountType accountType,
+			BindingResult result) {
+		// Assign id
+		accountType.setAccountTypeId(accountTypeId);
+		systemSettingsService.editExistingAccountType(accountType);
+		return "redirect:/listaccounttypes.html";
+	}
+
+	@RequestMapping("/removeaccounttype/{accountTypeId}")
+	public String deleteAccountType(
+			@PathVariable("accountTypeId") Integer accountTypeId) {
+		systemSettingsService.removeLanguage(accountTypeId);
+		return "redirect:/listaccounttypes.html";
+	}
+
+	@RequestMapping("/listmemogroups")
+	public String listMemoGroups(Map<String, Object> map) {
+		map.put("memoGroup", new MemoGroup());
+		map.put("memoGroupsList", systemSettingsService.listMemoGroups());
+		return "listmemogroups";
+	}
+
+	@RequestMapping(value = "/addmemogroup", method = RequestMethod.GET)
+	public String addMemoGroupLink(Map<String, Object> map) {
+		map.put("memoGroup", new MemoGroup());
+		return "addmemogroup";
+	}
+
+	@RequestMapping(value = "/addmemogroup", method = RequestMethod.POST)
+	public String addMemoGroup(
+			@ModelAttribute("memoGroup") MemoGroup memoGroup,
+			BindingResult result) {
+
+		/*
+		 * systemSettingsService.validate(language, result); if
+		 * (result.hasErrors()) { return "addlanguages"; }
+		 */
+
+		systemSettingsService.addMemoGroup(memoGroup);
+		return "redirect:/listmemogroup.html";
+	}
+
+	@RequestMapping(value = "/editmemogroup/{memogroupId}", method = RequestMethod.GET)
+	public String editMemoGroupLink(@PathVariable long memoGroupId,
+			Map<String, Object> map) {
+		MemoGroup existingMemoGroup = systemSettingsService
+				.getExistingMemoGroup(memoGroupId);
+
+		map.put("memogroup", existingMemoGroup);
+		return "editmemogroup";
+	}
+
+	@RequestMapping(value = "/editmemogroup/{memogroupId}", method = RequestMethod.POST)
+	public String postChangesToMemoGroup(@PathVariable long memoGroupId,
+			@ModelAttribute("memogroup") MemoGroup memoGroup, BindingResult result) {
+		// Assign id
+		memoGroup.setMemoGroupId(memoGroupId);
+		systemSettingsService.editExistingMemoGroup(memoGroup);
+		return "redirect:/listmemogroups.html";
+	}
+	
+	@RequestMapping("/removememogroup/{memoGroupId}")
+	public String deleteMemoGroup(
+			@PathVariable("memoGroupId") Integer memoGroupId) {
+		systemSettingsService.removeMemoGroup(memoGroupId);
+		return "redirect:/listmemogroups.html";
+	}
+
+	@RequestMapping(method = RequestMethod.GET)
+	public String showForm(Map<String, MsisdnSettings> model) {
+		MsisdnSettings msisdnSettings = new MsisdnSettings();
+		model.put("msisdnSettings", msisdnSettings);
+		return "auimsisdnsettings";
+	}
+
+	@RequestMapping(method = RequestMethod.POST)
+	public String processForm(@Valid MsisdnSettings msisdnSettings,
+			BindingResult results, Map<String, MsisdnSettings> model) {
+		msisdnSettingsValidator.validate(msisdnSettings, results);
+		// passwordSettings = (PasswordSettings) model.get("passwordSettings");
+		if (results.hasErrors()) {
+			return "auimsisdnsettings";
+		}
+
+		model.put("msisdnSettings", msisdnSettings);
+		logger.info("Successful Login!! Now onto landing Page!!");
+		return "loginsuccess";
+	}
+
+	
+	
+	/*// Create model attributes for linking across models
+	@ModelAttribute("accountTypesList")
+	public List<AccountType> populateAccountTypesList() {
+		return systemSettingsService.listAccountTypes();
+	}
+
+	@ModelAttribute("memoGroupsList")
+	public List<MemoGroup> populateMemoGroupList() {
+		return systemSettingsService.listMemoGroups();
+	}
+
+	@ModelAttribute("messagesList")
+	public List<Message> populateMessageList() {
+		return systemSettingsService.listMessages();
+	}
+
+	@ModelAttribute("languagesList")
+	public List<Language> populateLanguageList() {
+		return systemSettingsService.listLanguages();
+	}*/
+
+	@ModelAttribute("usersList")
+	public List<User> populateUserList() {
+		return systemSettingsService.listUsers();
+	}
+}
diff --git a/src/metomeui/web/UserController.java b/src/metomeui/web/UserController.java
deleted file mode 100644
index d2f00fe..0000000
--- a/src/metomeui/web/UserController.java
+++ /dev/null
@@ -1,46 +0,0 @@
-package metomeui.web;
-
-import java.util.Map;
-
-import metomeui.model.User;
-import metomeui.service.UserService;
-
-import org.apache.log4j.Logger;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.stereotype.Controller;
-import org.springframework.validation.BindingResult;
-import org.springframework.web.bind.annotation.ModelAttribute;
-import org.springframework.web.bind.annotation.PathVariable;
-import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.bind.annotation.RequestMethod;
-
-@Controller
-public class UserController {
-
-	private static Logger logger = Logger.getLogger(UserController.class);
-	
-	@Autowired
-	private UserService userService;
-	
-
-	@RequestMapping("/users")
-	public String listUser(Map<String, Object> map) {
-		map.put("user", new User());
-		map.put("userList", userService.listUsers());
-		return "users";
-	}
-
-	@RequestMapping(value = "/adduser", method = RequestMethod.POST)
-	public String addUser(@ModelAttribute("user") User user,
-			BindingResult result) {
-		userService.addUser(user);
-		return "redirect:/users.html";
-	}
-
-	@RequestMapping("/removeUser/{userId}")
-	public String deleteUser(@PathVariable("userId") Integer userId) {
-		userService.removeUser(userId);
-		logger.info("Returning hello view");
-		return "redirect:/users.html";
-	}
-}
\ No newline at end of file
diff --git a/src/metomeui/web/UserLoginController.java b/src/metomeui/web/UserLoginController.java
index d167354..1b2cc26 100644
--- a/src/metomeui/web/UserLoginController.java
+++ b/src/metomeui/web/UserLoginController.java
@@ -1,54 +1,66 @@
 package metomeui.web;
 
-import metomeui.model.User;
-
-import org.apache.log4j.Logger;
-import org.springframework.stereotype.Controller;
-import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.bind.annotation.RequestMethod;
-import org.springframework.validation.BindingResult;
-
-import metomeui.web.UserLoginController;
-
 import java.util.Map;
+
 import javax.validation.Valid;
 
+import metomeui.model.Login;
+import metomeui.model.User;
+import metomeui.service.SystemSettingsService;
+import metomeui.service.SystemSettingsServiceImplementation;
+
+import org.apache.log4j.Logger;
+import org.hibernate.HibernateException;
+import org.springframework.stereotype.Controller;
+import org.springframework.validation.BindingResult;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestMethod;
 
 @Controller
 @RequestMapping("/uilogin")
 public class UserLoginController {
 
-	private static Logger logger = Logger.getLogger(UserLoginController.class);
+	SystemSettingsService systemSettingsService = new SystemSettingsServiceImplementation();
 
 	@RequestMapping(method = RequestMethod.GET)
-	public String showForm(Map<String, User> model) {
-		User userLoginForm = new User();
-		model.put("user", userLoginForm);
+	public String showForm(Map<String, Login> model) {
+		Login userLoginForm = new Login();
+		model.put("login", userLoginForm);
 		return "uilogin";
 	}
 
 	@RequestMapping(method = RequestMethod.POST)
-	public String processForm(@Valid User user, BindingResult result,
-			Map<String, User> model) {
-		String userName = "Admin";
-		String password = "adminpass";
+	public String processForm(@Valid Login login, BindingResult result,
+			Map<String, Login> model) throws Exception {
 		if (result.hasErrors()) {
 			return "uilogin";
 		}
-		user = (User) model.get("user");
-		if (!user.getUserName().equals(userName)
-				|| !user.getPassword().equals(password)) {
-			//errors.rejectValue("login", "notmatch.login");
-			result.reject("notmatch.login", "invalid login!! Please try again");
-			//errors.reject("notmatch.login", "inavlid login");
-			user.clearFields();
-			return "uilogin";
-		} else {
-			model.put("user", user);
-			logger.info("Successful Login!! Now onto landing Page!!");
-			return "redirect:/ussdmenuitems.html";
-		}
+		login = (Login) model.get("login");
 
+		if (authenticate(login)) {
+			model.put("login", login);
+			return "redirect:/listussdmenuitems.html";
+		} else {
+			result.reject("notmatch.login", "invalid login!! Please try again");
+			login.clearFields();
+			return "uilogin";
+		}
 	}
 
-}
+	public boolean authenticate(Login login) throws Exception {
+
+		boolean exist = false;
+		try {
+			User user = systemSettingsService.getUserByName(login.userName,
+					login.password);
+			if (user == null) {
+				exist = false;
+			} else {
+				exist = true;
+			}
+		} catch (HibernateException e) {
+			e.printStackTrace();
+		}
+		return exist;
+	}
+}
\ No newline at end of file
diff --git a/src/metomeui/web/UssdMenuController.java b/src/metomeui/web/UssdMenuController.java
index 672505a..aeb75f2 100644
--- a/src/metomeui/web/UssdMenuController.java
+++ b/src/metomeui/web/UssdMenuController.java
@@ -1,16 +1,21 @@
 package metomeui.web;
 
+import java.util.ArrayList;
 import java.util.Date;
+import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
+import java.util.Set;
 
+import metomeui.dao.UssdMenuDao;
+import metomeui.dao.UssdMenuDaoImplementation;
 import metomeui.model.UssdKeywordStep;
 import metomeui.model.UssdMenuItem;
 import metomeui.model.UssdPredefInput;
 import metomeui.model.UssdPredefInputItem;
-import metomeui.model.UssdRequest;
 import metomeui.model.UssdTransactionKeyword;
 import metomeui.service.UssdMenuService;
+import metomeui.service.UssdMenuServiceImplementation;
 import metomeui.validator.UssdKeywordStepValidator;
 import metomeui.validator.UssdMenuItemValidator;
 import metomeui.validator.UssdPredefInputItemValidator;
@@ -20,22 +25,28 @@
 import org.apache.log4j.Logger;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Controller;
-import org.springframework.ui.Model;
 import org.springframework.ui.ModelMap;
 import org.springframework.validation.BindingResult;
 import org.springframework.web.bind.annotation.ModelAttribute;
 import org.springframework.web.bind.annotation.PathVariable;
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.RequestMethod;
+import org.springframework.web.servlet.ModelAndView;
 
+/**
+ * @author Sarahk
+ * 
+ */
 @Controller
-// @RequestMapping("/users")
 public class UssdMenuController {
 
 	private static Logger logger = Logger.getLogger(UssdMenuController.class);
 
 	@Autowired
-	private UssdMenuService ussdMenuService;
+	UssdMenuService ussdMenuService = new UssdMenuServiceImplementation();
+	@Autowired
+	UssdMenuDao ussdMenuDao = new UssdMenuDaoImplementation();
+
 	@Autowired
 	private UssdMenuItemValidator ussdMenuItemValidator;
 	@Autowired
@@ -47,6 +58,12 @@
 	@Autowired
 	private UssdKeywordStepValidator ussdKeywordStepValidator;
 
+	private static List<UssdPredefInputItem> predefInputItemsList = new ArrayList<UssdPredefInputItem>();
+	private static Set<UssdPredefInputItem> predefInputItemsSet = new HashSet<UssdPredefInputItem>();
+
+	private static List<UssdKeywordStep> keywordStepsList = new ArrayList<UssdKeywordStep>();
+	private static Set<UssdKeywordStep> keywordStepsSet = new HashSet<UssdKeywordStep>();
+
 	@RequestMapping("/hello")
 	public String printWelcome(ModelMap model) {
 
@@ -55,234 +72,863 @@
 		logger.info("Returning hello view with " + now);
 		model.addAttribute("now", now);
 		return "hello";
-
 	}
 
-	@RequestMapping("/ussdpredefinputitems")
-	public String listUssdPredefInputItems(Map<String, Object> map) {
+	/**
+	 * Predefined inputs and input items mapping functions
+	 * 
+	 * Function lists configured Predefined Inputs"
+	 */
+	@RequestMapping(value = "/listussdpredefinputs", method = RequestMethod.GET)
+	public String getPredefInputList(Map<String, Object> map) {
+		predefInputItemsList.clear();
+		map.put("predefInput", new UssdPredefInput());
+		map.put("predefInputList", ussdMenuService.listPredefInputs());
+		return "listussdpredefinputs";
+	}
+
+	/**
+	 * Retrieves "Add New Predefined Input" page
+	 */
+	@RequestMapping(value = "/addussdpredefinput", method = RequestMethod.GET)
+	public ModelAndView getPredefInput(
+			@ModelAttribute("ussdPredefInput") UssdPredefInput predefInput) {
+		if (null != predefInputItemsList) {
+			logger.info("PredefItemsList is not Null");
+			predefInput.setPredefInputItems(predefInputItemsList);
+		} else {
+			logger.info("PredefItemsList is Null");
+		}
+		return new ModelAndView("addussdpredefinput", "ussdPredefInput",
+				predefInput);
+	}
+
+	/**
+	 * Retrieves "Add New Predefined Input Item" page
+	 */
+	@RequestMapping(value = "/addnewussdpredefinputitem", method = RequestMethod.GET)
+	public String addPredefInputItemLink(Map<String, Object> map) {
 		map.put("ussdPredefInputItem", new UssdPredefInputItem());
-		map.put("ussdPredefInputItemList",
-				ussdMenuService.listUssdPredefInputItems());
-		return "ussdpredefinputitems";
+		return "addnewussdpredefinputitem";
 	}
 
-	@RequestMapping(value = "/addussdpredefinputitems", method = RequestMethod.GET)
-	public String addUssdPredefInputItemsLink(Map<String, Object> map) {
-		map.put("ussdPredefInputItem", new UssdPredefInputItem());
-		return "addussdpredefinputitems";
-	}
-	
-	@RequestMapping(value = "/addpredefinputitems", method = RequestMethod.POST)
-	public String addUssdPredefInputItems(
-			@ModelAttribute("ussdPredefInputItem") UssdPredefInputItem ussdPredefInputItem,
-			BindingResult result) {
+	/**
+	 * Add New Predefined Input Item to Predefined Input
+	 */
+	@RequestMapping(value = "/addussdpredefinputitem", method = RequestMethod.POST)
+	public String addPredefInputItem(
+			@ModelAttribute("ussdPredefInputItem") UssdPredefInputItem predefInputItem,
+			BindingResult result, Map<String, Object> map) {
 
-		ussdPredefInputItemValidator.validate(ussdPredefInputItem, result);
+		ussdPredefInputItemValidator.validate(predefInputItem, result);
 		if (result.hasErrors()) {
-			return "addussdpredefinputitems";
+			return "addnewussdpredefinputitem";
+		} else {
+			UssdPredefInput predefInput = new UssdPredefInput();
+			if (predefInputItemsSet.add(predefInputItem) == true) {
+				if (predefInputItem != null) {
+					try {
+						logger.info("add item to predefInputItemsList");
+						predefInputItemsList.add(predefInputItem);
+						predefInput.setPredefInputItems(predefInputItemsList);
+					} catch (Exception e) {
+						e.printStackTrace();
+						return "redirect:/listussdpredefinputs.html";
+					}
+				}
+			}
+			map.put("ussdPredefInput", predefInput);
+			return "addussdpredefinput";
+		}
+	}
+
+	/**
+	 * Add New Predefined Input
+	 */
+	@SuppressWarnings({ "unused" })
+	@RequestMapping(value = "/addussdpredefinput", method = RequestMethod.POST)
+	public String addPredefinedInput(
+			@ModelAttribute("ussdPredefInput") UssdPredefInput predefInput,
+			BindingResult result, Map<String, Object> map) {
+
+		ussdPredefInputValidator.validate(predefInput, result);
+		if (result.hasErrors()) {
+			return "addussdpredefinput";
+		} else {
+			if (predefInput != null) {
+				List<UssdPredefInputItem> ussdPredefInputItems = predefInput
+						.getPredefInputItems();
+
+				/** for each of the predefinputitems, add the predefinput id */
+				if (null != predefInputItemsList
+						&& predefInputItemsList.size() > 0) {
+					predefInput.setPredefInputItems(predefInputItemsList);
+
+					for (UssdPredefInputItem predefInputItem : predefInputItemsList) {
+
+						predefInputItem.setPredefInput(predefInput);
+						if (predefInputItem.getPredefInputItemEnabledFlag() == null) {
+							predefInputItem.setPredefInputItemEnabledFlag(0);
+						}
+					}
+				}
+			}
+			ussdMenuService.addPredefInput(predefInput);
+			if (!predefInputItemsList.isEmpty()) {
+				predefInputItemsList.clear();
+			}
+			map.put("ussdPredefInput", new UssdPredefInput());
+			map.put("predefInputList", ussdMenuService.listPredefInputs());
+			return "listussdpredefinputs";
+		}
+	}
+
+	/**
+	 * Retrieves the "Edit Existing Predefined Input" page
+	 */
+	@RequestMapping(value = "/editussdpredefinput/{predefInputId}", method = RequestMethod.GET)
+	public String retrieveEditPredefInputPage(@PathVariable long predefInputId,
+			Map<String, Object> map) {
+		predefInputItemsList = ussdMenuService
+				.listPredefInputItemsByPredefInputId(predefInputId);
+		UssdPredefInput existingUssdPredefInput = ussdMenuService
+				.getExistingPredefInput(predefInputId);
+		if (predefInputItemsList != null) {
+			existingUssdPredefInput.setPredefInputItems(predefInputItemsList);
+		}
+		map.put("ussdPredefInput", existingUssdPredefInput);
+		return "editussdpredefinput";
+	}
+
+	/**
+	 * Retrieves the "Add Predefined Input Item to Existing Input" Page
+	 */
+	@RequestMapping(value = "/editaddnewussdpredefinputitem/{predefInputId}", method = RequestMethod.GET)
+	public String addPredefInputItemOnEditLink(
+			@PathVariable long predefInputId, Map<String, Object> map) {
+		map.put("ussdPredefInputItem", new UssdPredefInputItem());
+		map.put("predefInputId", predefInputId);
+		return "editaddnewussdpredefinputitem";
+	}
+
+	/**
+	 * Retrieves the "Edit Existing Predef Input" page after adding a new input
+	 * item
+	 */
+	@RequestMapping(value = "/editaddnewussdpredefinputitem/{predefInputId}", method = RequestMethod.POST)
+	public String addNewPredefInputItemOnEdit(
+			@PathVariable long predefInputId,
+			@ModelAttribute("ussdPredefInputItem") UssdPredefInputItem predefInputItem,
+			BindingResult result, Map<String, Object> map) {
+
+		ussdPredefInputItemValidator.validate(predefInputItem, result,
+				predefInputId);
+		if (result.hasErrors()) {
+			map.put("predefInputId", predefInputId);
+			return "editussdpredefinput";
+		} else {
+			predefInputItemsList = ussdMenuService
+					.listPredefInputItemsByPredefInputId(predefInputId);
+			UssdPredefInput existingPredefInput = ussdMenuService
+					.getExistingPredefInput(predefInputId);
+			predefInputItem.setPredefInput(existingPredefInput);
+
+			if (null == predefInputItemsList) {
+				predefInputItemsList = new ArrayList<UssdPredefInputItem>();
+			}
+			predefInputItemsList.add(predefInputItem);
+			if (predefInputItemsList != null) {
+				existingPredefInput.setPredefInputItems(predefInputItemsList);
+			}
+			map.put("ussdPredefInput", existingPredefInput);
+			return "editussdpredefinput";
+		}
+	}
+
+	/**
+	 * Commit changes to an existing predefined input
+	 */
+	@RequestMapping(value = "/editussdpredefinput/{predefInputId}", method = RequestMethod.POST)
+	public String postChangesToPredefinedInput(
+			@PathVariable Long predefInputId,
+			@ModelAttribute("ussdPredefInput") UssdPredefInput predefInput,
+			BindingResult result) {
+		ussdPredefInputValidator.validate(predefInput, result);
+		if (result.hasErrors()) {
+			return "editussdpredefinput";
 		}
 
-		ussdMenuService.addUssdPredefInputItem(ussdPredefInputItem);
-		return "redirect:/ussdpredefinputitems.html";
-	}
+		// Assign id
+		predefInput.setPredefInputId(predefInputId);
 
-	@RequestMapping("/removepredefinputitem/{inputItemId}")
-	public String deleteUssdPredefInputItem(
-			@PathVariable("inputItemId") Integer inputItemId) {
-		ussdMenuService.removeUssdPredefInputItem(inputItemId);
-		return "redirect:/ussdpredefinputitems.html";
-	}
-
-	@RequestMapping("/ussdpredefinputs")
-	public String listUssdPredefInputs(Map<String, Object> map) {
-		map.put("ussdPredefInput", new UssdPredefInput());
-		map.put("ussdPredefInputList", ussdMenuService.listUssdPredefInputs());
-		return "ussdpredefinputs";
-	}
-
-	@RequestMapping("/retreivepredefinputs/?id={predefInputId}")
-	public String retrieveSinglePredefInputEntry(
-			@PathVariable("predefInputId") Integer predefInputId) {
-		ussdMenuService.retrieveSinglePredefInputEntry(predefInputId);
-		return "singlepredefinput";
-	}
-
-	@RequestMapping("/editpredefinput/{predefInputId}")
-	public String getEditPredefInputEntry(
-			@PathVariable("predefInputId") Integer predefInputId, Model model) {
-		logger.debug("Received request to show edit page");
-
-		// Retrieve existing entry and add to model
-		model.addAttribute("ussdPredefInput", predefInputId);
-
-		// This will resolve to /WEB-INF/jsp/editpagepredefinputs.jsp
-		return "editussdpredefinputs";
-	}
-
-	@RequestMapping(value = "/editpredefinput/{predefInputId}", method = RequestMethod.POST)
-	public String saveEditPredefInputEntry(
-			@ModelAttribute("ussdPredefInput") UssdPredefInput ussdPredefInput,
-			@PathVariable("predefInputId") Integer predefInputId,
-			BindingResult result) {
-		logger.debug("Received request to update predefined input");
-		ussdMenuService.updatePredefInput(ussdPredefInput, predefInputId);
-		return "editedussdpredefinputs";
-	}
-
-	@RequestMapping(value = "/addussdpredefinputs", method = RequestMethod.GET)
-	public String addUssdPredefInputsLink(Map<String, Object> map) {
-		map.put("ussdPredefInput", new UssdPredefInput());
-		return "addussdpredefinputs";
-	}
-	
-	@RequestMapping(value = "/addpredefinputs", method = RequestMethod.POST)
-	public String addUssdPredefInput(
-			@ModelAttribute("ussdPredefInput") UssdPredefInput ussdPredefInput,
-			BindingResult result) {
-
-		ussdPredefInputValidator.validate(ussdPredefInput, result);
-		if (result.hasErrors()) {
-			return "addussdpredefinputs";
+		predefInputItemsList = predefInput.getPredefInputItems();
+		if (predefInputItemsList != null && predefInputItemsList.size() > 0) {
+			for (UssdPredefInputItem predefInputItem : predefInputItemsList) {
+				predefInputItem.setPredefInput(predefInput);
+				if (predefInputItem.getPredefInputItemEnabledFlag() != 1) {
+					predefInputItem.setPredefInputItemEnabledFlag(0);
+				} else {
+					predefInputItem.setPredefInputItemEnabledFlag(1);
+				}
+			}
+			predefInput.setPredefInputItems(predefInputItemsList);
 		}
 
-		ussdMenuService.addUssdPredefInput(ussdPredefInput);
-		return "redirect:/ussdpredefinputs.html";
+		// Delegate to service
+		ussdMenuService.editPredefInput(predefInput);
+		return "redirect:/listussdpredefinputs.html";
 	}
 
-	@RequestMapping("/removepredefinput/{predefInputId}")
-	public String deleteUssdPredefInput(
-			@PathVariable("predefInputId") Integer predefInputId) {
-		ussdMenuService.removeUssdPredefInput(predefInputId);
-		return "redirect:/ussdpredefinputs.html";
+	@RequestMapping(value = "/activatepredefinputitem/{predefInputItemId}")
+	public String activatePredefInputItem(@PathVariable Long predefInputItemId,
+			@ModelAttribute("ussdPredefInput") UssdPredefInput predefInput,
+			Map<String, Object> map) {
+
+		UssdPredefInputItem predefInputItem = ussdMenuDao
+				.getExistingPredefInputItem(predefInputItemId);
+		predefInputItem.setPredefInputItemEnabledFlag(1);
+		Long predefInputId = predefInputItem.getPredefInput()
+				.getPredefInputId();
+		predefInputItemsList = ussdMenuService
+				.listPredefInputItemsByPredefInputId(predefInputId);
+		predefInput = ussdMenuService.getExistingPredefInput(predefInputId);
+
+		// Assign id
+		predefInput.setPredefInputId(predefInputId);
+		predefInput.setPredefInputItems(predefInputItemsList);
+		ussdMenuService.editPredefInput(predefInput);
+
+		map.put("ussdPredefInput.predefInputItems", ussdMenuService
+				.listPredefInputItemsByPredefInputId(predefInputId));
+		map.put("ussdPredefInput",
+				ussdMenuService.getExistingPredefInput(predefInputId));
+
+		map.put("predefInputId", predefInputId);
+		return "/editussdpredefinput";
 	}
 
-	@RequestMapping("/ussdtransactionkeywords")
-	public String listUssdTransactionKeywords(Map<String, Object> map) {
+	@RequestMapping(value = "/deactivatepredefinputitem/{predefInputItemId}")
+	public String deactivatePredefInputItem(
+			@PathVariable Long predefInputItemId,
+			@ModelAttribute("ussdPredefInput") UssdPredefInput predefInput,
+			Map<String, Object> map) {
+
+		UssdPredefInputItem predefInputItem = ussdMenuDao
+				.getExistingPredefInputItem(predefInputItemId);
+		predefInputItem.setPredefInputItemEnabledFlag(0);
+		Long predefInputId = predefInputItem.getPredefInput()
+				.getPredefInputId();
+		predefInputItemsList = ussdMenuService
+				.listPredefInputItemsByPredefInputId(predefInputId);
+		predefInput = ussdMenuService.getExistingPredefInput(predefInputId);
+
+		// Assign id
+		predefInput.setPredefInputId(predefInputId);
+		predefInput.setPredefInputItems(predefInputItemsList);
+		ussdMenuService.editPredefInput(predefInput);
+
+		map.put("ussdPredefInput.predefInputItems", ussdMenuService
+				.listPredefInputItemsByPredefInputId(predefInputId));
+		map.put("ussdPredefInput",
+				ussdMenuService.getExistingPredefInput(predefInputId));
+
+		map.put("predefInputId", predefInputId);
+		return "/editussdpredefinput";
+	}
+
+	/**
+	 * Delete an existing predefined input
+	 */
+	@RequestMapping(value = "/removepredefinput/{predefInputId}", method = RequestMethod.GET)
+	public String deletePredefInput(@PathVariable Long predefInputId,
+			Map<String, Object> map) {
+
+		ussdMenuService.deleteExistingPredefInput(predefInputId);
+		map.put("ussdPredefInput", new UssdPredefInput());
+		map.put("ussdPredefInputList", ussdMenuService.listPredefInputs());
+		return "redirect:/listussdpredefinputs.html";
+	}
+
+	/**
+	 * Delete an existing predefined input item
+	 */
+	@RequestMapping(value = "/removepredefinputitem/{inputItemId}", method = RequestMethod.GET)
+	public String deletePredefInputItem(@PathVariable Long inputItemId,
+			Map<String, Object> map) {
+
+		UssdPredefInputItem predefInputItem = ussdMenuService
+				.getExistingPredefInputItem(inputItemId);
+		UssdPredefInput predefInput = predefInputItem.getPredefInput();
+
+		predefInput.getPredefInputItems().remove(predefInputItem);
+		Long predefInputId = predefInputItem.getPredefInput()
+				.getPredefInputId();
+
+		ussdMenuService.deleteExistingPredefInputItem(inputItemId);
+		map.put("ussdPredefInput", predefInput);
+		map.put("ussdPredefInputItemsList", predefInput.getPredefInputItems());
+		return "redirect:/editussdpredefinput/" + predefInputId + ".html";
+	}
+
+	/**
+	 * Ussd Transaction Keywords mapping functions
+	 * 
+	 * Function lists configured Ussd Transaction Keywords"
+	 */
+	@RequestMapping(value = "/listussdtransactionkeywords", method = RequestMethod.GET)
+	public String listTransactionKeywords(Map<String, Object> map) {
 		map.put("ussdTransactionKeyword", new UssdTransactionKeyword());
 		map.put("ussdTransactionKeywordList",
-				ussdMenuService.listUssdTransactionKeywords());
-		return "ussdtransactionkeywords";
+				ussdMenuService.listTransactionKeywords());
+		return "listussdtransactionkeywords";
 	}
 
-	@RequestMapping(value = "/addussdtransactionkeywords", method = RequestMethod.GET)
-	public String addUssdTransactionKeywordsLink(Map<String, Object> map) {
-		map.put("ussdTransactionKeyword", new UssdTransactionKeyword());
-		return "addussdtransactionkeywords";
+	/**
+	 * Retrieves "Add New Transaction Keyword" page
+	 */
+	@RequestMapping(value = "/addussdtransactionkeyword", method = RequestMethod.GET)
+	public ModelAndView getTransactionKeyword(
+			@ModelAttribute("ussdTransactionKeyword") UssdTransactionKeyword transactionKeyword) {
+		return new ModelAndView("addussdtransactionkeyword",
+				"ussdTransactionKeyword", new UssdTransactionKeyword());
 	}
-	
-	@RequestMapping(value = "/addtransactionkeywords", method = RequestMethod.POST)
-	public String addUssdTransactionKeyword(
-			@ModelAttribute("ussdTransactionKeyword") UssdTransactionKeyword ussdTransactionKeyword,
-			BindingResult result) {
 
-		ussdTransactionKeywordValidator
-				.validate(ussdTransactionKeyword, result);
+	/**
+	 * Retrieves "Add New Keyword Step" page
+	 */
+	@RequestMapping(value = "/addnewussdkeywordstep", method = RequestMethod.GET)
+	public String addKeywordStepLink(Map<String, Object> map) {
+		map.put("ussdKeywordStep", new UssdKeywordStep());
+		return "addnewussdkeywordstep";
+	}
+
+	/**
+	 * Add New Keyword Step to transaction Keyword
+	 */
+	@RequestMapping(value = "/addussdkeywordstep", method = RequestMethod.POST)
+	public String addKeywordStep(
+			@ModelAttribute("ussdKeywordStep") UssdKeywordStep keywordStep,
+			BindingResult result, Map<String, Object> map) {
+
+		ussdKeywordStepValidator.validate(keywordStep, result);
 		if (result.hasErrors()) {
-			return "addussdtransactionkeywords";
+			return "addnewussdkeywordstep";
+		} else {
+			UssdTransactionKeyword transactionKeyword = new UssdTransactionKeyword();
+			if (keywordStepsSet.add(keywordStep) == true) {
+				if (keywordStep != null) {
+					try {
+						keywordStepsList.add(keywordStep);
+						transactionKeyword.setKeywordSteps(keywordStepsList);
+					} catch (Exception e) {
+						e.printStackTrace();
+						return "redirect:/listussdtransactionkeywords.html";
+					}
+				}
+			}
+			map.put("ussdTransactionKeyword", transactionKeyword);
+			return "addussdtransactionkeyword";
 		}
 
-		ussdMenuService.addUssdTransactionKeyword(ussdTransactionKeyword);
-		return "redirect:/ussdtransactionkeywords.html";
+	}
+
+	@RequestMapping(value = "/addussdtransactionkeyword", method = RequestMethod.POST)
+	public String addUssdTransactionKeyword(
+			@ModelAttribute("ussdTransactionKeyword") UssdTransactionKeyword transactionKeyword,
+			BindingResult result, Map<String, Object> map) {
+
+		ussdTransactionKeywordValidator.validate(transactionKeyword, result);
+		if (result.hasErrors()) {
+			return "addussdtransactionkeyword";
+		}
+
+		if (transactionKeyword != null) {
+
+			if (null != keywordStepsList && keywordStepsList.size() > 0) {
+
+				for (UssdKeywordStep keywordStep : keywordStepsList) {
+					keywordStep.setTransactionKeyword(transactionKeyword);
+					if (keywordStep.getHasPredefInputFlag() != 1) {
+						keywordStep.setHasPredefInputFlag(0);
+						keywordStep.setPredefInput(null);
+					}
+					if (keywordStep.getIsFirstStepFlag() != 1) {
+						keywordStep.setIsFirstStepFlag(0);
+					}
+					if (keywordStep.getIsLastStepFlag() != 1) {
+						keywordStep.setIsLastStepFlag(0);
+					}
+					if (keywordStep.getUseFixedValueFlag() != 1) {
+						keywordStep.setUseFixedValueFlag(0);
+					}
+				}
+			}
+			transactionKeyword.setKeywordSteps(keywordStepsList);
+			ussdMenuService.addTransactionKeyword(transactionKeyword);
+		}
+		if (!keywordStepsList.isEmpty()) {
+			keywordStepsList.clear();
+		}
+		map.put("ussdTransactionKeyword", new UssdTransactionKeyword());
+		map.put("ussdTransactionKeywordList",
+				ussdMenuService.listTransactionKeywords());
+
+		return "listussdtransactionkeywords";
+	}
+
+	/**
+	 * Retrieves the "Edit Existing Transaction Keyword" page
+	 */
+	@RequestMapping(value = "/editussdtransactionkeyword/{keywordId}", method = RequestMethod.GET)
+	public String retrieveExistingTransactionKeyword(
+			@PathVariable long keywordId, Map<String, Object> map) {
+
+		UssdTransactionKeyword existingTransactionKeyword = ussdMenuService
+				.getExistingTransactionKeyword(keywordId);
+
+		map.put("ussdTransactionKeyword", existingTransactionKeyword);
+		return "editussdtransactionkeyword";
+	}
+
+	/**
+	 * Retrieves the "Add Keyword Step to Existing Transaction Keyword" Page
+	 */
+	@RequestMapping(value = "/editaddnewussdkeywordstep/{keywordId}", method = RequestMethod.GET)
+	public String addKeywordStepOnEditLink(@PathVariable long keywordId,
+			Map<String, Object> map) {
+		map.put("ussdKeywordStep", new UssdKeywordStep());
+		map.put("keywordId", keywordId);
+		return "editaddnewussdkeywordstep";
+	}
+
+	/**
+	 * Retrieves the "Edit Existing Transaction Keyword" page after adding a new
+	 * step
+	 * 
+	 */
+	@RequestMapping(value = "/editaddnewussdkeywordstep/{keywordId}", method = RequestMethod.POST)
+	public String addNewKeywordStepOnEdit(@PathVariable long keywordId,
+			@ModelAttribute("ussdKeywordStep") UssdKeywordStep keywordStep,
+			BindingResult result, Map<String, Object> map) {
+
+		ussdKeywordStepValidator.validate(keywordStep, result, keywordId);
+		if (result.hasErrors()) {
+			map.put("keywordId", keywordId);
+			return "editaddnewussdkeywordstep";
+		}
+
+		keywordStepsList = ussdMenuService
+				.listKeywordStepByKeywordId(keywordId);
+		List<UssdKeywordStep> keywordsLinkedToPredefInput = new ArrayList<UssdKeywordStep>();
+		UssdPredefInput linkedPredefInput = new UssdPredefInput();
+		if (keywordStep.getPredefInput().getPredefInputId() != 0) {
+			linkedPredefInput = ussdMenuService
+					.getExistingPredefInput(keywordStep.getPredefInput()
+							.getPredefInputId());
+			if (linkedPredefInput != null) {
+				keywordsLinkedToPredefInput = ussdMenuDao
+						.getKeywordsLinkedToThisPredefInput(keywordStep
+								.getPredefInput().getPredefInputId());
+				if (keywordsLinkedToPredefInput.isEmpty()) {
+					keywordsLinkedToPredefInput = new ArrayList<UssdKeywordStep>();
+				}
+				keywordStep.setPredefInput(linkedPredefInput);
+			}
+		}
+
+		UssdTransactionKeyword existingTransactionKeyword = ussdMenuService
+				.getExistingTransactionKeyword(keywordId);
+		keywordStep.setTransactionKeyword(existingTransactionKeyword);
+
+		if ((keywordStep.getHasPredefInputFlag() == null)
+				|| (keywordStep.getHasPredefInputFlag() != 1)) {
+			keywordStep.setHasPredefInputFlag(0);
+			keywordStep.setPredefInput(null);
+		} else if (keywordStep.getHasPredefInputFlag() == 1) {
+			keywordStep.setHasPredefInputFlag(1);
+		} else if ((keywordStep.getIsFirstStepFlag() == null)
+				|| (keywordStep.getIsFirstStepFlag() != 1)) {
+			keywordStep.setIsFirstStepFlag(0);
+		} else if (keywordStep.getIsFirstStepFlag() == 1) {
+			keywordStep.setIsFirstStepFlag(1);
+		} else if ((keywordStep.getIsLastStepFlag() == null)
+				|| (keywordStep.getIsLastStepFlag() != 1)) {
+			keywordStep.setIsLastStepFlag(0);
+		} else if (keywordStep.getIsLastStepFlag() == 1) {
+			keywordStep.setIsLastStepFlag(1);
+		} else if ((keywordStep.getUseFixedValueFlag() == null)
+				|| (keywordStep.getUseFixedValueFlag() != 1)) {
+			keywordStep.setUseFixedValueFlag(0);
+			keywordStep.setFixedValue(null);
+		} else if (keywordStep.getUseFixedValueFlag() == 1) {
+			keywordStep.setUseFixedValueFlag(1);
+		}
+
+		if (null == keywordStepsList) {
+			keywordStepsList = new ArrayList<UssdKeywordStep>();
+		}
+
+		if (keywordStepsList != null) {
+			keywordStepsList.add(keywordStep);
+
+			if (linkedPredefInput != null) {
+				for (UssdKeywordStep linkedKeywordStep : keywordStepsList) {
+					if (null != (linkedKeywordStep.getPredefInput())) {
+						keywordsLinkedToPredefInput.add(linkedKeywordStep);
+					}
+				}
+				if (null != keywordsLinkedToPredefInput) {
+					if (null != linkedPredefInput) {
+						linkedPredefInput
+								.setKeywordSteps(keywordsLinkedToPredefInput);
+					}
+				}
+			}
+			existingTransactionKeyword.setKeywordSteps(keywordStepsList);
+		}
+		map.put("ussdTransactionKeyword", existingTransactionKeyword);
+		map.put("keywordId", keywordId);
+		return "editussdtransactionkeyword";
+	}
+
+	/**
+	 * Commit changes to an existing transaction keyword
+	 */
+	@RequestMapping(value = "/editussdtransactionkeyword/{keywordId}", method = RequestMethod.POST)
+	public String postChangesToTransactionKeyword(
+			@PathVariable Long keywordId,
+			@ModelAttribute("ussdTransactionKeyword") UssdTransactionKeyword transactionKeyword,
+			BindingResult result, Map<String, Object> map) {
+
+		ussdTransactionKeywordValidator.validate(transactionKeyword, result);
+		if (result.hasErrors()) {
+			return "editussdtransactionkeyword";
+		}
+
+		logger.info("here Now!!!!!!!!!!!!!!!SET ID!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
+		// Assign id
+		transactionKeyword.setKeywordId(keywordId);
+
+		keywordStepsList = transactionKeyword.getKeywordSteps();
+		if (keywordStepsList != null && keywordStepsList.size() > 0) {
+			for (UssdKeywordStep keywordStep : keywordStepsList) {
+				keywordStep.setTransactionKeyword(transactionKeyword);
+				if ((keywordStep.getHasPredefInputFlag() != 1)
+						|| (keywordStep.getHasPredefInputFlag() == null)) {
+					keywordStep.setHasPredefInputFlag(0);
+					UssdPredefInput predefInput = new UssdPredefInput();
+					keywordStep.setPredefInput(predefInput);
+				} else if (keywordStep.getHasPredefInputFlag() == 1) {
+					keywordStep.setHasPredefInputFlag(1);
+				} else if ((keywordStep.getIsFirstStepFlag() == null)
+						|| (keywordStep.getIsFirstStepFlag() != 1)) {
+					keywordStep.setIsFirstStepFlag(0);
+				} else if (keywordStep.getIsFirstStepFlag() == 1) {
+					keywordStep.setIsFirstStepFlag(1);
+				} else if ((keywordStep.getIsLastStepFlag() == null)
+						|| (keywordStep.getIsLastStepFlag() != 1)) {
+					keywordStep.setIsLastStepFlag(0);
+				} else if (keywordStep.getIsLastStepFlag() == 1) {
+					keywordStep.setIsLastStepFlag(1);
+				} else if ((keywordStep.getUseFixedValueFlag() == null)
+						|| (keywordStep.getUseFixedValueFlag() != 1)) {
+					keywordStep.setUseFixedValueFlag(0);
+					keywordStep.setFixedValue(null);
+				} else if (keywordStep.getUseFixedValueFlag() == 1) {
+					keywordStep.setUseFixedValueFlag(1);
+				}
+				ussdMenuService.editExistingKeywordStep(keywordStep);
+			}
+			transactionKeyword.setKeywordSteps(keywordStepsList);
+		}
+		ussdMenuService.editExistingTransactionKeyword(transactionKeyword);
+		if (!(keywordStepsList.isEmpty())) {
+			keywordStepsList.clear();
+		}
+		map.put("ussdTransactionKeyword", new UssdTransactionKeyword());
+		return "redirect:/listussdtransactionkeywords.html";
+	}
+
+	@RequestMapping(value = "/activatekeyword/{keywordId}")
+	public String activateTransactionKeyword(
+			@PathVariable long keywordId,
+			@ModelAttribute("ussdTransactionKeyword") UssdTransactionKeyword transactionKeyword,
+			Map<String, Object> map) {
+
+		// Assign id
+		transactionKeyword.setKeywordId(keywordId);
+		ussdMenuService.activateExistingKeyword(keywordId);
+
+		map.put("ussdTransactionKeyword", new UssdTransactionKeyword());
+		map.put("ussdTransactionKeywordList",
+				ussdMenuService.listTransactionKeywords());
+		return "redirect:/listussdtransactionkeywords.html";
+	}
+
+	@RequestMapping(value = "/deactivatekeyword/{keywordId}")
+	public String deactivateTransactionKeyword(
+			@PathVariable long keywordId,
+			@ModelAttribute("ussdTransactionKeyword") UssdTransactionKeyword transactionKeyword,
+			Map<String, Object> map) {
+
+		// Assign id
+		transactionKeyword.setKeywordId(keywordId);
+		ussdMenuService.deactivateExistingKeyword(keywordId);
+		map.put("ussdTransactionKeyword", new UssdTransactionKeyword());
+		map.put("ussdTransactionKeywordList",
+				ussdMenuService.listTransactionKeywords());
+		return "redirect:/listussdtransactionkeywords.html";
 	}
 
 	@RequestMapping("/removekeyword/{keywordId}")
 	public String deleteUssdTransactionKeyword(
-			@PathVariable("keywordId") Integer keywordId) {
-		ussdMenuService.removeUssdTransactionKeyword(keywordId);
-		return "redirect:/ussdtransactionkeywords.html";
+			@PathVariable("keywordId") Long keywordId, Map<String, Object> map) {
+		ussdMenuService.deleteTransactionKeyword(keywordId);
+		map.put("ussdTransactionKeyword", new UssdTransactionKeyword());
+		map.put("ussdTransactionKeywordList",
+				ussdMenuService.listTransactionKeywords());
+		return "redirect:/listussdtransactionkeywords.html";
 	}
 
-	@RequestMapping("/ussdkeywordsteps")
-	public String listUssdKeywordSteps(Map<String, Object> map) {
-		map.put("ussdKeywordStep", new UssdKeywordStep());
-		map.put("ussdKeywordStepList",
-				ussdMenuService.listUssdKeywordSteps());
-		return "ussdkeywordsteps";
-	}
-
-	@RequestMapping(value = "/addussdkeywordsteps", method = RequestMethod.GET)
-	public String addUssdKeywordStepsLink(Map<String, Object> map) {
-		map.put("ussdKeywordStep", new UssdKeywordStep());
-		return "addussdkeywordsteps";
-	}
-	
-	@RequestMapping(value = "/addkeywordsteps", method = RequestMethod.POST)
-	public String addUssdKeywordStep(
-			@ModelAttribute("ussdKeywordStep") UssdKeywordStep ussdKeywordStep,
-			BindingResult result) {
-
-		ussdKeywordStepValidator.validate(ussdKeywordStep, result);
-		if (result.hasErrors()) {
-			return "addussdkeywordsteps";
-		}
-logger.debug("here");
-		ussdMenuService.addUssdKeywordStep(ussdKeywordStep);
-		logger.debug("there");
-		return "redirect:/ussdkeywordsteps.html";
-	}
-
-	@RequestMapping("/removekeywordstep/{keywordStepId}")
+	/**
+	 * Delete an existing keyword step
+	 */
+	@RequestMapping(value = "/removekeywordstep/{keywordStepId}", method = RequestMethod.GET)
 	public String deleteUssdKeywordStep(
-			@PathVariable("keywordStepId") Integer keywordStepId) {
-		ussdMenuService.removeUssdKeywordStep(keywordStepId);
-		return "redirect:/ussdkeywordsteps.html";
+			@PathVariable("keywordStepId") Long keywordStepId,
+			Map<String, Object> map) {
+
+		UssdKeywordStep keywordStep = ussdMenuService
+				.getExistingKeywordStep(keywordStepId);
+		UssdTransactionKeyword transactionKeyword = keywordStep
+				.getTransactionKeyword();
+
+		UssdPredefInput predefInput = keywordStep.getPredefInput();
+		if (predefInput != null) {
+			predefInput.getKeywordSteps().remove(keywordStep);
+		}
+		transactionKeyword.getKeywordSteps().remove(keywordStep);
+
+		Long transactionKeywordId = keywordStep.getTransactionKeyword()
+				.getKeywordId();
+		// Delegate to service
+		ussdMenuService.deleteExistingKeywordStep(keywordStepId);
+		map.put("ussdTransactionKeyword", transactionKeyword);
+		map.put("ussdKeywordStepsList", transactionKeyword.getKeywordSteps());
+		return "redirect:/editussdtransactionkeyword/" + transactionKeywordId
+				+ ".html";
 	}
 
-	@RequestMapping("/ussdmenuitems")
-	public String listUssdMenuItems(Map<String, Object> map) {
+	/**
+	 * Ussd Menu Items mapping functions Function lists configured Ussd Menu
+	 * Items"
+	 */
+	@RequestMapping("/listussdmenuitems")
+	public String listMenuItems(Map<String, Object> map) {
 		map.put("ussdMenuItem", new UssdMenuItem());
-		map.put("ussdMenuItemsList", ussdMenuService.listUssdMenuItems());
-		return "ussdmenuitems";
+		map.put("ussdMenuItemsList", ussdMenuService.listMenuItems());
+		map.put("ussdTransactionKeywordsList",
+				ussdMenuService.listTransactionKeywords());
+		return "listussdmenuitems";
 	}
 
-	@RequestMapping(value = "/addussdmenuitems", method = RequestMethod.GET)
+	@RequestMapping(value = "/addussdmenuitem", method = RequestMethod.GET)
 	public String addUssdMenuItemLink(Map<String, Object> map) {
 		map.put("ussdMenuItem", new UssdMenuItem());
-		return "addussdmenuitems";
+		return "addussdmenuitem";
 	}
 
-	@RequestMapping(value = "/addmenuitems", method = RequestMethod.POST)
+	@RequestMapping(value = "/addussdmenuitem", method = RequestMethod.POST)
 	public String addUssdMenuItem(
-			@ModelAttribute("ussdMenuItem") UssdMenuItem ussdMenuItem,
-			BindingResult result) {
+			@ModelAttribute("ussdMenuItem") UssdMenuItem menuItem,
+			BindingResult result, Map<String, Object> map) {
 
-		ussdMenuItemValidator.validate(ussdMenuItem, result);
+		ussdMenuItemValidator.validate(menuItem, result);
 		if (result.hasErrors()) {
-			return "addussdmenuitems";
+			return "addussdmenuitem";
 		}
 
-		ussdMenuService.addUssdMenuItem(ussdMenuItem);
-		return "redirect:/ussdmenuitems.html";
+		List<UssdMenuItem> childMenuItemsList = new ArrayList<UssdMenuItem>();
+		Set<UssdMenuItem> childMenuItemsSet = new HashSet<UssdMenuItem>();
+		UssdMenuItem rootMenuItem = null;
+		if ((null == menuItem.getMenuItemKeyword().getKeywordId())
+				|| (menuItem.getMenuItemKeyword().getKeywordId() == 0)) {
+			menuItem.setMenuItemKeyword(null);
+		} else {
+			UssdTransactionKeyword menuItemKeyword = ussdMenuService
+					.getExistingTransactionKeyword(menuItem
+							.getMenuItemKeyword().getKeywordId());
+			menuItem.setMenuItemKeyword(menuItemKeyword);
+		}
+		if ((null != menuItem.getRootMenuItem().getMenuItemId())
+				&& (menuItem.getRootMenuItem().getMenuItemId() != 0)) {
+
+			/** Get all this menu's child menu Items */
+			childMenuItemsList = ussdMenuService
+					.getChildMenuItemsForParentMenuItem(menuItem
+							.getRootMenuItem().getMenuItemId());
+			rootMenuItem = ussdMenuService.getExistingMenuItem(menuItem
+					.getRootMenuItem().getMenuItemId());
+
+			if (childMenuItemsSet.add(menuItem) == true) {
+				childMenuItemsList.add(menuItem);
+			}
+
+			// rootMenuItem.setMenuItems(childMenuItemsList);
+			menuItem.setRootMenuItem(rootMenuItem);
+
+		} else {
+			menuItem.setRootMenuItem(rootMenuItem);
+		}
+
+		if ((menuItem.getMenuItemEnabledFlag() == null)
+				|| (menuItem.getMenuItemEnabledFlag() != 1)) {
+			menuItem.setMenuItemEnabledFlag(0);
+		}
+
+		logger.info("Got to add menu Item");
+		ussdMenuService.addMenuItem(menuItem);
+		if (!childMenuItemsList.isEmpty()) {
+			childMenuItemsList.clear();
+		}
+		return "redirect:/listussdmenuitems.html";
+	}
+
+	/**
+	 * Retrieves the "Edit Existing Menu Item" page
+	 */
+	@RequestMapping(value = "/editussdmenuitem/{menuItemId}", method = RequestMethod.GET)
+	public String retrieveExistingMenuItem(@PathVariable long menuItemId,
+			Map<String, Object> map) {
+
+		UssdMenuItem existingMenuItem = ussdMenuService
+				.getExistingMenuItem(menuItemId);
+
+		map.put("ussdMenuItem", existingMenuItem);
+		return "editussdmenuitem";
+	}
+
+	/**
+	 * Commit changes to an existing Menu Item
+	 */
+	@RequestMapping(value = "/editussdmenuitem/{menuItemId}", method = RequestMethod.POST)
+	public String postChangesToMenuItem(@PathVariable Long menuItemId,
+			@ModelAttribute("ussdMenuItem") UssdMenuItem menuItem,
+			BindingResult result, Map<String, Object> map) {
+
+		/*
+		 * ussdMenuItemValidator.validate(menuItem, result, menuItemId); if
+		 * (result.hasErrors()) { map.put("menuItemId", menuItemId); return
+		 * "editussdmenuitem"; }
+		 */
+
+		// Assign id
+		menuItem.setMenuItemId(menuItemId);
+
+		List<UssdMenuItem> childMenuItemsList = new ArrayList<UssdMenuItem>();
+		Set<UssdMenuItem> childMenuItemsSet = new HashSet<UssdMenuItem>();
+		UssdMenuItem rootMenuItem = new UssdMenuItem();
+		if ((null == menuItem.getMenuItemKeyword().getKeywordId())
+				|| (menuItem.getMenuItemKeyword().getKeywordId() == 0)) {
+			menuItem.setMenuItemKeyword(null);
+		} else {
+			UssdTransactionKeyword menuItemKeyword = ussdMenuService
+					.getExistingTransactionKeyword(menuItem
+							.getMenuItemKeyword().getKeywordId());
+			menuItem.setMenuItemKeyword(menuItemKeyword);
+		}
+		if ((null == menuItem.getRootMenuItem().getMenuItemId())
+				|| (menuItem.getRootMenuItem().getMenuItemId() == 0)) {
+			menuItem.setRootMenuItem(rootMenuItem);
+		} else if (null != menuItem.getRootMenuItem().getMenuItemId()) {
+			// || (0 != menuItem.getRootMenuItem().getMenuItemId())) {
+
+			/** Get all this menu's child menu Items */
+			childMenuItemsList = ussdMenuService
+					.getChildMenuItemsForParentMenuItem(menuItem
+							.getRootMenuItem().getMenuItemId());
+			rootMenuItem = ussdMenuService.getExistingMenuItem(menuItem
+					.getRootMenuItem().getMenuItemId());
+
+			if (childMenuItemsSet.add(menuItem) == true) {
+				childMenuItemsList.add(menuItem);
+			}
+			rootMenuItem.setMenuItems(childMenuItemsList);
+			menuItem.setRootMenuItem(rootMenuItem);
+		}
+
+		if ((menuItem.getMenuItemEnabledFlag() == null)
+				|| (menuItem.getMenuItemEnabledFlag() != 1)) {
+			menuItem.setMenuItemEnabledFlag(0);
+		}
+		ussdMenuService.editExistingMenuItem(menuItem);
+		return "redirect:/listussdmenuitems.html";
+	}
+
+	@RequestMapping(value = "/activatemenuitem/{menuItemId}")
+	public String activateMenuItem(@PathVariable long menuItemId,
+			@ModelAttribute("ussdMenuItem") UssdMenuItem menuItem,
+			Map<String, Object> map) {
+
+		// Assign id
+		menuItem.setMenuItemId(menuItemId);
+		ussdMenuService.activateExistingMenuItem(menuItemId);
+
+		map.put("ussdMenuItem", new UssdMenuItem());
+		map.put("ussdMenuItemsList", ussdMenuService.listMenuItems());
+		map.put("ussdTransactionKeywordsList",
+				ussdMenuService.listTransactionKeywords());
+		return "redirect:/listussdmenuitems.html";
+	}
+
+	@RequestMapping(value = "/deactivatemenuitem/{menuItemId}")
+	public String deactivateMenuItem(@PathVariable long menuItemId,
+			@ModelAttribute("ussdMenuItem") UssdMenuItem menuItem,
+			Map<String, Object> map) {
+
+		// Assign id
+		menuItem.setMenuItemId(menuItemId);
+		ussdMenuService.deactivateExistingMenuItem(menuItemId);
+		map.put("ussdMenuItem", new UssdMenuItem());
+		map.put("ussdMenuItemsList", ussdMenuService.listMenuItems());
+		map.put("ussdTransactionKeywordsList",
+				ussdMenuService.listTransactionKeywords());
+		return "redirect:/listussdmenuitems.html";
 	}
 
 	@RequestMapping("/removemenuitem/{menuItemId}")
 	public String deleteUssdMenuItem(
-			@PathVariable("menuItemId") Integer menuItemId) {
-		ussdMenuService.removeUssdMenuItem(menuItemId);
-		return "redirect:/ussdmenuitems.html";
+			@PathVariable("menuItemId") Long menuItemId, Map<String, Object> map) {
+
+		ussdMenuService.deleteMenuItem(menuItemId);
+
+		map.put("ussdMenuItem", new UssdMenuItem());
+		map.put("ussdMenuItemsList", ussdMenuService.listMenuItems());
+		map.put("ussdTransactionKeywordsList",
+				ussdMenuService.listTransactionKeywords());
+		return "redirect:/listussdmenuitems.html";
 	}
 
-	@RequestMapping("/ussdrequests")
-	public String listUssdRequests(Map<String, Object> map) {
-		map.put("ussdRequest", new UssdRequest());
-		map.put("ussdRequestsList",
-				ussdMenuService.listUssdRequests());
-		return "ussdrequests";
-	}
-	
-	// Create model attributes for linking across models
+	/**
+	 * Create model attributes for linking across models
+	 */
 	@ModelAttribute("predefInputList")
-	public List<UssdPredefInput> populatePredefInputIdAndNameList() {
-		return ussdMenuService.listUssdPredefInputs();
+	public List<UssdPredefInput> populatePredefInputList() {
+		return ussdMenuService.listPredefInputs();
 	}
 
 	@ModelAttribute("transactionKeywordList")
-	public List<UssdTransactionKeyword> populateKeywordIdAndNameList() {
-		return ussdMenuService.listUssdTransactionKeywords();
+	public List<UssdTransactionKeyword> populateTransactionKeywordsList() {
+		return ussdMenuService.listTransactionKeywords();
+	}
+
+	@ModelAttribute("keywordStepList")
+	public List<UssdKeywordStep> populateKeywordStepsList() {
+		return ussdMenuService.listKeywordSteps();
 	}
 
 	@ModelAttribute("menuItemList")
-	public List<UssdMenuItem> populateMenuItemIdAndNameList() {
-		return ussdMenuService.listUssdMenuItems();
+	public List<UssdMenuItem> populateMenuItemList() {
+		return ussdMenuService.listMenuItems();
 	}
 }
\ No newline at end of file
diff --git a/test/metomeui/dao/SystemSettingsDaoImplementationTest.java b/test/metomeui/dao/SystemSettingsDaoImplementationTest.java
new file mode 100644
index 0000000..4cadd69
--- /dev/null
+++ b/test/metomeui/dao/SystemSettingsDaoImplementationTest.java
@@ -0,0 +1,150 @@
+package metomeui.dao;
+
+import static org.junit.Assert.*;
+
+import java.text.MessageFormat;
+
+import metomeui.model.ContactForm;
+import metomeui.model.Login;
+import metomeui.model.User;
+import metomeui.model.UssdMenuItem;
+import metomeui.model.UssdPredefInput;
+import metomeui.model.UssdPredefInputItem;
+
+import org.hibernate.HibernateException;
+import org.hibernate.Query;
+import org.hibernate.Session;
+import org.hibernate.SessionFactory;
+import org.junit.Test;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Repository;
+
+public class SystemSettingsDaoImplementationTest {
+
+	private SystemSettingsDaoImplementation systemSettingsDao = new SystemSettingsDaoImplementation();
+	private UssdMenuDao ussdMenuDao = new UssdMenuDaoImplementation();
+
+	@Test
+	public void testAddMenuItem() throws Exception {
+		ussdMenuDao = new UssdMenuDaoImplementation();
+		UssdMenuItem ussdMenuItem = new UssdMenuItem();
+		ussdMenuItem.setMenuItemName("afdhj");
+		String name = ussdMenuItem.getMenuItemName();
+		assertEquals(ussdMenuItem.getMenuItemName(), "afdhj");
+		ussdMenuItem.setRootMenuItem(null);
+		assertNull(ussdMenuItem.getRootMenuItem());
+
+		ussdMenuDao.addMenuItem(ussdMenuItem);
+		
+		//org.junit.Assert.assertTrue("true", ussdMenuDao.addMenuItem(ussdMenuItem));
+	}
+
+	@Test
+	public void testSaveRecord() throws Exception {
+
+		Session session = HibernateUtil.getSessionFactory().getCurrentSession();
+		session.beginTransaction();
+
+		User user = new User();
+		user.setUserName("afdhj");
+		user.setPassword("vHJABS");
+		user.setFirstName("Trror");
+		user.setLastName("asfdh");
+		user.setMiddleName("saghgd");
+		user.setRole("fadgf");
+		user.setEmail("dfs@hgfshasf.com");
+		user.setTelephone("safdgh");
+
+		String userName = "afdhj";
+		String password = "vHJABS";
+
+		session.saveOrUpdate(user);
+		systemSettingsDao.addUser(user);
+
+		org.junit.Assert.assertSame(session.saveOrUpdate(user), systemSettingsDao.addUser(user));
+
+	}
+
+	@Test
+	public void testUserFunctions() throws Exception {
+
+		String userName = "testuname";
+		String password = "testpass";
+
+		User user = new User();
+		user.setUserName("testuname");
+		user.setPassword("testpass");
+		user.setFirstName("Trror");
+		user.setLastName("asfdh");
+		user.setMiddleName("saghgd");
+		user.setRole("fadgf");
+		user.setEmail("dfs@hgfshasf.com");
+		user.setTelephone("safdgh");
+		systemSettingsDao.addUser(user);
+
+		Session session = HibernateUtil.getSessionFactory().getCurrentSession();
+		session.beginTransaction();
+		User user1 = new User();
+		user1 = (User) session
+				.createQuery(
+						"from User user "
+								+ "where user.userName = :username and user.password = :password")
+				.setParameter("username", userName)
+				.setParameter("password", password).setMaxResults(1)
+				.uniqueResult();
+
+		User user2 = systemSettingsDao.getUserByName(userName, password);
+
+		assertEquals(user1, user2);
+
+		Login login1 = new Login();
+		login1.setUserName("testuname");
+		login1.setPassword("testpass");
+		User user3 = systemSettingsDao.getUserByName(userName, password);
+
+		assertEquals(user1, user3);
+
+		systemSettingsDao.removeUser(user.getUserId());
+		user1 = (User) session
+				.createQuery("from User user " + "where user.userId = :userid")
+				.setParameter("userid", user.getUserId()).setMaxResults(1)
+				.uniqueResult();
+
+		// assertNull(user1);
+	}
+
+	@Test
+	public void testPredefInputSave() throws Exception {
+
+		UssdPredefInput predefInput = new UssdPredefInput();
+		predefInput.setPredefInputName("Sales");
+		predefInput.setPredefInputDescription("Test");
+		ussdMenuDao.addPredefInput(predefInput);
+
+		UssdPredefInputItem predefInputItem = new UssdPredefInputItem("Nina",
+				"Mayers", 4, 0);
+		UssdPredefInputItem predefInputItem2 = new UssdPredefInputItem("Tony",
+				"Almeida", 6, 1);
+
+		predefInputItem.setPredefInput(predefInput);
+		predefInputItem2.setPredefInput(predefInput);
+
+	}
+
+	@Test
+	public void testCheckIfUserExists() throws Exception {
+		// UserDaoImplementation userDaoImplementation = new
+		String SELECT_STATEMENT = MessageFormat
+				.format("SELECT count(user) FROM {0} AS user WHERE user.userName = :{1} AND user.password != :{2}",
+						User.class.getName(), Constants.NAME_PROP_NAME,
+						Constants.PASS_PROP_PASS);
+		Session session = sessionFactory.getCurrentSession();
+		Query query = session.createQuery(SELECT_STATEMENT);
+		query.setString(Constants.NAME_PROP_NAME, "afdhj");
+		query.setString(Constants.PASS_PROP_PASS, "vHJABS");
+		query.setMaxResults(1);
+		long count = (Long) query.uniqueResult();
+		assertEquals(count, 1);
+
+	}
+}
\ No newline at end of file
diff --git a/test/metomeui/model/MessagesTests.java b/test/metomeui/model/MessagesTests.java
index abb173a..e308e53 100644
--- a/test/metomeui/model/MessagesTests.java
+++ b/test/metomeui/model/MessagesTests.java
@@ -2,17 +2,17 @@
 
 import static org.junit.Assert.*;
 
-import metomeui.model.Messages;
+import metomeui.model.Message;
 
 import org.junit.Test;
 
 public class MessagesTests {
 
-    private Messages message;
+    private Message message;
 
     @Test
     public void testSetAndGetMessageId() {
-    	message = new Messages();
+    	message = new Message();
         int testMessageId = 3;
         assertEquals(0, 0, 0); 
         message.setMessageId(testMessageId);
@@ -21,7 +21,7 @@
     
     @Test
     public void testSetAndGetLanguageId() {
-    	message = new Messages();
+    	message = new Message();
         int testLanguageId = 456;
         assertEquals(0, 0, 0); 
         message.setLanguageId(testLanguageId);
@@ -30,7 +30,7 @@
     
     @Test
     public void testSetAndGetMessageCode() {
-    	message = new Messages();
+    	message = new Message();
         int testMessageCode = 34;
         assertEquals(0, 0, 0); 
         message.setMessageCode(testMessageCode);
@@ -39,7 +39,7 @@
     
     @Test
     public void testSetAndGetMessageDesc() {
-    	message = new Messages();
+    	message = new Message();
         String testMessageDesc = "aMessageDesc";
         assertNull(message.getMessageDesc());
         message.setMessageDesc(testMessageDesc);
@@ -48,7 +48,7 @@
 
     @Test
     public void testSetAndGetMessageText() {
-    	message = new Messages();
+    	message = new Message();
     	String testMessageText = "aMessageText";
         assertEquals(0, 0, 0);    
         message.setMessageText(testMessageText);
diff --git a/test/metomeui/model/UssdMenuModelTest.java b/test/metomeui/model/UssdMenuModelTest.java
index 816cedb..52aa606 100644
--- a/test/metomeui/model/UssdMenuModelTest.java
+++ b/test/metomeui/model/UssdMenuModelTest.java
@@ -14,7 +14,7 @@
     public void testSetAndGetPredefInputId() {
         Integer testPredefInputId = 1;
         assertNull(ussdPredefInput.getPredefInputId());
-        ussdPredefInput.setPredefInputId(testPredefInputId);
+       // ussdPredefInput.setPredefInputId(testPredefInputId);
         assertEquals(testPredefInputId, ussdPredefInput.getPredefInputId());
     }
     
diff --git a/test/metomeui/service/UserServiceTest.java b/test/metomeui/service/UserServiceTest.java
new file mode 100644
index 0000000..dc0f526
--- /dev/null
+++ b/test/metomeui/service/UserServiceTest.java
@@ -0,0 +1,5 @@
+package metomeui.service;
+
+public class UserServiceTest {
+
+}
diff --git a/test/metomeui/web/UserControllerTest.java b/test/metomeui/web/UserControllerTest.java
new file mode 100644
index 0000000..acadc83
--- /dev/null
+++ b/test/metomeui/web/UserControllerTest.java
@@ -0,0 +1,45 @@
+package metomeui.web;
+
+import org.hibernate.SessionFactory;
+import org.junit.Test;
+
+import junit.framework.Assert;
+import metomeui.dao.LoginDao;
+import metomeui.dao.LoginDaoImplementation;
+import metomeui.dao.SystemSettingsDao;
+import metomeui.dao.SystemSettingsDaoImplementation;
+import metomeui.model.Login;
+import metomeui.model.User;
+
+public class UserControllerTest {
+
+	@Test
+	public void testUserAuthentication() throws Exception {
+		SessionFactory sessionFactory = null;
+		UserLoginController userLoginController = new UserLoginController();
+		SystemSettingsDao userDao = new SystemSettingsDaoImplementation();
+		
+		//LoginDao loginDao = new LoginDaoImplementation(sessionFactory);
+		User user = new User();
+		Login login = new Login();
+		user.setUserName("test");
+		user.setPassword("pass");
+
+		//Assert.assertEquals(
+				//loginDao.checkIfUserExists(user.getUserName(),
+					//	user.getPassword()), true);
+		
+		
+
+		// ModelAndView modelAndView = userLoginController.handleRequest(null,
+		// null);
+		// assertEquals("uilogin", modelAndView.getViewName());
+		// assertNotNull(modelAndView.getModel());
+		// String nowValue = (String) modelAndView.getModel().get("now");
+		// assertNotNull(nowValue);
+		// }
+		//
+		// return userService.checkIfUserExists(userName, password);
+
+	}
+}